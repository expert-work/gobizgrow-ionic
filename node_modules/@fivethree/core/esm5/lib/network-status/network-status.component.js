/**
 * @fileoverview added by tsickle
 * Generated from: lib/network-status/network-status.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter } from '@angular/core';
import { trigger, transition, style, animate } from '@angular/animations';
var FivNetworkStatus = /** @class */ (function () {
    function FivNetworkStatus() {
        this.visible = true;
        this.status = 'online';
        this.onClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    FivNetworkStatus.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    FivNetworkStatus.prototype.show = /**
     * @return {?}
     */
    function () {
        this.visible = true;
    };
    /**
     * @return {?}
     */
    FivNetworkStatus.prototype.hide = /**
     * @return {?}
     */
    function () {
        this.visible = false;
    };
    /**
     * @param {?} status
     * @return {?}
     */
    FivNetworkStatus.prototype.setStatus = /**
     * @param {?} status
     * @return {?}
     */
    function (status) {
        this.status = status;
    };
    /**
     * @return {?}
     */
    FivNetworkStatus.prototype.FivNetworkStatusClicked = /**
     * @return {?}
     */
    function () {
        this.onClick.emit(this);
    };
    FivNetworkStatus.decorators = [
        { type: Component, args: [{
                    selector: 'fiv-network-status',
                    template: "<ion-chip [@status] (click)=\"FivNetworkStatusClicked()\" *ngIf=\"visible\">\n  <fiv-icon [badge]=\"-1\" [fivCenter] [off]=\"status === 'offline'\" name=\"cloud\"></fiv-icon>\n</ion-chip>",
                    animations: [
                        trigger('status', [
                            transition('void => *', [
                                style({ opacity: 0 }),
                                animate('200ms ease-out', style({ opacity: 1 }))
                            ]),
                            transition('* => void', [
                                style({ opacity: 1 }),
                                animate('550ms 200ms ease-in', style({ opacity: 0 }))
                            ])
                        ])
                    ],
                    styles: [":host{position:absolute;top:66px;right:8px}ion-chip{width:56px}fiv-icon{--fiv-icon-color:var(--ion-color-dark)}"]
                }] }
    ];
    /** @nocollapse */
    FivNetworkStatus.ctorParameters = function () { return []; };
    return FivNetworkStatus;
}());
export { FivNetworkStatus };
if (false) {
    /** @type {?} */
    FivNetworkStatus.prototype.visible;
    /** @type {?} */
    FivNetworkStatus.prototype.status;
    /** @type {?} */
    FivNetworkStatus.prototype.onClick;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmV0d29yay1zdGF0dXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZpdmV0aHJlZS9jb3JlLyIsInNvdXJjZXMiOlsibGliL25ldHdvcmstc3RhdHVzL25ldHdvcmstc3RhdHVzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsWUFBWSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hFLE9BQU8sRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUUxRTtJQXVCRTtRQUxBLFlBQU8sR0FBRyxJQUFJLENBQUM7UUFDZixXQUFNLEdBQXlCLFFBQVEsQ0FBQztRQUV4QyxZQUFPLEdBQUcsSUFBSSxZQUFZLEVBQW9CLENBQUM7SUFFaEMsQ0FBQzs7OztJQUVoQixtQ0FBUTs7O0lBQVIsY0FBWSxDQUFDOzs7O0lBRWIsK0JBQUk7OztJQUFKO1FBQ0UsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7SUFDdEIsQ0FBQzs7OztJQUVELCtCQUFJOzs7SUFBSjtRQUNFLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSyxDQUFDO0lBQ3ZCLENBQUM7Ozs7O0lBRUQsb0NBQVM7Ozs7SUFBVCxVQUFVLE1BQTRCO1FBQ3BDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7Ozs7SUFFRCxrREFBdUI7OztJQUF2QjtRQUNFLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzFCLENBQUM7O2dCQXpDRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsdU1BQThDO29CQUU5QyxVQUFVLEVBQUU7d0JBQ1YsT0FBTyxDQUFDLFFBQVEsRUFBRTs0QkFDaEIsVUFBVSxDQUFDLFdBQVcsRUFBRTtnQ0FDdEIsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDO2dDQUNyQixPQUFPLENBQUMsZ0JBQWdCLEVBQUUsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7NkJBQ2pELENBQUM7NEJBQ0YsVUFBVSxDQUFDLFdBQVcsRUFBRTtnQ0FDdEIsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDO2dDQUNyQixPQUFPLENBQUMscUJBQXFCLEVBQUUsS0FBSyxDQUFDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7NkJBQ3RELENBQUM7eUJBQ0gsQ0FBQztxQkFDSDs7aUJBQ0Y7Ozs7SUEwQkQsdUJBQUM7Q0FBQSxBQTFDRCxJQTBDQztTQXpCWSxnQkFBZ0I7OztJQUMzQixtQ0FBZTs7SUFDZixrQ0FBd0M7O0lBRXhDLG1DQUErQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IHRyaWdnZXIsIHRyYW5zaXRpb24sIHN0eWxlLCBhbmltYXRlIH0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2Zpdi1uZXR3b3JrLXN0YXR1cycsXG4gIHRlbXBsYXRlVXJsOiAnLi9uZXR3b3JrLXN0YXR1cy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL25ldHdvcmstc3RhdHVzLmNvbXBvbmVudC5zY3NzJ10sXG4gIGFuaW1hdGlvbnM6IFtcbiAgICB0cmlnZ2VyKCdzdGF0dXMnLCBbXG4gICAgICB0cmFuc2l0aW9uKCd2b2lkID0+IConLCBbXG4gICAgICAgIHN0eWxlKHsgb3BhY2l0eTogMCB9KSxcbiAgICAgICAgYW5pbWF0ZSgnMjAwbXMgZWFzZS1vdXQnLCBzdHlsZSh7IG9wYWNpdHk6IDEgfSkpXG4gICAgICBdKSxcbiAgICAgIHRyYW5zaXRpb24oJyogPT4gdm9pZCcsIFtcbiAgICAgICAgc3R5bGUoeyBvcGFjaXR5OiAxIH0pLFxuICAgICAgICBhbmltYXRlKCc1NTBtcyAyMDBtcyBlYXNlLWluJywgc3R5bGUoeyBvcGFjaXR5OiAwIH0pKVxuICAgICAgXSlcbiAgICBdKVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIEZpdk5ldHdvcmtTdGF0dXMgaW1wbGVtZW50cyBPbkluaXQge1xuICB2aXNpYmxlID0gdHJ1ZTtcbiAgc3RhdHVzOiAnb25saW5lJyB8ICdvZmZsaW5lJyA9ICdvbmxpbmUnO1xuXG4gIG9uQ2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPEZpdk5ldHdvcmtTdGF0dXM+KCk7XG5cbiAgY29uc3RydWN0b3IoKSB7fVxuXG4gIG5nT25Jbml0KCkge31cblxuICBzaG93KCkge1xuICAgIHRoaXMudmlzaWJsZSA9IHRydWU7XG4gIH1cblxuICBoaWRlKCkge1xuICAgIHRoaXMudmlzaWJsZSA9IGZhbHNlO1xuICB9XG5cbiAgc2V0U3RhdHVzKHN0YXR1czogJ29ubGluZScgfCAnb2ZmbGluZScpIHtcbiAgICB0aGlzLnN0YXR1cyA9IHN0YXR1cztcbiAgfVxuXG4gIEZpdk5ldHdvcmtTdGF0dXNDbGlja2VkKCkge1xuICAgIHRoaXMub25DbGljay5lbWl0KHRoaXMpO1xuICB9XG59XG4iXX0=