{"version":3,"sources":["webpack:///src/app/services/apis.service.ts","webpack:///src/app/services/toast.service.ts"],"names":["ApisService","httpService","http","storageService","router","imageUploadUrl","apiUrl","get","blobData","name","ext","auth_token","formData","FormData","append","post","file","split","pop","id","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","blob","Blob","type","fileUrl","myArray","result","reduce","unique","o","some","obj","sort","a","b","x","characters","charactersLength","charAt","Math","floor","random","postData","ToastService","toastController","infoMessage","create","message","duration","toast","present"],"mappings":"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","file":"images-new-new-module-ngfactory-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpService } from './http.service';\nimport { HttpClient } from '@angular/common/http';\nimport { StorageService } from './storage.service';\nimport { environment } from '../../environments/environment';\n\nexport interface ApiImage {\n  _id: string;\n  name: string;\n  createdAt: Date;\n  url: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApisService {\n\n  constructor(\n    private httpService: HttpService,\n    private http: HttpClient,\n    private storageService: StorageService,\n    private router: Router\n  ) { }\n\n\n\n\n\n  // Image Upload Starts\n\n  imageUploadUrl = environment.apiUrl+'uploads';\n\n  getImages() {\n    return this.http.get<ApiImage[]>(`${this.imageUploadUrl}/image`);\n  }\n \n  uploadImage(blobData, name, ext,auth_token:any) {\n    const formData = new FormData();\n    formData.append('file', blobData, `myimage.${ext}`);\n    formData.append('name', name);\n    formData.append('auth_token', auth_token);\n\n    return this.http.post(`${this.imageUploadUrl}`, formData);\n  }\n \n  uploadImageFile(file: File, auth_token:any) {\n    const ext = file.name.split('.').pop();\n    const formData = new FormData();\n    formData.append('file', file, `myimage.${ext}`);\n    formData.append('name', file.name);\n    formData.append('auth_token', auth_token);\n\n    return this.http.post(`${this.imageUploadUrl}`, formData);\n  }\n \n  \n  deleteImage(id) {\n    return this.http.delete(`${this.imageUploadUrl}/image/${id}`);\n  }\n\n  b64toBlob(b64Data, contentType = '', sliceSize = 512) {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n \n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n \n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n \n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n \n    const blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n  }\n  // Image Upload End\n\n\n\n  getImageUrl(file:any){\n    return environment.fileUrl+file;\n  }\n  getThumbImageUrl(file:any){\n    return environment.fileUrl+'thumb/'+file;\n  }\n\n  sortArray(myArray:any) {\n    var result = myArray.reduce((unique, o) => {\n      if(!unique.some(obj => obj.id === o.id)) {\n        unique.push(o);\n      }\n      return unique;\n    },[]);\n   \n    return result.sort(function(a, b) {\n        return b.id-a.id ;\n    });\n}\n\nisDefined(x:any) {\n  if (x == null) {\n      return false;\n  }\n  if (x === null) {\n      return false;\n  }\n  if (typeof x === 'undefined') {\n      return false;\n  }\n  return true;\n}\n\n makeid(length:Number) {\n  var result           = '';\n  var characters       = 'abcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n\n\nsignupComplete(postData: any): Observable<any> {\n  return this.httpService.post('signup-complete',postData);\n}\n\n\n //Customers\n\ndashboard(postData: any): Observable<any> {\n  return this.httpService.post('dashboard',postData);\n}\n\ncustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/all',postData);\n}\n\ninvoices(postData: any): Observable<any> {\n  return this.httpService.post('invoices/all',postData);\n}\n\nnextInvoice(postData: any): Observable<any> {\n  return this.httpService.post('invoices/next',postData);\n}\n\nitems(postData: any): Observable<any> {\n  return this.httpService.post('items/all',postData);\n}\ncategories(postData: any): Observable<any> {\n  return this.httpService.post('categories/all',postData);\n}\n\npayments(postData: any): Observable<any> {\n  return this.httpService.post('payments/all',postData);\n}\n\nexpenses(postData: any): Observable<any> {\n  return this.httpService.post('expenses/all',postData);\n}\n\ntaxes(postData: any): Observable<any> {\n  return this.httpService.post('taxes/all',postData);\n}\nimages(postData: any): Observable<any> {\n  return this.httpService.post('images/all',postData);\n}\n\ndeleteCustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/delete',postData);\n}\n\ncustomerAdd(postData: any): Observable<any> {\n  return this.httpService.post('customers/add',postData);\n}\ncustomerEdit(auth_token:any,postData: any): Observable<any> {\n  return this.httpService.post('customers/edit/'+auth_token,postData);\n}\n\ncategoryAdd(postData: any): Observable<any> {\n  return this.httpService.post('categories/add',postData);\n}\nitemAdd(postData: any): Observable<any> {\n  return this.httpService.post('items/add',postData);\n}\n\n\ninvoiceAdd(postData: any): Observable<any> {\n  return this.httpService.post('invoices/add',postData);\n}\n\ninvoiceUpdate(postData: any): Observable<any> {\n  return this.httpService.post('invoices/edit',postData);\n}\n //Invoices\n //Items\n //Payments\n //Expenses\n //Items Categories\n //Expenses Categories\n //Taxes\n //Payment Merhods\n\n\n\n\n // get Industries industries\n  industries(postData: any): Observable<any> {\n    return this.httpService.post('industries',postData);\n  }\n  // get All Estimates\n  estimates(postData: any): Observable<any> {\n    return this.httpService.post('estimates/all',postData);\n  }\n\n  \n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(public toastController: ToastController) { }\n  \n  async presentToast(infoMessage: string) {\n     const toast = await this.toastController.create({\n       message:infoMessage,\n       duration:3000\n     });\n     toast.present();\n\n  }\n}\n"]}