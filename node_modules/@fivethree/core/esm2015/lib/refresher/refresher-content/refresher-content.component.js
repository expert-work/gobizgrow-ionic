/**
 * @fileoverview added by tsickle
 * Generated from: lib/refresher/refresher-content/refresher-content.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ViewChild, ElementRef, Output, EventEmitter, Renderer2 } from '@angular/core';
import { animate, style, AnimationBuilder } from '@angular/animations';
import { FivSpinner } from '../../spinner/spinner.component';
export class FivRefresherContent {
    /**
     * @param {?} element
     * @param {?} renderer
     * @param {?} builder
     */
    constructor(element, renderer, builder) {
        this.element = element;
        this.renderer = renderer;
        this.builder = builder;
        this._progress = 0;
        this.fivComplete = new EventEmitter();
        this.fivRefresh = new EventEmitter();
        this.fivHidden = new EventEmitter();
        this.fivShowed = new EventEmitter();
        this.fivProgress = new EventEmitter();
        this.visible = false;
    }
    /**
     * @param {?} progress
     * @return {?}
     */
    set progress(progress) {
        this._progress = progress;
        if (progress < 1) {
            this.renderer.setStyle(this.spinnerRef.nativeElement, 'transform', `rotateZ(${360 * progress}deg)`);
        }
    }
    /**
     * @return {?}
     */
    get progress() {
        return this._progress;
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    load() {
        this.visible = true;
        this.spinner.spin();
        this.fivRefresh.emit(this);
    }
    /**
     * @return {?}
     */
    unload() {
        this.spinner.stop();
    }
    /**
     * @return {?}
     */
    show() {
        if (!this.visible) {
            this.visible = true;
            /** @type {?} */
            const animation = this.builder.build([
                style({ transform: 'scale(0)' }),
                animate('0ms ease-out', style({ transform: 'scale(1)' }))
            ]);
            /** @type {?} */
            const player = animation.create(this.background.nativeElement);
            player.play();
            player.onDone((/**
             * @return {?}
             */
            () => {
                this.fivShowed.emit(this);
                player.destroy();
            }));
        }
    }
    /**
     * @return {?}
     */
    hide() {
        if (this.visible) {
            /** @type {?} */
            const transform = `scale(1)`;
            /** @type {?} */
            const animation = this.builder.build([
                style({ transform: transform }),
                animate('175ms ease-in', style({ transform: `scale(0)` }))
            ]);
            /** @type {?} */
            const player = animation.create(this.background.nativeElement);
            player.play();
            player.onDone((/**
             * @return {?}
             */
            () => {
                this.fivHidden.emit(this);
                this.visible = false;
                player.destroy();
            }));
        }
    }
    /**
     * @return {?}
     */
    complete() {
        this.unload();
        this.fivComplete.emit(this);
    }
    /**
     * @param {?} progress
     * @return {?}
     */
    setValue(progress) {
        this.spinner.setValue(progress);
    }
    /**
     * @return {?}
     */
    reset() {
        this.spinner.setMode('indeterminate');
    }
}
FivRefresherContent.decorators = [
    { type: Component, args: [{
                selector: 'fiv-refresher-content',
                template: "<div #background class=\"spinner-background\" [ngClass]=\"{'hidden': progress === 0}\">\n    <fiv-spinner #spinner (fivProgress)=\"fivProgress.emit($event)\" (fivComplete)=\"complete()\" [circleRadius]=\"8\"\n        [diameter]=\"20\" [strokeWidth]=\"2\"></fiv-spinner>\n</div>",
                styles: [":host{--fiv-spinner-size:40px;position:absolute;width:var(--fiv-spinner-size);height:var(--fiv-spinner-size);top:calc(-1 * var(--fiv-spinner-size));left:calc(50% - var(--fiv-spinner-size)/ 2);z-index:9}.spinner-background:not(.hidden){box-shadow:0 4px 6px 0 rgba(0,0,0,.14),0 4px 5px rgba(0,0,0,.1)}.spinner-background{position:absolute;width:40px;height:40px;background:var(--fiv-spin-background);border-radius:50%}.spinner-background fiv-spinner{position:absolute;top:10px;left:10px}"]
            }] }
];
/** @nocollapse */
FivRefresherContent.ctorParameters = () => [
    { type: ElementRef },
    { type: Renderer2 },
    { type: AnimationBuilder }
];
FivRefresherContent.propDecorators = {
    progress: [{ type: Input }],
    fivComplete: [{ type: Output }],
    fivRefresh: [{ type: Output }],
    fivHidden: [{ type: Output }],
    fivShowed: [{ type: Output }],
    fivProgress: [{ type: Output }],
    spinner: [{ type: ViewChild, args: ['spinner', { static: false },] }],
    spinnerRef: [{ type: ViewChild, args: ['spinner', { static: true, read: ElementRef },] }],
    background: [{ type: ViewChild, args: ['background', { static: false },] }]
};
if (false) {
    /** @type {?} */
    FivRefresherContent.prototype._progress;
    /** @type {?} */
    FivRefresherContent.prototype.fivComplete;
    /** @type {?} */
    FivRefresherContent.prototype.fivRefresh;
    /** @type {?} */
    FivRefresherContent.prototype.fivHidden;
    /** @type {?} */
    FivRefresherContent.prototype.fivShowed;
    /** @type {?} */
    FivRefresherContent.prototype.fivProgress;
    /** @type {?} */
    FivRefresherContent.prototype.spinner;
    /** @type {?} */
    FivRefresherContent.prototype.spinnerRef;
    /** @type {?} */
    FivRefresherContent.prototype.background;
    /** @type {?} */
    FivRefresherContent.prototype.visible;
    /** @type {?} */
    FivRefresherContent.prototype.element;
    /**
     * @type {?}
     * @private
     */
    FivRefresherContent.prototype.renderer;
    /** @type {?} */
    FivRefresherContent.prototype.builder;
}
//# sourceMappingURL=data:application/json;base64,