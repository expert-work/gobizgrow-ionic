/**
 * @fileoverview added by tsickle
 * Generated from: lib/back-button/routing-state.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { Router, NavigationEnd } from '@angular/router';
import { filter } from 'rxjs/operators';
import { NavController, Platform } from '@ionic/angular';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@ionic/angular";
/**
 * @record
 */
export function RoutingStateConfig() { }
if (false) {
    /** @type {?} */
    RoutingStateConfig.prototype.clearOn;
    /** @type {?} */
    RoutingStateConfig.prototype.root;
}
var FivRoutingStateService = /** @class */ (function () {
    function FivRoutingStateService(router, navCtrl, platform) {
        this.router = router;
        this.navCtrl = navCtrl;
        this.platform = platform;
        this.history = [];
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    FivRoutingStateService.prototype.loadRouting = /**
     * @param {?=} config
     * @return {?}
     */
    function (config) {
        var _this = this;
        this.config = config;
        this.handleAndroidBackButton();
        this.router.events
            .pipe(filter((/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return event instanceof NavigationEnd; })))
            .subscribe((/**
         * @param {?} __0
         * @return {?}
         */
        function (_a) {
            var urlAfterRedirects = _a.urlAfterRedirects;
            if (urlAfterRedirects === _this.getPreviousUrl(_this.config.root)) {
                _this.pop();
                _this.pop();
            }
            // add url to history
            _this.history.push(urlAfterRedirects);
            if (_this.config && _this.config.clearOn) {
                /** @type {?} */
                var clear = _this.config.clearOn.some((/**
                 * @param {?} s
                 * @return {?}
                 */
                function (s) { return s === urlAfterRedirects; }));
                if (clear) {
                    _this.clearHistory(urlAfterRedirects);
                }
            }
        }));
    };
    /**
     * @param {?} target
     * @return {?}
     */
    FivRoutingStateService.prototype.registerNavigateable = /**
     * @param {?} target
     * @return {?}
     */
    function (target) {
        if (isNavigateable(target)) {
            this.history.push(target);
        }
    };
    /**
     * @return {?}
     */
    FivRoutingStateService.prototype.handleAndroidBackButton = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.platform.backButton
            .pipe(filter((/**
         * @return {?}
         */
        function () { return !isNavigateable(_this.getCurrentUrl()); })))
            .subscribe((/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            _this.goBack();
        }));
        this.platform.backButton
            .pipe(filter((/**
         * @return {?}
         */
        function () { return isNavigateable(_this.getCurrentUrl()); })))
            .subscribe((/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            event.register(99999, (/**
             * @return {?}
             */
            function () {
                _this.goBack('/');
            }));
        }));
    };
    /**
     * @return {?}
     */
    FivRoutingStateService.prototype.getHistory = /**
     * @return {?}
     */
    function () {
        return this.history;
    };
    /**
     * @param {?=} defaultHref
     * @return {?}
     */
    FivRoutingStateService.prototype.getPreviousUrl = /**
     * @param {?=} defaultHref
     * @return {?}
     */
    function (defaultHref) {
        if (defaultHref === void 0) { defaultHref = '/'; }
        if (this.history.length >= 2) {
            return this.history[this.history.length - 2];
        }
        return defaultHref;
    };
    /**
     * @return {?}
     */
    FivRoutingStateService.prototype.pop = /**
     * @return {?}
     */
    function () {
        return this.history.pop();
    };
    /**
     * @param {?} fromUrl
     * @return {?}
     */
    FivRoutingStateService.prototype.clearHistory = /**
     * @param {?} fromUrl
     * @return {?}
     */
    function (fromUrl) {
        var _this = this;
        this.history = this.history.filter((/**
         * @param {?} h
         * @return {?}
         */
        function (h) {
            return _this.config.clearOn.some((/**
             * @param {?} s
             * @return {?}
             */
            function (s) { return s === h; }));
        }));
        if (fromUrl !== this.config.root) {
            this.history.push(fromUrl);
        }
        this.history = this.history
            .reverse()
            .filter((/**
         * @param {?} item
         * @param {?} pos
         * @param {?} self
         * @return {?}
         */
        function (item, pos, self) {
            return self.indexOf(item) === pos;
        }))
            .reverse();
        if (this.history[0] !== this.config.root) {
            this.history = tslib_1.__spread([this.config.root], this.history);
        }
    };
    /**
     * @return {?}
     */
    FivRoutingStateService.prototype.getCurrentUrl = /**
     * @return {?}
     */
    function () {
        return this.history[this.history.length - 1];
    };
    /**
     * @param {?=} defaultHref
     * @return {?}
     */
    FivRoutingStateService.prototype.goBack = /**
     * @param {?=} defaultHref
     * @return {?}
     */
    function (defaultHref) {
        if (defaultHref === void 0) { defaultHref = '/'; }
        if (this.getHistory().length <= 1) {
            // close the app because we are at root level
            return navigator['app']
                ? navigator['app'].exitApp()
                : this.navCtrl.navigateBack(defaultHref);
        }
        /** @type {?} */
        var current = this.getCurrentUrl();
        if (typeof current !== 'string' && isNavigateable(current)) {
            current.dismiss();
            return this.pop();
        }
        /** @type {?} */
        var previous = this.getPreviousUrl(defaultHref);
        if (typeof previous === 'string') {
            return this.navCtrl.navigateBack(previous);
        }
        if (isNavigateable(previous)) {
            return this.navCtrl.navigateBack(this.getLatestUrl(defaultHref));
        }
    };
    /**
     * @param {?} defaultHref
     * @return {?}
     */
    FivRoutingStateService.prototype.getLatestUrl = /**
     * @param {?} defaultHref
     * @return {?}
     */
    function (defaultHref) {
        /** @type {?} */
        var urls = this.history.filter((/**
         * @param {?} e
         * @return {?}
         */
        function (e) { return !!(typeof e === 'string'); }));
        /** @type {?} */
        var latest = urls[urls.length - 1];
        if (urls.length > 0 && latest && typeof latest === 'string') {
            return latest;
        }
        return defaultHref;
    };
    FivRoutingStateService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    FivRoutingStateService.ctorParameters = function () { return [
        { type: Router },
        { type: NavController },
        { type: Platform }
    ]; };
    /** @nocollapse */ FivRoutingStateService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function FivRoutingStateService_Factory() { return new FivRoutingStateService(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.NavController), i0.ɵɵinject(i2.Platform)); }, token: FivRoutingStateService, providedIn: "root" });
    return FivRoutingStateService;
}());
export { FivRoutingStateService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FivRoutingStateService.prototype.history;
    /**
     * @type {?}
     * @private
     */
    FivRoutingStateService.prototype.config;
    /**
     * @type {?}
     * @private
     */
    FivRoutingStateService.prototype.router;
    /**
     * @type {?}
     * @private
     */
    FivRoutingStateService.prototype.navCtrl;
    /**
     * @type {?}
     * @private
     */
    FivRoutingStateService.prototype.platform;
}
/**
 * @param {?} object
 * @return {?}
 */
export function isNavigateable(object) {
    return !!object && object.dismiss !== undefined;
}
//# sourceMappingURL=data:application/json;base64,