{"version":3,"sources":["./src/app/services/apis.service.ts","./src/app/services/toast.service.ts","./src/app/settings/account-information/account-information-routing.module.ts","./src/app/settings/account-information/account-information.module.ts","./src/app/settings/account-information/account-information.page.html","./src/app/settings/account-information/account-information.page.ts"],"names":[],"mappings":"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","file":"settings-account-information-account-information-module-ngfactory-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpService } from './http.service';\nimport { HttpClient } from '@angular/common/http';\nimport { StorageService } from './storage.service';\nimport { environment } from '../../environments/environment';\n\nexport interface ApiImage {\n  _id: string;\n  name: string;\n  createdAt: Date;\n  url: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApisService {\n\n  constructor(\n    private httpService: HttpService,\n    private http: HttpClient,\n    private storageService: StorageService,\n    private router: Router\n  ) { }\n\n\n\n\n\n  // Image Upload Starts\n\n  imageUploadUrl = environment.apiUrl+'uploads';\n\n  getImages() {\n    return this.http.get<ApiImage[]>(`${this.imageUploadUrl}/image`);\n  }\n \n  uploadImage(blobData, name, ext,auth_token:any) {\n    const formData = new FormData();\n    formData.append('file', blobData, `myimage.${ext}`);\n    formData.append('name', name);\n    formData.append('auth_token', auth_token);\n\n    return this.http.post(`${this.imageUploadUrl}`, formData);\n  }\n \n  uploadImageFile(file: File, auth_token:any) {\n    const ext = file.name.split('.').pop();\n    const formData = new FormData();\n    formData.append('file', file, `myimage.${ext}`);\n    formData.append('name', file.name);\n    formData.append('auth_token', auth_token);\n\n    return this.http.post(`${this.imageUploadUrl}`, formData);\n  }\n \n  \n  deleteImage(id) {\n    return this.http.delete(`${this.imageUploadUrl}/image/${id}`);\n  }\n\n  b64toBlob(b64Data, contentType = '', sliceSize = 512) {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n \n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n \n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n \n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n \n    const blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n  }\n  // Image Upload End\n\n\n\n  getImageUrl(file:any){\n    return environment.fileUrl+file;\n  }\n  getThumbImageUrl(file:any){\n    return environment.fileUrl+'thumb/'+file;\n  }\n\n  sortArray(myArray:any) {\n    var result = myArray.reduce((unique, o) => {\n      if(!unique.some(obj => obj.id === o.id)) {\n        unique.push(o);\n      }\n      return unique;\n    },[]);\n   \n    return result.sort(function(a, b) {\n        return b.id-a.id ;\n    });\n}\n\nisDefined(x:any) {\n  if (x == null) {\n      return false;\n  }\n  if (x === null) {\n      return false;\n  }\n  if (typeof x === 'undefined') {\n      return false;\n  }\n  return true;\n}\n\n makeid(length:Number) {\n  var result           = '';\n  var characters       = 'abcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n\n\nsignupComplete(postData: any): Observable<any> {\n  return this.httpService.post('signup-complete',postData);\n}\n\n\n //Customers\n\ndashboard(postData: any): Observable<any> {\n  return this.httpService.post('dashboard',postData);\n}\n\ncustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/all',postData);\n}\n\ninvoices(postData: any): Observable<any> {\n  return this.httpService.post('invoices/all',postData);\n}\n\nnextInvoice(postData: any): Observable<any> {\n  return this.httpService.post('invoices/next',postData);\n\n}\n\n\nnextEstimate(postData: any): Observable<any> {\n  return this.httpService.post('estimates/next',postData);\n\n}\nnextJob(postData: any): Observable<any> {\n  return this.httpService.post('jobs/next',postData);\n\n}\n\n\n\nitems(postData: any): Observable<any> {\n  return this.httpService.post('items/all',postData);\n}\ncategories(postData: any): Observable<any> {\n  return this.httpService.post('categories/all',postData);\n}\n\npayments(postData: any): Observable<any> {\n  return this.httpService.post('payments/all',postData);\n}\n\nexpenses(postData: any): Observable<any> {\n  return this.httpService.post('expenses/all',postData);\n}\n\njobs(postData: any): Observable<any> {\n  return this.httpService.post('jobs/all',postData);\n}\nexpenseCategories(postData: any): Observable<any> {\n  return this.httpService.post('expenses-categories/all',postData);\n}\n\n\ntaxes(postData: any): Observable<any> {\n  return this.httpService.post('taxes/all',postData);\n}\nimages(postData: any): Observable<any> {\n  return this.httpService.post('images/all',postData);\n}\n\ndeleteCustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/delete',postData);\n}\n\ncustomerAdd(postData: any): Observable<any> {\n  return this.httpService.post('customers/add',postData);\n}\ncustomerEdit(auth_token:any,postData: any): Observable<any> {\n  return this.httpService.post('customers/edit/'+auth_token,postData);\n}\n\ncategoryAdd(postData: any): Observable<any> {\n  return this.httpService.post('categories/add',postData);\n}\n\ncategoryUpdate(postData: any): Observable<any> {\n  return this.httpService.post('categories/edit',postData);\n}\n\nitemAdd(postData: any): Observable<any> {\n  return this.httpService.post('items/add',postData);\n}\nitemUpdate(postData: any): Observable<any> {\n  return this.httpService.post('items/edit',postData);\n}\n\n\ntaxAdd(postData: any): Observable<any> {\n  return this.httpService.post('tax/add',postData);\n}\ntaxUpdate(postData: any): Observable<any> {\n  return this.httpService.post('tax/edit',postData);\n}\n\ninvoiceAdd(postData: any): Observable<any> {\n  return this.httpService.post('invoices/add',postData);\n}\n\ninvoiceUpdate(postData: any): Observable<any> {\n  return this.httpService.post('invoices/edit',postData);\n}\n\n\n\nestimateAdd(postData: any): Observable<any> {\n  return this.httpService.post('estimates/add',postData);\n}\n\nestimateUpdate(postData: any): Observable<any> {\n  return this.httpService.post('estimates/edit',postData);\n}\n\n\njobAdd(postData: any): Observable<any> {\n  return this.httpService.post('jobs/add',postData);\n}\n\njobUpdate(postData: any): Observable<any> {\n  return this.httpService.post('jobs/edit',postData);\n}\n\nexpensesAdd(postData: any): Observable<any> {\n  return this.httpService.post('expenses/add',postData);\n\n}\n\nexpensesUpdate(postData: any): Observable<any> {\n  return this.httpService.post('expenses/edit',postData);\n\n}\n\n //Invoices\n //Items\n //Payments\n //Expenses\n //Items Categories\n //Expenses Categories\n //Taxes\n //Payment Merhods\n\n \n expenseCategoryUpdate(postData: any): Observable<any> {\n  return this.httpService.post('expenses-categories/edit',postData);\n}\n\nexpenseCategoryAdd(postData: any): Observable<any> {\n  return this.httpService.post('expenses-categories/add',postData);\n\n}\n\n // get Industries industries\n  industries(postData: any): Observable<any> {\n    return this.httpService.post('industries',postData);\n  }\n  // get All Estimates\n  estimates(postData: any): Observable<any> {\n    return this.httpService.post('estimates/all',postData);\n  }\n\n  \n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(public toastController: ToastController) { }\n  \n  async presentToast(infoMessage: string) {\n     const toast = await this.toastController.create({\n       message:infoMessage,\n       duration:3000\n     });\n     toast.present();\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccountInformationPage } from './account-information.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountInformationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountInformationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AccountInformationPageRoutingModule } from './account-information-routing.module';\n\nimport { AccountInformationPage } from './account-information.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    AccountInformationPageRoutingModule\n  ],\n  declarations: [AccountInformationPage]\n})\nexport class AccountInformationPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-buttons slot=\"start\">\n        <ion-back-button></ion-back-button> \n      </ion-buttons>\n    </ion-buttons>\n    <ion-title>Account Information</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-card>\n  <ion-card-content >\n        <ion-row style=\"color: #378175;\n        font-size: 16px; max-width: 600px;\">\n          <ion-col (click)=\"updateActiveTab('account');\" style=\"cursor: pointer;\">\n                <span [class]=\"(isActiveTab=='account')?'active-tab':''\"> Account</span>\n          </ion-col>\n          \n          <ion-col (click)=\"updateActiveTab('password');\" style=\"cursor: pointer;\">\n              <span [class]=\"(isActiveTab=='password')?'active-tab':''\"> Chnage Password</span>\n          </ion-col>\n\n           \n        </ion-row>\n</ion-card-content>\n</ion-card>\n\n\n\n<ion-content *ngIf=\"isActiveTab=='account'\">\n  <div  class=\"\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"saveForm()\" class=\"forms\">\n      <ion-list class=\"inputs-list\" lines=\"full\">\n  \n  \n        <ion-row>\n            <ion-col class=\"form-column\"   >\n              <label class=\"form-label\"> Account Status</label>\n                <div class=\"input-item\">\n                  <ion-input type=\"text\" placeholder=\"Pending\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n                </div>\n            </ion-col>\n\n            <div class=\"error-container\" style=\"width: 100%;margin-top: -15px !important;\">\n              <ng-container *ngFor=\"let validation of validation_messages.title\">\n                <div class=\"error-message\" *ngIf=\"form.get('title').hasError(validation.type) && (form.get('title').dirty || form.get('title').touched)\">\n                  <ion-icon name=\"information-circle-outline\"></ion-icon>\n                  <span>{{ validation.message }}</span>\n                </div>\n              </ng-container>\n            </div>\n        </ion-row>\n\n\n        <ion-row>\n          <ion-col class=\"form-column\"   >\n            <label class=\"form-label\"> First Name</label>\n              <div class=\"input-item\">\n                <ion-input type=\"text\" placeholder=\"First Name\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n              </div>\n          </ion-col>\n\n          <div class=\"error-container\" style=\"width: 100%;margin-top: -15px !important;\">\n            <ng-container *ngFor=\"let validation of validation_messages.title\">\n              <div class=\"error-message\" *ngIf=\"form.get('title').hasError(validation.type) && (form.get('title').dirty || form.get('title').touched)\">\n                <ion-icon name=\"information-circle-outline\"></ion-icon>\n                <span>{{ validation.message }}</span>\n              </div>\n            </ng-container>\n          </div>\n      </ion-row>\n\n\n      <ion-row>\n        <ion-col class=\"form-column\"   >\n          <label class=\"form-label\"> Last Name</label>\n            <div class=\"input-item\">\n              <ion-input type=\"text\" placeholder=\"Last Name\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n            </div>\n        </ion-col>\n\n        <div class=\"error-container\" style=\"width: 100%;margin-top: -15px !important;\">\n          <ng-container *ngFor=\"let validation of validation_messages.title\">\n            <div class=\"error-message\" *ngIf=\"form.get('title').hasError(validation.type) && (form.get('title').dirty || form.get('title').touched)\">\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\n              <span>{{ validation.message }}</span>\n            </div>\n          </ng-container>\n        </div>\n    </ion-row>\n\n\n    <ion-row>\n      <ion-col class=\"form-column\"   >\n        <label class=\"form-label\"> Phone Number</label>\n          <div class=\"input-item\">\n            <ion-input type=\"text\" placeholder=\"Phone Number\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n          </div>\n      </ion-col>\n\n      <div class=\"error-container\" style=\"width: 100%;margin-top: -15px !important;\">\n        <ng-container *ngFor=\"let validation of validation_messages.title\">\n          <div class=\"error-message\" *ngIf=\"form.get('title').hasError(validation.type) && (form.get('title').dirty || form.get('title').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n  </ion-row>\n\n  <ion-row>\n    <ion-col class=\"form-column\"   >\n      <label class=\"form-label\"> Email</label>\n        <div class=\"input-item\">\n          <ion-input type=\"text\" placeholder=\"Email\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n        </div>\n    </ion-col>\n\n    <div class=\"error-container\" style=\"width: 100%;margin-top: -15px !important;\">\n      <ng-container *ngFor=\"let validation of validation_messages.title\">\n        <div class=\"error-message\" *ngIf=\"form.get('title').hasError(validation.type) && (form.get('title').dirty || form.get('title').touched)\">\n          <ion-icon name=\"information-circle-outline\"></ion-icon>\n          <span>{{ validation.message }}</span>\n        </div>\n      </ng-container>\n    </div>\n</ion-row>\n\n\n\n      </ion-list>\n      <ion-button    color=\"primary\" expand=\"block\">Update Account Details</ion-button>\n\n    </form>\n    \n   </div>\n</ion-content>\n\n<ion-content *ngIf=\"isActiveTab=='password'\">\n  <div  class=\"\">\n       <form [formGroup]=\"form\" (ngSubmit)=\"saveForm()\" class=\"forms\">\n        <ion-list class=\"inputs-list\" lines=\"full\">\n    \n    \n          <ion-row>\n              <ion-col class=\"form-column\"   >\n                <label class=\"form-label\"> Current Password</label>\n                  <div class=\"input-item\">\n                    <ion-input type=\"text\" placeholder=\"Current Password\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n                  </div>\n              </ion-col>\n  \n              <div class=\"error-container\" style=\"width: 100%;margin-top: -15px !important;\">\n                <ng-container *ngFor=\"let validation of validation_messages.title\">\n                  <div class=\"error-message\" *ngIf=\"form.get('title').hasError(validation.type) && (form.get('title').dirty || form.get('title').touched)\">\n                    <ion-icon name=\"information-circle-outline\"></ion-icon>\n                    <span>{{ validation.message }}</span>\n                  </div>\n                </ng-container>\n              </div>\n          </ion-row>\n\n          <ion-row>\n            <ion-col class=\"form-column\"   >\n              <label class=\"form-label\"> New Password</label>\n                <div class=\"input-item\">\n                  <ion-input type=\"text\" placeholder=\"New Password\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n                </div>\n            </ion-col>\n\n            <div class=\"error-container\" style=\"width: 100%;margin-top: -15px !important;\">\n              <ng-container *ngFor=\"let validation of validation_messages.title\">\n                <div class=\"error-message\" *ngIf=\"form.get('title').hasError(validation.type) && (form.get('title').dirty || form.get('title').touched)\">\n                  <ion-icon name=\"information-circle-outline\"></ion-icon>\n                  <span>{{ validation.message }}</span>\n                </div>\n              </ng-container>\n            </div>\n        </ion-row>\n\n        <ion-row>\n          <ion-col class=\"form-column\"   >\n            <label class=\"form-label\"> Re-enter New Password</label>\n              <div class=\"input-item\">\n                <ion-input type=\"text\" placeholder=\"Re-enter New Password\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n              </div>\n          </ion-col>\n\n          <div class=\"error-container\" style=\"width: 100%;margin-top: -15px !important;\">\n            <ng-container *ngFor=\"let validation of validation_messages.title\">\n              <div class=\"error-message\" *ngIf=\"form.get('title').hasError(validation.type) && (form.get('title').dirty || form.get('title').touched)\">\n                <ion-icon name=\"information-circle-outline\"></ion-icon>\n                <span>{{ validation.message }}</span>\n              </div>\n            </ng-container>\n          </div>\n      </ion-row>\n\n\n          </ion-list>\n          <ion-button    color=\"primary\" expand=\"block\">Save New Password</ion-button>\n\n          </form>\n     \n  </div>\n</ion-content>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service'\nimport { ApisService } from '../../services/apis.service'\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\n\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\nimport { CategoriesPage } from '../../common/categories/categories.page' \n\n@Component({\n  selector: 'app-account-information',\n  templateUrl: './account-information.page.html',\n  styleUrls: ['./account-information.page.scss'],\n})\nexport class AccountInformationPage implements OnInit {\n  isActiveTab:any;\n  form: FormGroup;\n  validation_messages = {\n    'expense_date': [\n      { type: 'required', message: 'Date is required.' },\n     ],\n     'title': [\n      { type: 'required', message: 'Title is required.' },\n     ],\n\n    'amount': [\n      { type: 'required', message: 'amount is required.' },\n     ],\n     'expense_category_name': [\n      { type: 'required', message: 'Category is required.' },\n     ],\n     \n  };\n\n  constructor(\n    private authService: AuthService,\n    private apisService:ApisService,\n    private storageService: StorageService,\n    private toastService: ToastService,\n   ) { \n    this.isActiveTab='account';\n    this.form = new FormGroup({\n      'amount': new FormControl('', Validators.compose([\n        Validators.required,\n       ])),\n       'title': new FormControl('', Validators.compose([\n        Validators.required,\n       ])),\n\n       \n      'expense_date': new FormControl('', Validators.compose([\n         Validators.required\n       ])),\n       'expense_category_name': new FormControl('', Validators.compose([\n        Validators.required\n        ])),\n      'notes': new FormControl(''),\n    });\n   }\n\n  ngOnInit() {\n  }\n\n  updateActiveTab(tab:any){\n    this.isActiveTab=tab;\n  }\n}\n"],"sourceRoot":"webpack:///"}