/**
 * @fileoverview added by tsickle
 * Generated from: lib/password-input/password-input.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, forwardRef, HostBinding } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
/** @type {?} */
export var CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR = {
    provide: NG_VALUE_ACCESSOR,
    useExisting: forwardRef((/**
     * @return {?}
     */
    function () { return FivPasswordInput; })),
    multi: true
};
var FivPasswordInput = /** @class */ (function () {
    function FivPasswordInput() {
        this.clearOnEdit = false;
        this.disabled = false;
        this.hideIcon = 'eye';
        this.position = 'floating';
        this.showIcon = 'eye-off';
        this._passwordValue = '';
    }
    /**
     * @return {?}
     */
    FivPasswordInput.prototype.toggleShowPassword = /**
     * @return {?}
     */
    function () {
        this.show = !this.show;
    };
    Object.defineProperty(FivPasswordInput.prototype, "passwordValue", {
        get: /**
         * @return {?}
         */
        function () {
            return this._passwordValue;
        },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            if (v !== this._passwordValue) {
                this._passwordValue = v;
                if (this.onChangeCallback) {
                    this.onChangeCallback(this._passwordValue);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} value
     * @return {?}
     */
    FivPasswordInput.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value !== undefined && value !== this._passwordValue) {
            this._passwordValue = value;
        }
    };
    /**
     * @return {?}
     */
    FivPasswordInput.prototype.blur = /**
     * @return {?}
     */
    function () {
        if (this.onTouchedCallback) {
            this.onTouchedCallback();
        }
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    FivPasswordInput.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChangeCallback = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    FivPasswordInput.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouchedCallback = fn;
    };
    FivPasswordInput.decorators = [
        { type: Component, args: [{
                    selector: 'fiv-password-input',
                    template: "<ion-item [color]=\"color\" [disabled]=\"disabled\" [lines]=\"lines\">\n  <ion-label *ngIf=\"placeholder\" [position]=\"position\">{{ placeholder }}</ion-label>\n  <ion-input [type]=\"show ? 'text' : 'password'\" [(ngModel)]=\"passwordValue\" [clearOnEdit]=\"clearOnEdit\"\n    (ionBlur)=\"blur()\"></ion-input>\n  <ion-icon slot=\"end\" [name]=\"show ? hideIcon : showIcon\" (click)=\"toggleShowPassword()\"></ion-icon>\n</ion-item>",
                    providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],
                    styles: [":host(.password-disabled){pointer-events:none}ion-icon{-ms-grid-row-align:center;align-self:center}"]
                }] }
    ];
    /** @nocollapse */
    FivPasswordInput.ctorParameters = function () { return []; };
    FivPasswordInput.propDecorators = {
        clearOnEdit: [{ type: Input }],
        color: [{ type: Input }],
        disabled: [{ type: HostBinding, args: ['class.password-disabled',] }, { type: Input }],
        hideIcon: [{ type: Input }],
        lines: [{ type: Input }],
        placeholder: [{ type: Input }],
        position: [{ type: Input }],
        show: [{ type: Input }],
        showIcon: [{ type: Input }]
    };
    return FivPasswordInput;
}());
export { FivPasswordInput };
if (false) {
    /** @type {?} */
    FivPasswordInput.prototype.clearOnEdit;
    /** @type {?} */
    FivPasswordInput.prototype.color;
    /** @type {?} */
    FivPasswordInput.prototype.disabled;
    /** @type {?} */
    FivPasswordInput.prototype.hideIcon;
    /** @type {?} */
    FivPasswordInput.prototype.lines;
    /** @type {?} */
    FivPasswordInput.prototype.placeholder;
    /** @type {?} */
    FivPasswordInput.prototype.position;
    /** @type {?} */
    FivPasswordInput.prototype.show;
    /** @type {?} */
    FivPasswordInput.prototype.showIcon;
    /**
     * @type {?}
     * @private
     */
    FivPasswordInput.prototype._passwordValue;
    /**
     * @type {?}
     * @private
     */
    FivPasswordInput.prototype.onTouchedCallback;
    /**
     * @type {?}
     * @private
     */
    FivPasswordInput.prototype.onChangeCallback;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFzc3dvcmQtaW5wdXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZpdmV0aHJlZS9jb3JlLyIsInNvdXJjZXMiOlsibGliL3Bhc3N3b3JkLWlucHV0L3Bhc3N3b3JkLWlucHV0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxXQUFXLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUUsT0FBTyxFQUFFLGlCQUFpQixFQUF3QixNQUFNLGdCQUFnQixDQUFDOztBQUd6RSxNQUFNLEtBQU8sbUNBQW1DLEdBQVE7SUFDdEQsT0FBTyxFQUFFLGlCQUFpQjtJQUMxQixXQUFXLEVBQUUsVUFBVTs7O0lBQUMsY0FBTSxPQUFBLGdCQUFnQixFQUFoQixDQUFnQixFQUFDO0lBQy9DLEtBQUssRUFBRSxJQUFJO0NBQ1o7QUFFRDtJQStCRTtRQXhCUyxnQkFBVyxHQUFHLEtBQUssQ0FBQztRQU03QixhQUFRLEdBQUcsS0FBSyxDQUFDO1FBRVIsYUFBUSxHQUFHLEtBQUssQ0FBQztRQU1qQixhQUFRLEdBQWdELFVBQVUsQ0FBQztRQUluRSxhQUFRLEdBQUcsU0FBUyxDQUFDO1FBRXRCLG1CQUFjLEdBQUcsRUFBRSxDQUFDO0lBSWIsQ0FBQzs7OztJQUVoQiw2Q0FBa0I7OztJQUFsQjtRQUNFLElBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO0lBQ3pCLENBQUM7SUFFRCxzQkFBSSwyQ0FBYTs7OztRQUFqQjtZQUNFLE9BQU8sSUFBSSxDQUFDLGNBQWMsQ0FBQztRQUM3QixDQUFDOzs7OztRQUVELFVBQWtCLENBQU07WUFDdEIsSUFBSSxDQUFDLEtBQUssSUFBSSxDQUFDLGNBQWMsRUFBRTtnQkFDN0IsSUFBSSxDQUFDLGNBQWMsR0FBRyxDQUFDLENBQUM7Z0JBQ3hCLElBQUksSUFBSSxDQUFDLGdCQUFnQixFQUFFO29CQUN6QixJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO2lCQUM1QzthQUNGO1FBQ0gsQ0FBQzs7O09BVEE7Ozs7O0lBV0QscUNBQVU7Ozs7SUFBVixVQUFXLEtBQVU7UUFDbkIsSUFBSSxLQUFLLEtBQUssU0FBUyxJQUFJLEtBQUssS0FBSyxJQUFJLENBQUMsY0FBYyxFQUFFO1lBQ3hELElBQUksQ0FBQyxjQUFjLEdBQUcsS0FBSyxDQUFDO1NBQzdCO0lBQ0gsQ0FBQzs7OztJQUVELCtCQUFJOzs7SUFBSjtRQUNFLElBQUksSUFBSSxDQUFDLGlCQUFpQixFQUFFO1lBQzFCLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO1NBQzFCO0lBQ0gsQ0FBQzs7Ozs7SUFFRCwyQ0FBZ0I7Ozs7SUFBaEIsVUFBaUIsRUFBTztRQUN0QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO0lBQzdCLENBQUM7Ozs7O0lBRUQsNENBQWlCOzs7O0lBQWpCLFVBQWtCLEVBQU87UUFDdkIsSUFBSSxDQUFDLGlCQUFpQixHQUFHLEVBQUUsQ0FBQztJQUM5QixDQUFDOztnQkFwRUYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLDZiQUE4QztvQkFFOUMsU0FBUyxFQUFFLENBQUMsbUNBQW1DLENBQUM7O2lCQUNqRDs7Ozs7OEJBRUUsS0FBSzt3QkFFTCxLQUFLOzJCQUVMLFdBQVcsU0FBQyx5QkFBeUIsY0FDckMsS0FBSzsyQkFHTCxLQUFLO3dCQUVMLEtBQUs7OEJBRUwsS0FBSzsyQkFFTCxLQUFLO3VCQUVMLEtBQUs7MkJBRUwsS0FBSzs7SUE0Q1IsdUJBQUM7Q0FBQSxBQXJFRCxJQXFFQztTQS9EWSxnQkFBZ0I7OztJQUMzQix1Q0FBNkI7O0lBRTdCLGlDQUFzQjs7SUFFdEIsb0NBRWlCOztJQUVqQixvQ0FBMEI7O0lBRTFCLGlDQUEyQzs7SUFFM0MsdUNBQTZCOztJQUU3QixvQ0FBNEU7O0lBRTVFLGdDQUF1Qjs7SUFFdkIsb0NBQThCOzs7OztJQUU5QiwwQ0FBNEI7Ozs7O0lBQzVCLDZDQUFvQzs7Ozs7SUFDcEMsNENBQXlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgZm9yd2FyZFJlZiwgSG9zdEJpbmRpbmcgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5HX1ZBTFVFX0FDQ0VTU09SLCBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IENvbG9yIH0gZnJvbSAnQGlvbmljL2NvcmUnO1xuXG5leHBvcnQgY29uc3QgQ1VTVE9NX0lOUFVUX0NPTlRST0xfVkFMVUVfQUNDRVNTT1I6IGFueSA9IHtcbiAgcHJvdmlkZTogTkdfVkFMVUVfQUNDRVNTT1IsXG4gIHVzZUV4aXN0aW5nOiBmb3J3YXJkUmVmKCgpID0+IEZpdlBhc3N3b3JkSW5wdXQpLFxuICBtdWx0aTogdHJ1ZVxufTtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnZml2LXBhc3N3b3JkLWlucHV0JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Bhc3N3b3JkLWlucHV0LmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vcGFzc3dvcmQtaW5wdXQuY29tcG9uZW50LnNjc3MnXSxcbiAgcHJvdmlkZXJzOiBbQ1VTVE9NX0lOUFVUX0NPTlRST0xfVkFMVUVfQUNDRVNTT1JdXG59KVxuZXhwb3J0IGNsYXNzIEZpdlBhc3N3b3JkSW5wdXQgaW1wbGVtZW50cyBDb250cm9sVmFsdWVBY2Nlc3NvciB7XG4gIEBJbnB1dCgpIGNsZWFyT25FZGl0ID0gZmFsc2U7XG5cbiAgQElucHV0KCkgY29sb3I6IENvbG9yO1xuXG4gIEBIb3N0QmluZGluZygnY2xhc3MucGFzc3dvcmQtZGlzYWJsZWQnKVxuICBASW5wdXQoKVxuICBkaXNhYmxlZCA9IGZhbHNlO1xuXG4gIEBJbnB1dCgpIGhpZGVJY29uID0gJ2V5ZSc7XG5cbiAgQElucHV0KCkgbGluZXM/OiAnZnVsbCcgfCAnaW5zZXQnIHwgJ25vbmUnO1xuXG4gIEBJbnB1dCgpIHBsYWNlaG9sZGVyOiBzdHJpbmc7XG5cbiAgQElucHV0KCkgcG9zaXRpb246ICdmbG9hdGluZycgfCAnaW5saW5lJyB8ICdmaXhlZCcgfCAnc3RhY2tlZCcgPSAnZmxvYXRpbmcnO1xuXG4gIEBJbnB1dCgpIHNob3c6IGJvb2xlYW47XG5cbiAgQElucHV0KCkgc2hvd0ljb24gPSAnZXllLW9mZic7XG5cbiAgcHJpdmF0ZSBfcGFzc3dvcmRWYWx1ZSA9ICcnO1xuICBwcml2YXRlIG9uVG91Y2hlZENhbGxiYWNrOiAoKSA9PiB7fTtcbiAgcHJpdmF0ZSBvbkNoYW5nZUNhbGxiYWNrOiAoXzogYW55KSA9PiB7fTtcblxuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgdG9nZ2xlU2hvd1Bhc3N3b3JkKCkge1xuICAgIHRoaXMuc2hvdyA9ICF0aGlzLnNob3c7XG4gIH1cblxuICBnZXQgcGFzc3dvcmRWYWx1ZSgpOiBhbnkge1xuICAgIHJldHVybiB0aGlzLl9wYXNzd29yZFZhbHVlO1xuICB9XG5cbiAgc2V0IHBhc3N3b3JkVmFsdWUodjogYW55KSB7XG4gICAgaWYgKHYgIT09IHRoaXMuX3Bhc3N3b3JkVmFsdWUpIHtcbiAgICAgIHRoaXMuX3Bhc3N3b3JkVmFsdWUgPSB2O1xuICAgICAgaWYgKHRoaXMub25DaGFuZ2VDYWxsYmFjaykge1xuICAgICAgICB0aGlzLm9uQ2hhbmdlQ2FsbGJhY2sodGhpcy5fcGFzc3dvcmRWYWx1ZSk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KSB7XG4gICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQgJiYgdmFsdWUgIT09IHRoaXMuX3Bhc3N3b3JkVmFsdWUpIHtcbiAgICAgIHRoaXMuX3Bhc3N3b3JkVmFsdWUgPSB2YWx1ZTtcbiAgICB9XG4gIH1cblxuICBibHVyKCkge1xuICAgIGlmICh0aGlzLm9uVG91Y2hlZENhbGxiYWNrKSB7XG4gICAgICB0aGlzLm9uVG91Y2hlZENhbGxiYWNrKCk7XG4gICAgfVxuICB9XG5cbiAgcmVnaXN0ZXJPbkNoYW5nZShmbjogYW55KSB7XG4gICAgdGhpcy5vbkNoYW5nZUNhbGxiYWNrID0gZm47XG4gIH1cblxuICByZWdpc3Rlck9uVG91Y2hlZChmbjogYW55KSB7XG4gICAgdGhpcy5vblRvdWNoZWRDYWxsYmFjayA9IGZuO1xuICB9XG59XG4iXX0=