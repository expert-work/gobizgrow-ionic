{"version":3,"sources":["./src/app/login/login.module.ts","./src/app/login/login.page.html","./src/app/login/login.page.ts","./src/app/services/toast.service.ts"],"names":[],"mappings":"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","file":"login-login-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../components/components.module';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>Log In</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"login-content\">\n  <div  class=\"dispplay-content-center\">\n      \n      <div class=\"padding20\"></div>\n      <ion-img class=\"auth-logo\" [src]=\"'./assets/logo/logo.png'\" [alt]=\"'walkthrough'\"></ion-img>\n      <h2>Welcome Back! </h2>\n      <div class=\"padding20\"></div>\n      <form [formGroup]=\"loginForm\" (ngSubmit)=\"doLogin()\" class=\"auth-form\">\n        <ion-list class=\"inputs-list\" lines=\"full\">\n          <ion-item class=\"input-item\">\n            <ion-input type=\"email\" placeholder=\"Email\" formControlName=\"email\" clearInput autocapitalize=\"off\" inputmode=\"email\"></ion-input>\n          </ion-item>\n          <div class=\"error-container\">\n            <ng-container *ngFor=\"let validation of validation_messages.email\">\n              <div class=\"error-message\" *ngIf=\"loginForm.get('email').hasError(validation.type) && (loginForm.get('email').dirty || loginForm.get('email').touched)\">\n                <ion-icon name=\"information-circle-outline\"></ion-icon>\n                <span>{{ validation.message }}</span>\n              </div>\n            </ng-container>\n          </div>\n\n          <ion-item class=\"input-item\">\n            <app-show-hide-password>\n              <ion-input type=\"password\" placeholder=\"Password\" formControlName=\"password\"></ion-input>\n            </app-show-hide-password>\n          </ion-item>\n          <div class=\"error-container\">\n            <ng-container *ngFor=\"let validation of validation_messages.password\">\n              <div class=\"error-message\" *ngIf=\"loginForm.get('password').hasError(validation.type) && (loginForm.get('password').dirty || loginForm.get('password').touched)\">\n                <ion-icon name=\"information-circle-outline\"></ion-icon>\n                <span>{{ validation.message }}</span>\n              </div>\n            </ng-container>\n          </div>\n        </ion-list>\n\n        <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\" [disabled]=\"!loginForm.valid\">Log In</ion-button>\n        <ion-row class=\"other-auth-options-row\">\n          <ion-button class=\"forgot-btn\" fill=\"clear\" [routerLink]=\"['/auth/forgot-password']\">\n            Forgot Password?\n          </ion-button>\n          <ion-button class=\"signup-btn\" fill=\"clear\" [routerLink]=\"['/auth/signup']\">\n            Sign Up!\n          </ion-button>\n        </ion-row>\n      </form>\n  </div> \n</ion-content>\n","import { Component } from '@angular/core';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from '../services/auth.service'\nimport { StorageService } from '../services/storage.service';\nimport { ToastService } from '../services/toast.service';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: [\n    './styles/login.page.scss'\n  ]\n})\nexport class LoginPage {\n  loginForm: FormGroup;\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Enter a valid email.' }\n    ],\n    'password': [\n      { type: 'required', message: 'Password is required.' },\n      { type: 'minlength', message: 'Password must be at least 5 characters long.' }\n    ]\n  };\n\n  constructor(\n    public router: Router,\n    public menu: MenuController,\n    private authService: AuthService,\n    private storageService: StorageService,\n    private toastService: ToastService\n  ) {\n    this.loginForm = new FormGroup({\n      'email': new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      'password': new FormControl('', Validators.compose([\n        Validators.minLength(5),\n        Validators.required\n      ]))\n    });\n  }\n\n  // Disable side menu for this page\n  ionViewDidEnter(): void {\n    this.menu.enable(false);\n  }\n\n  // Restore to default when leaving this page\n  ionViewDidLeave(): void {\n    this.menu.enable(true);\n  }\n\n  doLogin(): void {\n    console.log('do Log In');\n     let form = new FormData();\n     form.append('email', this.loginForm.value.email);\n     form.append('password', this.loginForm.value.password);\n    this.authService.login(form).subscribe((result: any) => {\n              this.storageService.store('userData',result.data);\n              this.toastService.presentToast('Successfully authenticated');\n              this.router.navigate(['app/dashboard']);\n            },\n            (error: any)=>{\n              if(error.status==0){\n                this.toastService.presentToast('Connection failed');\n              }\n              if(error.status==401){\n                this.toastService.presentToast('Authentcation failed');\n              }\n            }  \n     )\n   }\n\n  goToForgotPassword(): void {\n    console.log('redirect to forgot-password page');\n  }\n\n \n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(public toastController: ToastController) { }\n  \n  async presentToast(infoMessage: string) {\n     const toast = await this.toastController.create({\n       message:infoMessage,\n       duration:3000\n     });\n     toast.present();\n\n  }\n}\n"],"sourceRoot":"webpack:///"}