{"version":3,"sources":["webpack:///src/app/services/apis.service.ts","webpack:///src/app/services/toast.service.ts","webpack:///src/app/settings/company-information/company-information-routing.module.ts","webpack:///src/app/settings/company-information/company-information.module.ts","webpack:///src/app/settings/company-information/company-information.page.html","webpack:///src/app/settings/company-information/company-information.page.ts"],"names":["ApisService","httpService","http","storageService","router","imageUploadUrl","apiUrl","get","blobData","name","ext","auth_token","formData","FormData","append","post","file","split","pop","id","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","blob","Blob","type","fileUrl","myArray","result","reduce","unique","o","some","obj","sort","a","b","x","characters","charactersLength","charAt","Math","floor","random","postData","ToastService","toastController","infoMessage","create","message","duration","toast","present","routes","path","component","CompanyInformationPageRoutingModule","CompanyInformationPageModule","CompanyInformationPage","authService","apisService","toastService","route","modalController","platform","validation_messages","isActiveTab","form","compose","required","componentProps","data","backdropDismiss","modal","onDidDismiss","then","isDefined","console","log","photo","tab"],"mappings":"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","file":"settings-company-information-company-information-module-ngfactory-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpService } from './http.service';\nimport { HttpClient } from '@angular/common/http';\nimport { StorageService } from './storage.service';\nimport { environment } from '../../environments/environment';\n\nexport interface ApiImage {\n  _id: string;\n  name: string;\n  createdAt: Date;\n  url: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApisService {\n\n  constructor(\n    private httpService: HttpService,\n    private http: HttpClient,\n    private storageService: StorageService,\n    private router: Router\n  ) { }\n\n\n\n\n\n  // Image Upload Starts\n\n  imageUploadUrl = environment.apiUrl+'uploads';\n\n  getImages() {\n    return this.http.get<ApiImage[]>(`${this.imageUploadUrl}/image`);\n  }\n \n  uploadImage(blobData, name, ext,auth_token:any) {\n    const formData = new FormData();\n    formData.append('file', blobData, `myimage.${ext}`);\n    formData.append('name', name);\n    formData.append('auth_token', auth_token);\n\n    return this.http.post(`${this.imageUploadUrl}`, formData);\n  }\n \n  uploadImageFile(file: File, auth_token:any) {\n    const ext = file.name.split('.').pop();\n    const formData = new FormData();\n    formData.append('file', file, `myimage.${ext}`);\n    formData.append('name', file.name);\n    formData.append('auth_token', auth_token);\n\n    return this.http.post(`${this.imageUploadUrl}`, formData);\n  }\n \n  \n  deleteImage(id) {\n    return this.http.delete(`${this.imageUploadUrl}/image/${id}`);\n  }\n\n  b64toBlob(b64Data, contentType = '', sliceSize = 512) {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n \n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n \n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n \n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n \n    const blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n  }\n  // Image Upload End\n\n\n\n  getImageUrl(file:any){\n    return environment.fileUrl+file;\n  }\n  getThumbImageUrl(file:any){\n    return environment.fileUrl+'thumb/'+file;\n  }\n\n  sortArray(myArray:any) {\n    var result = myArray.reduce((unique, o) => {\n      if(!unique.some(obj => obj.id === o.id)) {\n        unique.push(o);\n      }\n      return unique;\n    },[]);\n   \n    return result.sort(function(a, b) {\n        return b.id-a.id ;\n    });\n}\n\nisDefined(x:any) {\n  if (x == null) {\n      return false;\n  }\n  if (x === null) {\n      return false;\n  }\n  if (typeof x === 'undefined') {\n      return false;\n  }\n  return true;\n}\n\n makeid(length:Number) {\n  var result           = '';\n  var characters       = 'abcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n\n\nsignupComplete(postData: any): Observable<any> {\n  return this.httpService.post('signup-complete',postData);\n}\n\n\n //Customers\n\ndashboard(postData: any): Observable<any> {\n  return this.httpService.post('dashboard',postData);\n}\n\ncustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/all',postData);\n}\n\ninvoices(postData: any): Observable<any> {\n  return this.httpService.post('invoices/all',postData);\n}\n\nnextInvoice(postData: any): Observable<any> {\n  return this.httpService.post('invoices/next',postData);\n\n}\n\n\nnextEstimate(postData: any): Observable<any> {\n  return this.httpService.post('estimates/next',postData);\n\n}\nnextJob(postData: any): Observable<any> {\n  return this.httpService.post('jobs/next',postData);\n\n}\n\n\n\nitems(postData: any): Observable<any> {\n  return this.httpService.post('items/all',postData);\n}\ncategories(postData: any): Observable<any> {\n  return this.httpService.post('categories/all',postData);\n}\n\npayments(postData: any): Observable<any> {\n  return this.httpService.post('payments/all',postData);\n}\n\nexpenses(postData: any): Observable<any> {\n  return this.httpService.post('expenses/all',postData);\n}\n\njobs(postData: any): Observable<any> {\n  return this.httpService.post('jobs/all',postData);\n}\nexpenseCategories(postData: any): Observable<any> {\n  return this.httpService.post('expenses-categories/all',postData);\n}\n\n\ntaxes(postData: any): Observable<any> {\n  return this.httpService.post('taxes/all',postData);\n}\nimages(postData: any): Observable<any> {\n  return this.httpService.post('images/all',postData);\n}\n\ndeleteCustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/delete',postData);\n}\n\ncustomerAdd(postData: any): Observable<any> {\n  return this.httpService.post('customers/add',postData);\n}\ncustomerEdit(auth_token:any,postData: any): Observable<any> {\n  return this.httpService.post('customers/edit/'+auth_token,postData);\n}\n\ncategoryAdd(postData: any): Observable<any> {\n  return this.httpService.post('categories/add',postData);\n}\n\ncategoryUpdate(postData: any): Observable<any> {\n  return this.httpService.post('categories/edit',postData);\n}\n\nitemAdd(postData: any): Observable<any> {\n  return this.httpService.post('items/add',postData);\n}\nitemUpdate(postData: any): Observable<any> {\n  return this.httpService.post('items/edit',postData);\n}\n\n\ntaxAdd(postData: any): Observable<any> {\n  return this.httpService.post('tax/add',postData);\n}\ntaxUpdate(postData: any): Observable<any> {\n  return this.httpService.post('tax/edit',postData);\n}\n\ninvoiceAdd(postData: any): Observable<any> {\n  return this.httpService.post('invoices/add',postData);\n}\n\ninvoiceUpdate(postData: any): Observable<any> {\n  return this.httpService.post('invoices/edit',postData);\n}\n\n\n\nestimateAdd(postData: any): Observable<any> {\n  return this.httpService.post('estimates/add',postData);\n}\n\nestimateUpdate(postData: any): Observable<any> {\n  return this.httpService.post('estimates/edit',postData);\n}\n\n\njobAdd(postData: any): Observable<any> {\n  return this.httpService.post('jobs/add',postData);\n}\n\njobUpdate(postData: any): Observable<any> {\n  return this.httpService.post('jobs/edit',postData);\n}\n\nexpensesAdd(postData: any): Observable<any> {\n  return this.httpService.post('expenses/add',postData);\n\n}\n\nexpensesUpdate(postData: any): Observable<any> {\n  return this.httpService.post('expenses/edit',postData);\n\n}\n\n //Invoices\n //Items\n //Payments\n //Expenses\n //Items Categories\n //Expenses Categories\n //Taxes\n //Payment Merhods\n\n \n expenseCategoryUpdate(postData: any): Observable<any> {\n  return this.httpService.post('expenses-categories/edit',postData);\n}\n\nexpenseCategoryAdd(postData: any): Observable<any> {\n  return this.httpService.post('expenses-categories/add',postData);\n\n}\n\n // get Industries industries\n  industries(postData: any): Observable<any> {\n    return this.httpService.post('industries',postData);\n  }\n  // get All Estimates\n  estimates(postData: any): Observable<any> {\n    return this.httpService.post('estimates/all',postData);\n  }\n\n  \n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(public toastController: ToastController) { }\n  \n  async presentToast(infoMessage: string) {\n     const toast = await this.toastController.create({\n       message:infoMessage,\n       duration:3000\n     });\n     toast.present();\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CompanyInformationPage } from './company-information.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CompanyInformationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CompanyInformationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CompanyInformationPageRoutingModule } from './company-information-routing.module';\n\nimport { CompanyInformationPage } from './company-information.page';\nimport { UploadPageModule } from  '../../common/upload/upload.module'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    CompanyInformationPageRoutingModule,\n    UploadPageModule\n  ],\n  declarations: [CompanyInformationPage]\n})\nexport class CompanyInformationPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-buttons slot=\"start\">\n        <ion-back-button></ion-back-button> \n      </ion-buttons>\n    </ion-buttons>\n    <ion-title>Company Information</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-card>\n  <ion-card-content >\n        <ion-row style=\"color: #378175;\n        font-size: 16px; max-width: 600px;\">\n          <ion-col (click)=\"updateActiveTab('GENERAL');\" style=\"cursor: pointer;\">\n                <span [class]=\"(isActiveTab=='GENERAL')?'active-tab':''\"> GENERAL</span>\n          </ion-col>\n          \n          <ion-col (click)=\"updateActiveTab('HOURS');\" style=\"cursor: pointer;\">\n              <span [class]=\"(isActiveTab=='HOURS')?'active-tab':''\"> HOURS</span>\n          </ion-col>\n          <ion-col (click)=\"updateActiveTab('SOCIAL');\" style=\"cursor: pointer;\">\n            <span [class]=\"(isActiveTab=='SOCIAL')?'active-tab':''\"> SOCIAL</span>\n        </ion-col>\n           \n        </ion-row>\n</ion-card-content>\n</ion-card>\n\n<ion-content *ngIf=\"isActiveTab=='GENERAL'\">\n  <div  class=\"\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"saveForm()\" class=\"forms\">\n      <ion-list class=\"inputs-list\" lines=\"full\">\n  \n  \n        <ion-row>\n            <ion-col class=\"form-column\"   >\n              <label class=\"form-label\"> Company Name</label>\n                <div class=\"input-item\">\n                  <ion-input type=\"text\" placeholder=\"Company Name\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n                </div>\n            </ion-col>\n\n            <div class=\"error-container\" style=\"width: 100%;margin-top: -15px !important;\">\n              <ng-container *ngFor=\"let validation of validation_messages.title\">\n                <div class=\"error-message\" *ngIf=\"form.get('title').hasError(validation.type) && (form.get('title').dirty || form.get('title').touched)\">\n                  <ion-icon name=\"information-circle-outline\"></ion-icon>\n                  <span>{{ validation.message }}</span>\n                </div>\n              </ng-container>\n            </div>\n        </ion-row>\n\n\n        <ion-row>\n          <ion-col class=\"form-column\"   >\n            <label class=\"form-label\"> Company Address</label>\n              <div class=\"input-item\">\n                <ion-input type=\"text\" placeholder=\"Company Address\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n              </div>\n          </ion-col>\n\n          <div class=\"error-container\" style=\"width: 100%;margin-top: -15px !important;\">\n            <ng-container *ngFor=\"let validation of validation_messages.title\">\n              <div class=\"error-message\" *ngIf=\"form.get('title').hasError(validation.type) && (form.get('title').dirty || form.get('title').touched)\">\n                <ion-icon name=\"information-circle-outline\"></ion-icon>\n                <span>{{ validation.message }}</span>\n              </div>\n            </ng-container>\n          </div>\n      </ion-row>\n\n\n      <ion-row>\n        <ion-col class=\"form-column\"   >\n          <label class=\"form-label\"> City</label>\n            <div class=\"input-item\">\n              <ion-input type=\"text\" placeholder=\"City\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n            </div>\n        </ion-col>\n\n        <div class=\"error-container\" style=\"width: 100%;margin-top: -15px !important;\">\n          <ng-container *ngFor=\"let validation of validation_messages.title\">\n            <div class=\"error-message\" *ngIf=\"form.get('title').hasError(validation.type) && (form.get('title').dirty || form.get('title').touched)\">\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\n              <span>{{ validation.message }}</span>\n            </div>\n          </ng-container>\n        </div>\n    </ion-row>\n\n\n            <ion-row>\n              <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n                <label class=\"form-label\"> State</label>\n                  <div class=\"input-item\">\n                    <ion-input type=\"text\" placeholder=\"State\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n                  </div>\n              \n\n              <div class=\"error-container\" style=\"width: 100%;margin-top: -5px !important;\">\n                <ng-container *ngFor=\"let validation of validation_messages.title\">\n                  <div class=\"error-message\" *ngIf=\"form.get('title').hasError(validation.type) && (form.get('title').dirty || form.get('title').touched)\">\n                    <ion-icon name=\"information-circle-outline\"></ion-icon>\n                    <span>{{ validation.message }}</span>\n                  </div>\n                </ng-container>\n              </div>\n            </ion-col>\n\n            <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n              <label class=\"form-label\"> Zip</label>\n                <div class=\"input-item\">\n                  <ion-input type=\"text\" placeholder=\"Zip\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n                </div>\n            \n\n            <div class=\"error-container\" style=\"width: 100%;margin-top: -5px !important;\">\n              <ng-container *ngFor=\"let validation of validation_messages.title\">\n                <div class=\"error-message\" *ngIf=\"form.get('title').hasError(validation.type) && (form.get('title').dirty || form.get('title').touched)\">\n                  <ion-icon name=\"information-circle-outline\"></ion-icon>\n                  <span>{{ validation.message }}</span>\n                </div>\n              </ng-container>\n            </div>\n          </ion-col>\n        </ion-row>\n\n\n\n\n            <ion-row>\n              <ion-col class=\"form-column\"   >\n                <label class=\"form-label\"> Logo</label>\n                  <div class=\"input-item\" (click)=\"openUploadModal('')\" >\n                    <ion-icon name=\"camera-outline\"  style=\"    padding: 5px;\n                    font-size: 30px;\"></ion-icon>\n                  </div>\n              </ion-col>\n\n              <div class=\"error-container\" style=\"width: 100%;margin-top: -15px !important;\">\n                <ng-container *ngFor=\"let validation of validation_messages.title\">\n                  <div class=\"error-message\" *ngIf=\"form.get('title').hasError(validation.type) && (form.get('title').dirty || form.get('title').touched)\">\n                    <ion-icon name=\"information-circle-outline\"></ion-icon>\n                    <span>{{ validation.message }}</span>\n                  </div>\n                </ng-container>\n              </div>\n            </ion-row>\n\n\n            <ion-row>\n              <ion-col class=\"form-column\"   >\n                <label class=\"form-label\"> About You</label>\n                  <div class=\"input-item\">\n                    <ion-textarea   formControlName=\"title\" clearInput autocapitalize=\"off\"   placeholder=\"Enter About You...\"></ion-textarea>\n                  </div>\n              </ion-col>\n\n              <div class=\"error-container\" style=\"width: 100%;margin-top: -15px !important;\">\n                <ng-container *ngFor=\"let validation of validation_messages.title\">\n                  <div class=\"error-message\" *ngIf=\"form.get('title').hasError(validation.type) && (form.get('title').dirty || form.get('title').touched)\">\n                    <ion-icon name=\"information-circle-outline\"></ion-icon>\n                    <span>{{ validation.message }}</span>\n                  </div>\n                </ng-container>\n              </div>\n            </ion-row>\n \n\n      </ion-list>\n      <ion-button    color=\"primary\" expand=\"block\">Update Account Details</ion-button>\n\n    </form>\n    \n   </div>\n</ion-content>\n\n\n\n<ion-content *ngIf=\"isActiveTab=='HOURS'\">\n  <div  class=\"\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"saveForm()\" class=\"forms\">\n      <ion-list class=\"inputs-list\" lines=\"full\">\n        <ion-row>\n            <label class=\"form-label\"> Monday</label>\n            <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n              <div class=\"input-item\">\n                <ion-datetime  style=\"width: 100%;\"  displayFormat=\"hh:mm A\"       display-timezone=\"utc\"></ion-datetime>\n              </div>\n            </ion-col>\n            <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n              <div class=\"input-item\">\n                <ion-datetime  style=\"width: 100%;\"  displayFormat=\"hh:mm A\"       display-timezone=\"utc\"></ion-datetime>\n              </div>\n            </ion-col>\n        </ion-row>\n\n\n        <ion-row>\n          <label class=\"form-label\"> Tuesday</label>\n          <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n            <div class=\"input-item\">\n              <ion-datetime  style=\"width: 100%;\"  displayFormat=\"hh:mm A\"       display-timezone=\"utc\"></ion-datetime>\n            </div>\n          </ion-col>\n          <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n            <div class=\"input-item\">\n              <ion-datetime  style=\"width: 100%;\"  displayFormat=\"hh:mm A\"       display-timezone=\"utc\"></ion-datetime>\n            </div>\n          </ion-col>\n      </ion-row>\n\n\n      <ion-row>\n        <label class=\"form-label\"> Wednesday</label>\n        <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n          <div class=\"input-item\">\n            <ion-datetime  style=\"width: 100%;\"  displayFormat=\"hh:mm A\"       display-timezone=\"utc\"></ion-datetime>\n          </div>\n        </ion-col>\n        <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n          <div class=\"input-item\">\n            <ion-datetime  style=\"width: 100%;\"  displayFormat=\"hh:mm A\"       display-timezone=\"utc\"></ion-datetime>\n          </div>\n        </ion-col>\n    </ion-row>\n\n\n    <ion-row>\n      <label class=\"form-label\"> Thursday</label>\n      <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n        <div class=\"input-item\">\n          <ion-datetime  style=\"width: 100%;\"  displayFormat=\"hh:mm A\"       display-timezone=\"utc\"></ion-datetime>\n        </div>\n      </ion-col>\n      <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n        <div class=\"input-item\">\n          <ion-datetime  style=\"width: 100%;\"  displayFormat=\"hh:mm A\"       display-timezone=\"utc\"></ion-datetime>\n        </div>\n      </ion-col>\n  </ion-row>\n\n\n  <ion-row>\n    <label class=\"form-label\"> Friday</label>\n    <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n      <div class=\"input-item\">\n        <ion-datetime  style=\"width: 100%;\"  displayFormat=\"hh:mm A\"       display-timezone=\"utc\"></ion-datetime>\n      </div>\n    </ion-col>\n    <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n      <div class=\"input-item\">\n        <ion-datetime  style=\"width: 100%;\"  displayFormat=\"hh:mm A\"       display-timezone=\"utc\"></ion-datetime>\n      </div>\n    </ion-col>\n</ion-row>\n\n\n<ion-row>\n  <label class=\"form-label\"> Saturday</label>\n  <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n    <div class=\"input-item\">\n      <ion-datetime  style=\"width: 100%;\"  displayFormat=\"hh:mm A\"       display-timezone=\"utc\"></ion-datetime>\n    </div>\n  </ion-col>\n  <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n    <div class=\"input-item\">\n      <ion-datetime  style=\"width: 100%;\"  displayFormat=\"hh:mm A\"       display-timezone=\"utc\"></ion-datetime>\n    </div>\n  </ion-col>\n</ion-row>\n\n\n<ion-row>\n  <label class=\"form-label\"> Sunday</label>\n  <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n    <div class=\"input-item\">\n      <ion-datetime  style=\"width: 100%;\"  displayFormat=\"hh:mm A\"       display-timezone=\"utc\"></ion-datetime>\n    </div>\n  </ion-col>\n  <ion-col class=\"form-column\"  sizeLg=\"6\" sizeMd=\"6\" sizeXs=\"6\"  >\n    <div class=\"input-item\">\n      <ion-datetime  style=\"width: 100%;\"  displayFormat=\"hh:mm A\"       display-timezone=\"utc\"></ion-datetime>\n    </div>\n  </ion-col>\n</ion-row>\n\n\n      </ion-list>\n      <ion-button    color=\"primary\" expand=\"block\">Update  Details</ion-button>\n    </form>\n  </div>\n</ion-content>\n\n\n\n<ion-content *ngIf=\"isActiveTab=='SOCIAL'\">\n  <div  class=\"\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"saveForm()\" class=\"forms\">\n      <ion-list class=\"inputs-list\" lines=\"full\">\n        <ion-row>\n          <ion-col class=\"form-column\"   >\n            <label class=\"form-label\"> Google Business Page</label>\n              <div class=\"input-item\">\n                <ion-input type=\"text\" placeholder=\"Google Business Page\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n              </div>\n          </ion-col>\n      </ion-row>\n\n                <ion-row>\n                  <ion-col class=\"form-column\"   >\n                    <label class=\"form-label\"> Yelp Page</label>\n                      <div class=\"input-item\">\n                        <ion-input type=\"text\" placeholder=\"Yelp Page\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n                      </div>\n                  </ion-col>\n              </ion-row>\n\n              <ion-row>\n                <ion-col class=\"form-column\"   >\n                  <label class=\"form-label\"> Business Website</label>\n                    <div class=\"input-item\">\n                      <ion-input type=\"text\" placeholder=\"Business Website\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n                    </div>\n                </ion-col>\n            </ion-row>\n\n            <ion-row>\n              <ion-col class=\"form-column\"   >\n                <label class=\"form-label\"> Twitter </label>\n                  <div class=\"input-item\">\n                    <ion-input type=\"text\" placeholder=\"Twitter \" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n                  </div>\n              </ion-col>\n          </ion-row>\n\n          <ion-row>\n            <ion-col class=\"form-column\"   >\n              <label class=\"form-label\">Instagram</label>\n                <div class=\"input-item\">\n                  <ion-input type=\"text\" placeholder=\"Instagram\" formControlName=\"title\" clearInput autocapitalize=\"off\" ></ion-input>\n                </div>\n            </ion-col>\n          </ion-row>\n\n      </ion-list>\n      <ion-button    color=\"primary\" expand=\"block\">Update  Details</ion-button>\n\n    </form>\n  </div>\n</ion-content>","import { Component, OnInit } from '@angular/core';\n import { AuthService } from '../../services/auth.service'\n import { Router,ActivatedRoute,NavigationExtras } from '@angular/router';\n import { ApisService,ApiImage } from '../../services/apis.service';\n import { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Platform,ActionSheetController ,NavController,ModalController} from '@ionic/angular';\n\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\nimport { CategoriesPage } from '../../common/categories/categories.page' \nimport { UploadPage } from '../../common/upload/upload.page'\n\n@Component({\n  selector: 'app-company-information',\n  templateUrl: './company-information.page.html',\n  styleUrls: ['./company-information.page.scss'],\n})\nexport class CompanyInformationPage implements OnInit {\n  isActiveTab:any;\n  form: FormGroup;\n  validation_messages = {\n    'expense_date': [\n      { type: 'required', message: 'Date is required.' },\n     ],\n     'title': [\n      { type: 'required', message: 'Title is required.' },\n     ],\n\n    'amount': [\n      { type: 'required', message: 'amount is required.' },\n     ],\n     'expense_category_name': [\n      { type: 'required', message: 'Category is required.' },\n     ],\n     \n  };\n\n  constructor(\n    private authService: AuthService,\n    private apisService:ApisService,\n    private storageService: StorageService,\n    private toastService: ToastService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private modalController: ModalController,\n    private platform: Platform,\n    \n   ) { \n    this.isActiveTab='GENERAL';\n    this.form = new FormGroup({\n      'amount': new FormControl('', Validators.compose([\n        Validators.required,\n       ])),\n       'title': new FormControl('', Validators.compose([\n        Validators.required,\n       ])),\n\n       \n      'expense_date': new FormControl('', Validators.compose([\n         Validators.required\n       ])),\n       'expense_category_name': new FormControl('', Validators.compose([\n        Validators.required\n        ])),\n      'notes': new FormControl(''),\n    });\n   }\n\n  ngOnInit() {\n  }\n\n\n  async openUploadModal(type:any) {\n    const modal = await this.modalController.create({\n      component: UploadPage,\n      componentProps: { data: '' },\n      backdropDismiss:false\n    });\n    modal.onDidDismiss().then(data=>{\n       if(this.apisService.isDefined(data.data.id)){\n        console.log(data.data)\n        \n        let photo= data.data;\n        \n     \n\n       \n\n                 \n        }\n    })\n    return await modal.present();\n  }\n  updateActiveTab(tab:any){\n    this.isActiveTab=tab;\n  }\n}\n"]}