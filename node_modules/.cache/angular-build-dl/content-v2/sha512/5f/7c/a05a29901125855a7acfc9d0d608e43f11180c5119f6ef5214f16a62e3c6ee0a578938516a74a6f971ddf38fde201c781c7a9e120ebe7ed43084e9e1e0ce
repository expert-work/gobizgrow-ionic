{"version":3,"sources":["webpack:///src/app/services/apis.service.ts","webpack:///src/app/services/toast.service.ts"],"names":["ApisService","httpService","storageService","router","myArray","result","reduce","unique","o","some","obj","id","push","sort","a","b","x","length","characters","charactersLength","i","charAt","Math","floor","random","postData","post","auth_token","ToastService","toastController","infoMessage","create","message","duration","toast","present"],"mappings":"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","file":"default~signup-signup-module-ngfactory~signup-step-two-signup-step-two-module-ngfactory-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpService } from './http.service';\nimport { StorageService } from './storage.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApisService {\n\n  constructor(\n    private httpService: HttpService,\n    private storageService: StorageService,\n    private router: Router\n  ) { }\n\n\n\n  sortArray(myArray:any) {\n    var result = myArray.reduce((unique, o) => {\n      if(!unique.some(obj => obj.id === o.id)) {\n        unique.push(o);\n      }\n      return unique;\n    },[]);\n   \n    return result.sort(function(a, b) {\n        return b.id-a.id ;\n    });\n}\n\nisDefined(x:any) {\n  if (x == null) {\n      return false;\n  }\n  if (x === null) {\n      return false;\n  }\n  if (typeof x === 'undefined') {\n      return false;\n  }\n  return true;\n}\n\n makeid(length:Number) {\n  var result           = '';\n  var characters       = 'abcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n\n\nsignupComplete(postData: any): Observable<any> {\n  return this.httpService.post('signup-complete',postData);\n}\n\n\n //Customers\n\ndashboard(postData: any): Observable<any> {\n  return this.httpService.post('dashboard',postData);\n}\n\ncustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/all',postData);\n}\n\ninvoices(postData: any): Observable<any> {\n  return this.httpService.post('invoices/all',postData);\n}\n\nnextInvoice(postData: any): Observable<any> {\n  return this.httpService.post('invoices/next',postData);\n}\n\nitems(postData: any): Observable<any> {\n  return this.httpService.post('items/all',postData);\n}\ncategories(postData: any): Observable<any> {\n  return this.httpService.post('categories/all',postData);\n}\n\npayments(postData: any): Observable<any> {\n  return this.httpService.post('payments/all',postData);\n}\n\nexpenses(postData: any): Observable<any> {\n  return this.httpService.post('expenses/all',postData);\n}\n\ntaxes(postData: any): Observable<any> {\n  return this.httpService.post('taxes/all',postData);\n}\n\n\ndeleteCustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/delete',postData);\n}\n\ncustomerAdd(postData: any): Observable<any> {\n  return this.httpService.post('customers/add',postData);\n}\ncustomerEdit(auth_token:any,postData: any): Observable<any> {\n  return this.httpService.post('customers/edit/'+auth_token,postData);\n}\n\ncategoryAdd(postData: any): Observable<any> {\n  return this.httpService.post('categories/add',postData);\n}\nitemAdd(postData: any): Observable<any> {\n  return this.httpService.post('items/add',postData);\n}\n\n\n //Invoices\n //Items\n //Payments\n //Expenses\n //Items Categories\n //Expenses Categories\n //Taxes\n //Payment Merhods\n\n\n\n\n // get Industries industries\n  industries(postData: any): Observable<any> {\n    return this.httpService.post('industries',postData);\n  }\n  // get All Estimates\n  estimates(postData: any): Observable<any> {\n    return this.httpService.post('estimates/all',postData);\n  }\n\n  \n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(public toastController: ToastController) { }\n  \n  async presentToast(infoMessage: string) {\n     const toast = await this.toastController.create({\n       message:infoMessage,\n       duration:3000\n     });\n     toast.present();\n\n  }\n}\n"]}