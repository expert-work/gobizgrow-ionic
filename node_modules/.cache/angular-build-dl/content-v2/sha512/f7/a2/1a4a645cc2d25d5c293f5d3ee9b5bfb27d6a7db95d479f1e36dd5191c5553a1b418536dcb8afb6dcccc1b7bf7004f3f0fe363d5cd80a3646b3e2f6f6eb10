{"version":3,"sources":["webpack:///src/app/shell/data-store.ts","webpack:///src/app/user/friends/user-friends.module.ts","webpack:///src/app/user/friends/user-friends.page.html","webpack:///src/app/user/friends/user-friends.page.ts","webpack:///src/app/user/friends/user-friends.resolver.ts","webpack:///src/app/utils/resolver-helper.ts"],"names":["ShellModel","isShell","DataStore","shellModel","networkDelay","settings","timeline","dataSourceObservable","dataSourceWithShellObservable","AppendShell","subscribe","dataValue","next","asObservable","dataObservable","delayObservable","pipe","delayValue","Object","assign","routes","path","component","resolve","data","UserFriendsPageModule","UserFriendsPage","route","segmentValue","searchQuery","showFilters","subscriptions","resolvedRouteData","extractData","state","friendsList","friends","followersList","followers","followingList","following","error","ev","detail","value","searchList","query","filterList","list","filter","item","name","toLowerCase","includes","unsubscribe","UserFriendsResolver","userService","dataSource","getFriendsDataSource","dataStore","getFriendsStore","ResolverHelper","source","constructor"],"mappings":"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","file":"user-friends-user-friends-module-ngfactory-es5.js","sourcesContent":["import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\nimport { delay, map, startWith } from 'rxjs/operators';\n\nimport { AppShellConfig } from './config/app-shell.config';\n\nexport class ShellModel {\n  isShell = false;\n}\n\nexport class DataStore<T> {\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\n  // However, in production you should set this delay to 0 in the assets/config/app-shell.config.prod.json file.\n  // tslint:disable-next-line:max-line-length\n  private networkDelay = (AppShellConfig.settings && AppShellConfig.settings.networkDelay) ? AppShellConfig.settings.networkDelay : 0;\n\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\n\n  constructor(private shellModel: T) { }\n\n  // Static function with generics\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\n    const delayObservable = of(true).pipe(\n      delay(networkDelay)\n    );\n\n    // Assign shell flag accordingly\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n    return combineLatest([\n      delayObservable,\n      dataObservable\n    ]).pipe(\n      // Dismiss unnecessary delayValue\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\n      // Set the shell model as the initial value\n      startWith(Object.assign(shellModel, {isShell: true}))\n    );\n  }\n\n  load(dataSourceObservable: Observable<T>): void {\n    const dataSourceWithShellObservable = DataStore.AppendShell(dataSourceObservable, this.shellModel, this.networkDelay);\n\n    dataSourceWithShellObservable\n    .subscribe((dataValue: T & ShellModel) => {\n      this.timeline.next(dataValue);\n    });\n  }\n\n  public get state(): Observable<T & ShellModel> {\n    return this.timeline.asObservable();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { UserService } from '../user.service';\nimport { UserFriendsPage } from './user-friends.page';\nimport { UserFriendsResolver } from './user-friends.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserFriendsPage,\n    resolve: {\n      data: UserFriendsResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ComponentsModule,\n    RouterModule.forChild(routes),\n    HttpClientModule\n  ],\n  declarations: [UserFriendsPage],\n  providers: [\n    UserFriendsResolver,\n    UserService\n  ]\n})\nexport class UserFriendsPageModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/user\"></ion-back-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"user-friends-content\">\n  <ion-segment value=\"friends\" class=\"user-friends-segment\" (ionChange)=\"segmentChanged($event)\">\n    <ion-segment-button value=\"friends\">\n      <ion-label>Friends</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value=\"followers\">\n      <ion-label>Followers</ion-label>\n    </ion-segment-button>\n    <ion-segment-button value=\"following\">\n      <ion-label>Following</ion-label>\n    </ion-segment-button>\n  </ion-segment>\n\n  <ion-searchbar class=\"friends-searchbar\" animated [(ngModel)]=\"searchQuery\" (ionChange)=\"searchList()\"></ion-searchbar>\n\n  <ng-template #friendItem let-friend=\"friend\">\n    <ion-row class=\"user-details-section\">\n      <ion-col class=\"user-image-wrapper\" size=\"2\">\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n          <app-image-shell class=\"user-image\" animation=\"spinner\" [src]=\"friend.image\" [alt]=\"'friend'\"></app-image-shell>\n        </app-aspect-ratio>\n      </ion-col>\n      <ion-col class=\"user-data-wrapper\">\n        <div class=\"user-info\">\n          <h3 class=\"user-name\">\n            <app-text-shell [data]=\"friend.name\"></app-text-shell>\n          </h3>\n          <h5 class=\"user-job\">\n            <app-text-shell [data]=\"friend.job\"></app-text-shell>\n          </h5>\n        </div>\n      </ion-col>\n      <ion-col class=\"user-actions-wrapper\">\n        <ion-button *ngIf=\"!friend.following\" class=\"user-action\" expand=\"block\" size=\"small\" color=\"primary\">Follow</ion-button>\n        <ion-button *ngIf=\"friend.following\" class=\"user-action\" expand=\"block\" size=\"small\" color=\"light\">Following</ion-button>\n      </ion-col>\n    </ion-row>\n  </ng-template>\n\n  <section [hidden]=\"segmentValue !== 'friends'\">\n    <ion-list class=\"friends-list\" *ngIf=\"friendsList.length > 0\">\n      <ion-item class=\"friend-item\" *ngFor=\"let friend of friendsList\">\n        <ng-container *ngTemplateOutlet=\"friendItem; context: { friend: friend }\"></ng-container>\n      </ion-item>\n    </ion-list>\n    <ng-container *ngIf=\"friendsList.length <= 0\">\n      <h3 class=\"empty-list-message\">No Friends</h3>\n    </ng-container>\n  </section>\n\n  <section [hidden]=\"segmentValue !== 'followers'\">\n    <ion-list class=\"friends-list\" *ngIf=\"followersList.length > 0\">\n      <ion-item class=\"friend-item\" *ngFor=\"let friend of followersList\">\n        <ng-container *ngTemplateOutlet=\"friendItem; context: { friend: friend }\"></ng-container>\n      </ion-item>\n    </ion-list>\n    <ng-container *ngIf=\"followersList.length <= 0\">\n      <h3 class=\"empty-list-message\">No Followers</h3>\n    </ng-container>\n  </section>\n\n  <section [hidden]=\"segmentValue !== 'following'\">\n    <ion-list class=\"friends-list\" *ngIf=\"followingList.length > 0\">\n      <ion-item class=\"friend-item\" *ngFor=\"let friend of followingList\">\n        <ng-container *ngTemplateOutlet=\"friendItem; context: { friend: friend }\"></ng-container>\n      </ion-item>\n    </ion-list>\n    <ng-container *ngIf=\"followingList.length <= 0\">\n      <h3 class=\"empty-list-message\">No Following</h3>\n    </ng-container>\n  </section>\n</ion-content>\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { UserFriendsModel } from './user-friends.model';\n\n@Component({\n  selector: 'app-user-friends',\n  templateUrl: './user-friends.page.html',\n  styleUrls: [\n    './styles/user-friends.page.scss',\n    './styles/user-friends.shell.scss',\n    './styles/user-friends.ios.scss',\n    './styles/user-friends.md.scss'\n  ]\n})\nexport class UserFriendsPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  data: UserFriendsModel;\n\n  segmentValue = 'friends';\n  friendsList: Array<any>;\n  followersList: Array<any>;\n  followingList: Array<any>;\n  searchQuery = '';\n  showFilters = false;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.data && this.data.isShell) ? true : false;\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<UserFriendsModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<UserFriendsModel>(resolvedRouteData.data, UserFriendsModel)\n        .subscribe(\n          (state) => {\n            this.data = state;\n            this.friendsList = this.data.friends;\n            this.followersList = this.data.followers;\n            this.followingList = this.data.following;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  segmentChanged(ev): void {\n    this.segmentValue = ev.detail.value;\n\n    // Check if there's any filter and apply it\n    this.searchList();\n  }\n\n  searchList(): void {\n    const query = (this.searchQuery && this.searchQuery !== null) ? this.searchQuery : '';\n\n    if (this.segmentValue === 'friends') {\n      this.friendsList = this.filterList(this.data.friends, query);\n    } else if (this.segmentValue === 'followers') {\n      this.followersList = this.filterList(this.data.followers, query);\n    } else if (this.segmentValue === 'following') {\n      this.followingList = this.filterList(this.data.following, query);\n    }\n  }\n\n  filterList(list, query): Array<any> {\n    return list.filter(item => item.name.toLowerCase().includes(query.toLowerCase()));\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { UserService } from '../user.service';\nimport { UserFriendsModel } from './user-friends.model';\n\n@Injectable()\nexport class UserFriendsResolver implements Resolve<DataStore<UserFriendsModel>> {\n\n  constructor(private userService: UserService) { }\n\n  resolve(): DataStore<UserFriendsModel> {\n    const dataSource: Observable<UserFriendsModel> = this.userService.getFriendsDataSource();\n    const dataStore: DataStore<UserFriendsModel> = this.userService.getFriendsStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { DataStore } from '../shell/data-store';\nimport { Observable, of } from 'rxjs';\n\nexport interface IResolvedRouteData<T> {\n  data: T | DataStore<T>;\n}\n\nexport class ResolverHelper<T> {\n  // More info on function overloads here: https://www.typescriptlang.org/docs/handbook/functions.html#overloads\n  public static extractData<T>(source: (T | DataStore<T>), constructor: (new(...args: any[]) => T)): Observable<T> {\n    if (source instanceof DataStore) {\n      return source.state;\n    } else if (source instanceof constructor) {\n      // The right side of instanceof should be an expression evaluating to a constructor function (ie. a class), not a type\n      // That's why we included an extra parameter which acts as a constructor function for type T\n      // (see: https://github.com/microsoft/TypeScript/issues/5236)\n      return of(source);\n    }\n  }\n}\n"]}