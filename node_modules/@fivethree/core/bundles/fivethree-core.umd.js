(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/animations'), require('@angular/common'), require('@ionic/angular'), require('@angular/router'), require('rxjs'), require('@angular/platform-browser'), require('rxjs/operators'), require('@angular/forms'), require('@fivethree/ngx-rxjs-animations')) :
    typeof define === 'function' && define.amd ? define('@fivethree/core', ['exports', '@angular/core', '@angular/animations', '@angular/common', '@ionic/angular', '@angular/router', 'rxjs', '@angular/platform-browser', 'rxjs/operators', '@angular/forms', '@fivethree/ngx-rxjs-animations'], factory) :
    (global = global || self, factory((global.fivethree = global.fivethree || {}, global.fivethree.core = {}), global.ng.core, global.ng.animations, global.ng.common, global['ionic-angular'], global.ng.router, global.rxjs, global.ng.platformBrowser, global.rxjs.operators, global.ng.forms, global['ngx-rxjs-animations']));
}(this, (function (exports, core, animations, common, angular, router, rxjs, platformBrowser, operators, forms, ngxRxjsAnimations) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __rest(s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }

    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }

    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    }

    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    }

    function __awaiter(thisArg, _arguments, P, generator) {
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }

    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (_) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    }

    function __exportStar(m, exports) {
        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
    }

    function __values(o) {
        var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
        if (m) return m.call(o);
        return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
    }

    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    }

    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }

    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }

    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    }

    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }

    function __asyncValues(o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    }

    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    function __importStar(mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
        result.default = mod;
        return result;
    }

    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/icon/icon.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivIcon = /** @class */ (function () {
        function FivIcon() {
            this._badge = 0;
            this.state = 'normal';
            this.off = false;
            this.animationDisabled = false;
            this.transitionDone = new core.EventEmitter();
            this.indicatorState = 'scale';
            this.badgeState = 'scale';
        }
        Object.defineProperty(FivIcon.prototype, "name", {
            get: /**
             * @return {?}
             */
            function () {
                return this._name;
            },
            set: /**
             * @param {?} name
             * @return {?}
             */
            function (name) {
                if (this._name) {
                    this.transform(name);
                }
                else {
                    this._name = name;
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivIcon.prototype, "badge", {
            get: /**
             * @return {?}
             */
            function () {
                return this._badge;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                this.transformIndicator(value);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivIcon.prototype, "dot", {
            get: /**
             * @return {?}
             */
            function () {
                return this._dot;
            },
            set: /**
             * @param {?} dot
             * @return {?}
             */
            function (dot) {
                this._dot = dot;
                if (dot) {
                    this.indicatorState = 'normal';
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivIcon.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @param {?} name
         * @return {?}
         */
        FivIcon.prototype.transform = /**
         * @param {?} name
         * @return {?}
         */
        function (name) {
            this.temp = name;
            this.state = 'rotate';
        };
        /**
         * @param {?} value
         * @return {?}
         */
        FivIcon.prototype.transformIndicator = /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (this.dot) {
                this._badge = value;
                return;
            }
            if (value === 0) {
                this._badge = value;
                this.badgeState = 'scale';
            }
            else {
                if (this.badgeState === 'scale') {
                    this.badgeState = 'normal';
                    this._badge = value;
                }
                else {
                    this.tempValue = value;
                    this.badgeState = 'scale';
                }
            }
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivIcon.prototype.rotateAnimDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState === 'normal' && event.toState === 'rotate') {
                this._name = this.temp;
                this.state = 'normal';
            }
            if (event.fromState === 'rotate' && event.toState === 'normal') {
                this.transitionDone.emit(this._name);
            }
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivIcon.prototype.incrementDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState === 'normal' && event.toState === 'scale') {
                if (this.tempValue > 0) {
                    this.badgeState = 'normal';
                    this._badge = this.tempValue;
                }
                else {
                    this._badge = this.tempValue;
                }
            }
        };
        FivIcon.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-icon',
                        template: "<ion-icon [slot]=\"slot\" class=\"icon\" [@rotateAnim]=\"state\" (@rotateAnim.done)=\"rotateAnimDone($event)\" [name]=\"_name\"\n    [color]=\"color\"></ion-icon>\n<span [@scaleAnim]=\"indicatorState\" *ngIf=\"dot\" class=\"indicator-dot\"></span>\n<span class=\"off-background\" *ngIf=\"off\"></span>\n<span class=\"off\" *ngIf=\"off\"></span>\n<span *ngIf=\"smallIcon && badge == 0 && !dot\" class=\"indicator-small-icon\">\n    <ion-icon [color]=\"color\" slot=\"icon-only\" [name]=\"smallIcon\"></ion-icon>\n</span>\n<span *ngIf=\"badge > 0 && !dot\" [@scaleAnim]=\"badgeState\" (@scaleAnim.done)=\"incrementDone($event)\"\n    class=\"indicator-badge\">\n    <span *ngIf=\"badge <= 9\">{{badge}}</span>\n    <span *ngIf=\"badge > 9\">9+</span>\n</span>",
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        animations: [
                            animations.trigger('rotateAnim', [
                                animations.transition('normal => rotate', [animations.animate('125ms ease-out')]),
                                animations.transition('rotate => normal', [animations.animate('125ms ease-in')]),
                                animations.state('rotate', animations.style({ opacity: '0', transform: 'scale(0) rotateZ(45deg)' })),
                                animations.state('normal', animations.style({ opacity: '1', transform: 'scale(1) rotateZ(0deg)' }))
                            ]),
                            animations.trigger('scaleAnim', [
                                animations.transition('void => normal', [
                                    animations.style({ opacity: '0', transform: 'scale(0)' }),
                                    animations.animate('125ms ease-out', animations.style({ opacity: '1', transform: 'scale(1)' }))
                                ]),
                                animations.transition('normal => scale', [animations.animate('125ms ease-out')]),
                                animations.transition('scale => normal', [animations.animate('125ms ease-in')]),
                                animations.state('scale', animations.style({ opacity: '0', transform: 'scale(0)' })),
                                animations.state('normal', animations.style({ opacity: '1', transform: 'scale(1)' }))
                            ])
                        ],
                        styles: [":host{--fiv-padding-end:0;--fiv-padding-start:0;--fiv-position-top:-2px;--fiv-position-right:-6px;--fiv-icon-height:28px;--fiv-icon-width:28px;--fiv-small-icon-height:18px;--fiv-small-icon-width:18px;--fiv-small-icon-font-size:0.8em;--fiv-badge-height:18px;--fiv-badge-width:18px;--fiv-badge-font-size:0.6em;--fiv-dot-height:18px;--fiv-dot-width:18px;position:relative;display:inline-block}.icon{margin:0;font-size:1.8em;color:var(--fiv-icon-color,var(--ion-color-dark));padding-right:var(--fiv-padding-end);padding-left:var(--fiv-padding-start);height:var(--fiv-icon-height);width:var(--fiv-icon-width)}.indicator-badge{position:absolute;top:var(--fiv-position-top);right:var(--fiv-position-right);height:var(--fiv-badge-height);width:var(--fiv-badge-width);background-color:var(--fiv-badge-background-color,var(--ion-color-primary));color:var(--fiv-badge-color,var(--ion-color-light));border-radius:14px;z-index:13}.indicator-badge *{position:absolute;transform:translateX(-50%) translateY(-50%);left:50%;top:50%;font-size:var(--fiv-badge-font-size)}.indicator-dot{position:absolute;top:var(--fiv-position-top);right:var(--fiv-position-right);height:var(--fiv-dot-height);width:var(--fiv-dot-width);background-color:var(--fiv-dot-background-color,var(--ion-color-primary));border-radius:100%;z-index:11}.indicator-small-icon{position:absolute;top:var(--fiv-position-top);right:var(--fiv-position-right);height:var(--fiv-small-icon-height);width:var(--fiv-small-icon-width);background-color:var(--fiv-small-icon-background-color,var(--ion-color-primary));color:var(--fiv-small-icon-color,var(--ion-color-light));border-radius:14px;z-index:13}.indicator-small-icon *{position:absolute;transform:translateX(-50%) translateY(-50%);left:50%;top:50%;font-size:var(--fiv-small-icon-font-size)}.off{width:120%;height:2px;background:var(--fiv-off-color,var(--fiv-icon-color,var(--ion-color-dark)));position:absolute;left:0;transform:rotateZ(45deg) translateY(10px) translateX(6px)}.off-background{width:120%;height:2px;background:#000;position:absolute;background-color:var(--fiv-off-background-color,var(--ion-color-light));left:2px;transform:rotateZ(45deg) translateY(10px) translateX(6px)}"]
                    }] }
        ];
        /** @nocollapse */
        FivIcon.ctorParameters = function () { return []; };
        FivIcon.propDecorators = {
            color: [{ type: core.Input }],
            slot: [{ type: core.Input }],
            smallIcon: [{ type: core.Input }],
            off: [{ type: core.Input }],
            animationDisabled: [{ type: core.Input }, { type: core.HostBinding, args: ['@.disabled',] }],
            transitionDone: [{ type: core.Output }],
            name: [{ type: core.Input }],
            badge: [{ type: core.Input }],
            dot: [{ type: core.Input }]
        };
        return FivIcon;
    }());
    if (false) {
        /** @type {?} */
        FivIcon.prototype._name;
        /** @type {?} */
        FivIcon.prototype._badge;
        /** @type {?} */
        FivIcon.prototype._dot;
        /** @type {?} */
        FivIcon.prototype.tempValue;
        /** @type {?} */
        FivIcon.prototype.state;
        /** @type {?} */
        FivIcon.prototype.temp;
        /** @type {?} */
        FivIcon.prototype.color;
        /** @type {?} */
        FivIcon.prototype.slot;
        /** @type {?} */
        FivIcon.prototype.smallIcon;
        /** @type {?} */
        FivIcon.prototype.off;
        /** @type {?} */
        FivIcon.prototype.animationDisabled;
        /** @type {?} */
        FivIcon.prototype.transitionDone;
        /** @type {?} */
        FivIcon.prototype.indicatorState;
        /** @type {?} */
        FivIcon.prototype.badgeState;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/icon/icon.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivIconModule = /** @class */ (function () {
        function FivIconModule() {
        }
        FivIconModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivIcon],
                        imports: [common.CommonModule, angular.IonicModule],
                        exports: [FivIcon]
                    },] }
        ];
        return FivIconModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/app-bar/app-bar-fab.directive.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivAppBarFabDirective = /** @class */ (function () {
        function FivAppBarFabDirective() {
        }
        FivAppBarFabDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivAppBarFab]',
                        exportAs: 'fivAppBarFab'
                    },] }
        ];
        FivAppBarFabDirective.propDecorators = {
            fivAppBarFab: [{ type: core.Input }]
        };
        return FivAppBarFabDirective;
    }());
    if (false) {
        /** @type {?} */
        FivAppBarFabDirective.prototype.fivAppBarFab;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/app-bar/app-bar.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivAppBar = /** @class */ (function () {
        function FivAppBar() {
            this.cutoutVisible = true;
        }
        FivAppBar.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-app-bar',
                        template: "<div class=\"appbar\"\n  [ngClass]=\"{'cutout': cutoutVisible, 'left': fivFab.fivAppBarFab === 'left', 'right': fivFab.fivAppBarFab === 'right'}\">\n  <div class=\"appbar-rect left\">\n    <div class=\"tabs\">\n      <ng-content select=\"[left]\"></ng-content>\n    </div>\n  </div>\n  <ng-content select=\"fiv-fab\"></ng-content>\n  <svg  viewBox=\"0 0 100 50\" width=\"100\" height=\"50\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M100 0v50H0V0c.543 27.153 22.72 49 50 49S99.457 27.153 99.99 0h.01z\" fill=\"red\" fill-rule=\"evenodd\"/></svg>\n  <div class=\"rect-filler\"></div>\n  <div class=\"appbar-rect right\">\n    <div class=\"tabs\">\n      <ng-content select=\"[right]\"></ng-content>\n    </div>\n  </div>\n</div>",
                        styles: [":host{display:block;position:relative;--fiv-radius:72px;--fiv-appbar-fab-size:56px;--fiv-appbar-height:56px;width:100%;--fiv-border-radius:6px;--fiv-appbar-background-color:var(--ion-color-light);--fiv-side-width:12px;--fiv-fab-icon-color:var(--ion-color-light)}svg{height:calc(var(--fiv-radius)/ 2);width:var(--fiv-radius);left:calc(50% - (var(--fiv-radius)/ 2));position:absolute;bottom:calc(env(safe-area-inset-bottom) + var(--fiv-appbar-height) - var(--fiv-radius)/ 2 - var(--fiv-border-radius))}svg path{fill:var(--fiv-appbar-background-color)}.appbar{width:100%;position:absolute;bottom:0;left:0;height:calc(var(--fiv-appbar-height) + env(safe-area-inset-bottom));background:rgba(0,0,0,0);z-index:5000}.appbar .appbar-rect{overflow:hidden;position:absolute;width:calc(50% - (var(--fiv-radius)/ 2));height:calc(var(--fiv-appbar-height) + env(safe-area-inset-bottom));bottom:0;box-shadow:3px -4px 5px 0 rgba(0,0,0,.1)}.appbar .appbar-rect.left{left:0;background:var(--fiv-appbar-background-color);border-top-right-radius:var(--fiv-border-radius)}.appbar .appbar-rect.right{right:0;background:var(--fiv-appbar-background-color);border-top-left-radius:var(--fiv-border-radius)}.appbar ::ng-deep fiv-fab{position:absolute;left:calc(50% - .5 * var(--fiv-fab-size));top:calc(-.5 * var(--fiv-appbar-fab-size) + var(--fiv-border-radius));display:block;--fiv-fab-size:var(--fiv-appbar-fab-size);z-index:14}.appbar ::ng-deep fiv-fab fiv-icon{--fiv-icon-color:var(--fiv-fab-icon-color)}.appbar .rect-filler{width:var(--fiv-radius);height:calc(env(safe-area-inset-bottom) + var(--fiv-appbar-height) - var(--fiv-radius)/ 2 - var(--fiv-border-radius));position:absolute;overflow:hidden;bottom:0;left:calc(50% - (var(--fiv-radius)/ 2));background:var(--fiv-appbar-background-color)}.appbar:not(.cutout) .appbar-rect.left{border-top-right-radius:0}.appbar:not(.cutout) .appbar-rect.right{border-top-left-radius:0}.appbar.left .appbar-rect.left{width:var(--fiv-side-width)}.appbar.left .appbar-rect.right{width:calc(100% - var(--fiv-radius) - var(--fiv-side-width))}.appbar.left .rect-filler,.appbar.left svg{left:var(--fiv-side-width)}.appbar.left ::ng-deep fiv-fab{transform:translateX(0);left:calc(var(--fiv-side-width) + var(--fiv-radius)/ 2 - var(--fiv-appbar-fab-size)/ 2);position:absolute}.appbar.right .appbar-rect.left{width:calc(100% - var(--fiv-radius) - var(--fiv-side-width))}.appbar.right .appbar-rect.right{width:var(--fiv-side-width)}.appbar.right .rect-filler,.appbar.right svg{left:calc(100% - var(--fiv-radius) - var(--fiv-side-width))}.appbar.right ::ng-deep fiv-fab{transform:translateX(0);left:calc(100% - var(--fiv-side-width) - var(--fiv-radius)/ 2 - var(--fiv-appbar-fab-size)/ 2)}.tabs{display:flex;width:100%;height:100%;position:relative}"]
                    }] }
        ];
        /** @nocollapse */
        FivAppBar.ctorParameters = function () { return []; };
        FivAppBar.propDecorators = {
            titleMode: [{ type: core.Input }],
            fivFab: [{ type: core.ContentChild, args: [FivAppBarFabDirective, { static: false },] }]
        };
        return FivAppBar;
    }());
    if (false) {
        /** @type {?} */
        FivAppBar.prototype.cutoutVisible;
        /** @type {?} */
        FivAppBar.prototype.titleMode;
        /** @type {?} */
        FivAppBar.prototype.fivFab;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/app-bar/app-bar-tab/app-bar-tab.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivAppBarTab = /** @class */ (function () {
        function FivAppBarTab(appBar, ionTabs, router, el) {
            this.appBar = appBar;
            this.ionTabs = ionTabs;
            this.router = router;
            this.el = el;
            this.type = 'unbounded';
        }
        Object.defineProperty(FivAppBarTab.prototype, "active", {
            get: /**
             * @return {?}
             */
            function () {
                return this.router.url.endsWith(this.href);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivAppBarTab.prototype, "classes", {
            get: /**
             * @return {?}
             */
            function () {
                return "label-" + this.appBar.titleMode;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivAppBarTab.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivAppBarTab.prototype.onClick = /**
         * @return {?}
         */
        function () {
            this.ionTabs.select(this.tab);
        };
        FivAppBarTab.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-app-bar-tab',
                        template: "<ng-template>\n  <ng-content></ng-content>\n</ng-template>\n\n<div (click)=\"onClick()\" class=\"tab ion-activatable\" [ngClass]=\"{'active': active}\">\n  <ng-content select=\"fiv-icon\"></ng-content>\n  <ng-content *ngIf=\"appBar.titleMode === 'show' || (active && appBar.titleMode === 'active-only')\" select=\"ion-label\">\n  </ng-content>\n  <ion-ripple-effect [type]=\"type\"></ion-ripple-effect>\n</div>",
                        styles: [":host{width:50%;height:100%;display:inline-block;position:relative}:host .tab{width:100%;height:100%;display:flex;position:relative;flex-direction:column;align-items:center;justify-content:center;overflow:visible}:host .tab.active{--fiv-icon-color:var(--fiv-icon-activ-color, var(--ion-color-primary))}:host .tab.active ::ng-deep ion-label{color:var(--ion-color-primary)}:host(.label-hide) ::ng-deep ion-label{display:none}:host(.label-active-only) .tab:not(.active) ::ng-deep ion-label{display:none}"]
                    }] }
        ];
        /** @nocollapse */
        FivAppBarTab.ctorParameters = function () { return [
            { type: FivAppBar, decorators: [{ type: core.Host }] },
            { type: angular.IonTabs, decorators: [{ type: core.Host }] },
            { type: router.Router },
            { type: core.ElementRef }
        ]; };
        FivAppBarTab.propDecorators = {
            tab: [{ type: core.Input }],
            href: [{ type: core.Input }],
            type: [{ type: core.Input }],
            classes: [{ type: core.HostBinding, args: ['class',] }]
        };
        return FivAppBarTab;
    }());
    if (false) {
        /** @type {?} */
        FivAppBarTab.prototype.tab;
        /** @type {?} */
        FivAppBarTab.prototype.href;
        /** @type {?} */
        FivAppBarTab.prototype.type;
        /** @type {?} */
        FivAppBarTab.prototype.appBar;
        /** @type {?} */
        FivAppBarTab.prototype.ionTabs;
        /** @type {?} */
        FivAppBarTab.prototype.router;
        /** @type {?} */
        FivAppBarTab.prototype.el;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/loading-progress-bar/loading.service.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivLoadingService = /** @class */ (function () {
        function FivLoadingService() {
            this.loading = false;
            this.isComplete = false;
            this.loadChange = new rxjs.BehaviorSubject(this.loading);
            this.completeChange = new rxjs.BehaviorSubject(this.isComplete);
        }
        /**
         * @return {?}
         */
        FivLoadingService.prototype.load = /**
         * @return {?}
         */
        function () {
            this.loading = true;
            this.loadChange.next(this.loading);
        };
        /**
         * @return {?}
         */
        FivLoadingService.prototype.unload = /**
         * @return {?}
         */
        function () {
            this.loading = false;
            this.loadChange.next(this.loading);
            this.isComplete = false;
        };
        /**
         * @return {?}
         */
        FivLoadingService.prototype.toggleSpinner = /**
         * @return {?}
         */
        function () {
            this.loading = !this.loading;
        };
        /**
         * @return {?}
         */
        FivLoadingService.prototype.complete = /**
         * @return {?}
         */
        function () {
            this.isComplete = true;
            this.completeChange.next(this.isComplete);
        };
        FivLoadingService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        FivLoadingService.ctorParameters = function () { return []; };
        /** @nocollapse */ FivLoadingService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function FivLoadingService_Factory() { return new FivLoadingService(); }, token: FivLoadingService, providedIn: "root" });
        return FivLoadingService;
    }());
    if (false) {
        /** @type {?} */
        FivLoadingService.prototype.loading;
        /** @type {?} */
        FivLoadingService.prototype.isComplete;
        /** @type {?} */
        FivLoadingService.prototype.loadChange;
        /** @type {?} */
        FivLoadingService.prototype.completeChange;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/loading-progress-bar/loading-progress-bar.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivLoadingProgressBar = /** @class */ (function () {
        function FivLoadingProgressBar(loadingService, builder) {
            this.loadingService = loadingService;
            this.builder = builder;
            this.loading = false;
            this.global = false;
            this.isComplete = false;
            this.progress = 0;
            this.verticalAlign = 'top';
            this.fivComplete = new core.EventEmitter();
            this.fivDoneShrinking = new core.EventEmitter();
            this.fivRefresh = new core.EventEmitter();
            this.animating = false;
        }
        /**
         * @return {?}
         */
        FivLoadingProgressBar.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (this.global) {
                this.loadingService.completeChange.subscribe((/**
                 * @param {?} isComplete
                 * @return {?}
                 */
                function (isComplete) {
                    if (isComplete) {
                        _this.complete(null);
                    }
                }));
            }
        };
        /**
         * @return {?}
         */
        FivLoadingProgressBar.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            if (this.global) {
                this.loadingService.completeChange.unsubscribe();
            }
        };
        /**
         * @return {?}
         */
        FivLoadingProgressBar.prototype.toggleSpinner = /**
         * @return {?}
         */
        function () {
            this.loading = !this.loading;
        };
        /**
         * @return {?}
         */
        FivLoadingProgressBar.prototype.load = /**
         * @return {?}
         */
        function () {
            this.loading = true;
            this.fivRefresh.emit(this);
        };
        /**
         * @return {?}
         */
        FivLoadingProgressBar.prototype.unload = /**
         * @return {?}
         */
        function () {
            this.loading = false;
            if (this.isComplete) {
                this.isComplete = false;
            }
        };
        /**
         * @param {?=} param
         * @return {?}
         */
        FivLoadingProgressBar.prototype.complete = /**
         * @param {?=} param
         * @return {?}
         */
        function (param) {
            this.param = param;
            this.isComplete = true;
            this.fillIn(850);
        };
        /**
         * @param {?} isComplete
         * @return {?}
         */
        FivLoadingProgressBar.prototype.fillAnimationComplete = /**
         * @param {?} isComplete
         * @return {?}
         */
        function (isComplete) {
            if (isComplete) {
                this.fivComplete.emit(this.param);
                this.isComplete = false;
                this.param = null;
                if (this.global) {
                    this.loadingService.unload();
                }
                else {
                    this.unload();
                }
            }
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivLoadingProgressBar.prototype.setProgress = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            if (progress < 0) {
                this.progress = 0;
                return;
            }
            if (progress > 100) {
                this.progress = 100;
                return;
            }
            this.progress = progress;
        };
        /**
         * @param {?} ms
         * @return {?}
         */
        FivLoadingProgressBar.prototype.fillIn = /**
         * @param {?} ms
         * @return {?}
         */
        function (ms) {
            var _this = this;
            // first define a reusable animation
            this.progress = 0;
            /** @type {?} */
            var myAnimation = this.builder.build([
                animations.style({ width: this.progress + "%" }),
                animations.animate(ms, animations.style({ width: '100%' }))
            ]);
            // use the returned factory object to create a player
            /** @type {?} */
            var player = myAnimation.create(this.linear.nativeElement);
            /** @type {?} */
            var t = rxjs.timer(0, ms / 100).subscribe((/**
             * @return {?}
             */
            function () {
                if (_this.progress <= 0) {
                    return t.unsubscribe();
                }
                _this.progress++;
            }));
            player.play();
            player.onDone((/**
             * @return {?}
             */
            function () {
                if (_this.animating) {
                    _this.fillAnimationComplete(true);
                    _this.stopProgressAnimation();
                }
            }));
            this.stopProgressAnimation();
            this.animating = true;
            this._progressPlayer = player;
        };
        /**
         * @param {?} ms
         * @return {?}
         */
        FivLoadingProgressBar.prototype.shrinkIn = /**
         * @param {?} ms
         * @return {?}
         */
        function (ms) {
            var _this = this;
            // first define a reusable animation
            this.progress = 100;
            /** @type {?} */
            var myAnimation = this.builder.build([
                animations.style({ width: this.progress + "%" }),
                animations.animate(ms, animations.style({ width: 0 }))
            ]);
            // use the returned factory object to create a player
            /** @type {?} */
            var player = myAnimation.create(this.linear.nativeElement);
            /** @type {?} */
            var t = rxjs.timer(0, ms / 100).subscribe((/**
             * @return {?}
             */
            function () {
                if (_this.progress <= 0) {
                    return t.unsubscribe();
                }
                _this.progress--;
            }));
            player.play();
            player.onDone((/**
             * @return {?}
             */
            function () {
                if (_this.animating) {
                    _this.fivDoneShrinking.emit(true);
                    _this.stopProgressAnimation();
                }
            }));
            this.stopProgressAnimation();
            this.animating = true;
            this._progressPlayer = player;
        };
        /**
         * @return {?}
         */
        FivLoadingProgressBar.prototype.stopProgressAnimation = /**
         * @return {?}
         */
        function () {
            if (this._progressPlayer) {
                this._progressPlayer.destroy();
                this._progressPlayer = null;
                this.animating = false;
            }
        };
        FivLoadingProgressBar.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-loading-progress-bar',
                        template: "<div [@progressAnim] *ngIf=\"(!global && loading) || (global && loadingService.loading)\" class=\"slider\" [ngClass]=\"{'top':verticalAlign == 'top','bottom': verticalAlign == 'bottom'}\" >\n  <div class=\"line\"></div>\n  <div *ngIf=\"!isComplete\" class=\"subline inc\"></div>\n  <!-- <div *ngIf=\"isComplete\" [@fillAnim] (@fillAnim.done)=\"fillAnimationComplete(isComplete)\" class=\"subline fill\"></div> -->\n  <div *ngIf=\"!isComplete\" class=\"subline dec\"></div>\n</div>\n<div #linear [@progressAnimLinear] class=\"progress\"  [ngClass]=\"{'top':verticalAlign == 'top','bottom': verticalAlign == 'bottom'}\" ></div>\n",
                        animations: [
                            animations.trigger('progressAnim', [
                                animations.transition('void => *', [
                                    animations.style({ height: '0px' }),
                                    animations.animate('250ms ease-out')
                                ]),
                                animations.transition('* => void', [
                                    animations.animate('299ms ease-in', animations.style({ height: '0px' }))
                                ])
                            ]),
                            animations.trigger('progressAnimLinear', [
                                animations.transition('void => *', [
                                    animations.style({ height: '0px' }),
                                    animations.animate('65ms ease-out')
                                ]),
                                animations.transition('* => void', [
                                    animations.animate('299ms ease-in', animations.style({ height: '0px' }))
                                ])
                            ]),
                            animations.trigger('fillAnim', [
                                animations.transition('void => *', [
                                    animations.style({
                                        width: '0px'
                                    }),
                                    animations.animate('850ms ease-out', animations.style({ width: '100%' }))
                                ])
                            ])
                        ],
                        styles: [":host{--background-progress-bar:var(--ion-color-primary);--background-progress:var(--ion-color-primary-shade);--color-spin-0:var(--background-progress);--color-spin-25:var(--background-progress);--color-spin-50:var(--background-progress);--color-spin-75:var(--background-progress);--color-spin-100:var(--background-progress)}.slider{position:absolute;width:100%;height:5px;overflow-x:hidden;z-index:5000}.progress{position:absolute;height:5px;width:0;overflow-x:hidden;z-index:5000;background:var(--background-progress-bar);transition:240ms}.line{position:absolute;opacity:.4;width:240%;height:5px;-webkit-animation:5.6s ease-in-out infinite colorspin;animation:5.6s ease-in-out infinite colorspin}.subline{position:absolute;height:5px;background:inherit}.inc{-webkit-animation:1.6s infinite increase,5.6s ease-in-out infinite colorspin;animation:1.6s infinite increase,5.6s ease-in-out infinite colorspin}.dec{-webkit-animation:1.6s .4s infinite decrease,5.6s ease-in-out infinite colorspin;animation:1.6s .4s infinite decrease,5.6s ease-in-out infinite colorspin}.fill{left:0;width:100%;-webkit-animation:5.6s ease-in-out infinite colorspin;animation:5.6s ease-in-out infinite colorspin}@-webkit-keyframes increase{from{left:-5%;width:5%}to{left:130%;width:100%}}@keyframes increase{from{left:-5%;width:5%}to{left:130%;width:100%}}@-webkit-keyframes decrease{from{left:-80%;width:80%}to{left:110%;width:10%}}@keyframes decrease{from{left:-80%;width:80%}to{left:110%;width:10%}}@-webkit-keyframes colorspin{0%{background-color:var(--color-spin-0)}25%{background-color:var(--color-spin-25)}50%{background-color:var(--color-spin-50)}75%{background-color:var(--color-spin-75)}100%{background-color:var(--color-spin-100)}}@keyframes colorspin{0%{background-color:var(--color-spin-0)}25%{background-color:var(--color-spin-25)}50%{background-color:var(--color-spin-50)}75%{background-color:var(--color-spin-75)}100%{background-color:var(--color-spin-100)}}.top{top:0;left:0}.bottom{bottom:0;left:0}"]
                    }] }
        ];
        /** @nocollapse */
        FivLoadingProgressBar.ctorParameters = function () { return [
            { type: FivLoadingService },
            { type: animations.AnimationBuilder }
        ]; };
        FivLoadingProgressBar.propDecorators = {
            loading: [{ type: core.Input }],
            global: [{ type: core.Input }],
            isComplete: [{ type: core.Input }],
            verticalAlign: [{ type: core.Input }],
            fivComplete: [{ type: core.Output }],
            fivDoneShrinking: [{ type: core.Output }],
            fivRefresh: [{ type: core.Output }],
            bar: [{ type: core.ViewChild, args: ['bar', { static: false },] }],
            linear: [{ type: core.ViewChild, args: ['linear', { static: false },] }]
        };
        return FivLoadingProgressBar;
    }());
    if (false) {
        /** @type {?} */
        FivLoadingProgressBar.prototype.loading;
        /** @type {?} */
        FivLoadingProgressBar.prototype.global;
        /** @type {?} */
        FivLoadingProgressBar.prototype.isComplete;
        /** @type {?} */
        FivLoadingProgressBar.prototype.progress;
        /** @type {?} */
        FivLoadingProgressBar.prototype.verticalAlign;
        /** @type {?} */
        FivLoadingProgressBar.prototype.fivComplete;
        /** @type {?} */
        FivLoadingProgressBar.prototype.fivDoneShrinking;
        /** @type {?} */
        FivLoadingProgressBar.prototype.fivRefresh;
        /** @type {?} */
        FivLoadingProgressBar.prototype.bar;
        /** @type {?} */
        FivLoadingProgressBar.prototype.linear;
        /** @type {?} */
        FivLoadingProgressBar.prototype.param;
        /** @type {?} */
        FivLoadingProgressBar.prototype._progressPlayer;
        /**
         * @type {?}
         * @private
         */
        FivLoadingProgressBar.prototype.animating;
        /** @type {?} */
        FivLoadingProgressBar.prototype.loadingService;
        /**
         * @type {?}
         * @private
         */
        FivLoadingProgressBar.prototype.builder;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/loading-progress-bar/loading-progress-bar.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivLoadingProgressBarModule = /** @class */ (function () {
        function FivLoadingProgressBarModule() {
        }
        FivLoadingProgressBarModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivLoadingProgressBar],
                        imports: [common.CommonModule],
                        exports: [FivLoadingProgressBar],
                        providers: [FivLoadingService]
                    },] }
        ];
        return FivLoadingProgressBarModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/center/center.directive.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivCenter = /** @class */ (function () {
        function FivCenter(sanitizer) {
            this.sanitizer = sanitizer;
            this.vertical = true;
            this.horizontal = true;
        }
        Object.defineProperty(FivCenter.prototype, "myStyle", {
            get: /**
             * @return {?}
             */
            function () {
                // tslint:disable-next-line:max-line-length
                /** @type {?} */
                var style = "position: absolute; " + (this.vertical && this.horizontal
                    ? 'top: 50%; left: 50%; transform: translateY(-50%) translateX(-50%);'
                    : this.vertical
                        ? 'top: 50%; transform: translateY(-50%);'
                        : 'left: 50%; transform: translateX(-50%);');
                return this.sanitizer.bypassSecurityTrustStyle(style);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivCenter.prototype, "fivCenter", {
            set: /**
             * @param {?} center
             * @return {?}
             */
            function (center) {
                if (center) {
                    this.vertical = center.vertical;
                    this.horizontal = center.horizontal;
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivCenter.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        FivCenter.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivCenter]'
                    },] }
        ];
        /** @nocollapse */
        FivCenter.ctorParameters = function () { return [
            { type: platformBrowser.DomSanitizer }
        ]; };
        FivCenter.propDecorators = {
            myStyle: [{ type: core.HostBinding, args: ['style',] }],
            fivCenter: [{ type: core.Input }]
        };
        return FivCenter;
    }());
    if (false) {
        /** @type {?} */
        FivCenter.prototype.vertical;
        /** @type {?} */
        FivCenter.prototype.horizontal;
        /**
         * @type {?}
         * @private
         */
        FivCenter.prototype.sanitizer;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/center/center.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivCenterModule = /** @class */ (function () {
        function FivCenterModule() {
        }
        FivCenterModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivCenter],
                        imports: [common.CommonModule],
                        exports: [FivCenter]
                    },] }
        ];
        return FivCenterModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/spinner/spinner.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var BASE_SIZE = 100;
    var FivSpinner = /** @class */ (function () {
        function FivSpinner(_document, _elementRef, change, builder, sanitizer) {
            this._document = _document;
            this._elementRef = _elementRef;
            this.change = change;
            this.builder = builder;
            this.sanitizer = sanitizer;
            this._diameter = BASE_SIZE;
            this._strokeWidth = 10;
            this._value = 0;
            this.fivProgress = new core.EventEmitter();
            this.fivComplete = new core.EventEmitter();
            this.mode = 'indeterminate';
            this.circleRadius = 45;
            this._color = 'var(--fiv-spin-color)';
        }
        Object.defineProperty(FivSpinner.prototype, "class", {
            get: /**
             * @return {?}
             */
            function () {
                return (this.mode +
                    ' fiv-spinner fiv-progress-spinner fiv-progress-spinner-indeterminate-animation');
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivSpinner.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        Object.defineProperty(FivSpinner.prototype, "viewBox", {
            get: /**
             * @return {?}
             */
            function () {
                /** @type {?} */
                var viewBox = this.circleRadius * 2 + this.strokeWidth;
                return "0 0 " + viewBox + " " + viewBox;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivSpinner.prototype, "strokeCircumference", {
            /** The stroke circumference of the svg circle. */
            get: /**
             * The stroke circumference of the svg circle.
             * @return {?}
             */
            function () {
                return 2 * Math.PI * this.circleRadius;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivSpinner.prototype, "strokeDashOffset", {
            /** The dash offset of the svg circle. */
            get: /**
             * The dash offset of the svg circle.
             * @return {?}
             */
            function () {
                if (this.mode === 'determinate') {
                    return (this.strokeCircumference * (100 - this._value)) / 100;
                }
                return null;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivSpinner.prototype, "circleStrokeWidth", {
            /** Stroke width of the circle in percent. */
            get: /**
             * Stroke width of the circle in percent.
             * @return {?}
             */
            function () {
                return (this.strokeWidth / this.diameter) * 100;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivSpinner.prototype, "value", {
            /** Value of the progress circle. */
            get: /**
             * Value of the progress circle.
             * @return {?}
             */
            function () {
                return this.mode === 'determinate' ? this._value : 0;
            },
            set: /**
             * @param {?} newValue
             * @return {?}
             */
            function (newValue) {
                this._value = Math.max(0, Math.min(100, newValue));
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivSpinner.prototype, "diameter", {
            get: /**
             * @return {?}
             */
            function () {
                return this._diameter;
            },
            set: /**
             * @param {?} size
             * @return {?}
             */
            function (size) {
                this._diameter = size;
                if (!FivSpinner.diameters.has(this._diameter)) {
                    this._attachStyleNode();
                }
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivSpinner.prototype, "strokeWidth", {
            /** Stroke width of the progress spinner. */
            get: /**
             * Stroke width of the progress spinner.
             * @return {?}
             */
            function () {
                return this._strokeWidth || this.diameter / 10;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                this._strokeWidth = value;
            },
            enumerable: true,
            configurable: true
        });
        /** Dynamically generates a style tag containing the correct animation for this diameter. */
        /**
         * Dynamically generates a style tag containing the correct animation for this diameter.
         * @private
         * @return {?}
         */
        FivSpinner.prototype._attachStyleNode = /**
         * Dynamically generates a style tag containing the correct animation for this diameter.
         * @private
         * @return {?}
         */
        function () {
            /** @type {?} */
            var styleTag = FivSpinner.styleTag;
            if (!styleTag) {
                styleTag = this._document.createElement('style');
                this._document.head.appendChild(styleTag);
                FivSpinner.styleTag = styleTag;
            }
            if (styleTag && styleTag.sheet) {
                ((/** @type {?} */ (styleTag.sheet))).insertRule(this._getAnimationText(), 0);
            }
            FivSpinner.diameters.add(this.diameter);
        };
        /** Generates animation styles adjusted for the spinner's diameter. */
        /**
         * Generates animation styles adjusted for the spinner's diameter.
         * @private
         * @return {?}
         */
        FivSpinner.prototype._getAnimationText = /**
         * Generates animation styles adjusted for the spinner's diameter.
         * @private
         * @return {?}
         */
        function () {
            /** @type {?} */
            var INDETERMINATE_ANIMATION_TEMPLATE = "\n    @keyframes fiv-progress-spinner-stroke-rotate-DIAMETER {\n       0%      { stroke-dashoffset: START_VALUE;  transform: rotate(0); }\n       12.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(0); }\n       12.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(72.5deg); }\n       25%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(72.5deg); }\n       25.0001%   { stroke-dashoffset: START_VALUE;  transform: rotate(270deg); }\n       37.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(270deg); }\n       37.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(161.5deg); }\n       50%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(161.5deg); }\n       50.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(180deg); }\n       62.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(180deg); }\n       62.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(251.5deg); }\n       75%     { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(251.5deg); }\n       75.0001%  { stroke-dashoffset: START_VALUE;  transform: rotate(90deg); }\n       87.5%   { stroke-dashoffset: END_VALUE;    transform: rotate(90deg); }\n       87.5001%  { stroke-dashoffset: END_VALUE;    transform: rotateX(180deg) rotate(341.5deg); }\n       100%    { stroke-dashoffset: START_VALUE;  transform: rotateX(180deg) rotate(341.5deg); }\n     }\n   ";
            return (INDETERMINATE_ANIMATION_TEMPLATE
                // Animation should begin at 5% and end at 80%
                .replace(/START_VALUE/g, "" + 0.95 * this.strokeCircumference)
                .replace(/END_VALUE/g, "" + 0.2 * this.strokeCircumference)
                .replace(/DIAMETER/g, "" + this.diameter));
        };
        /**
         * @param {?} duration
         * @return {?}
         */
        FivSpinner.prototype.completeIn = /**
         * @param {?} duration
         * @return {?}
         */
        function (duration) {
            var _this = this;
            this.mode = 'determinate';
            this.change.detectChanges();
            /** @type {?} */
            var animation = this.builder.build([
                animations.style({
                    'stroke-dasharray': 180,
                    'stroke-dashoffset': 90,
                    transformOrigin: 'center',
                    stroke: 'var(--fiv-spin-color)'
                }),
                animations.animate(duration + "ms ease-out", animations.style({
                    'stroke-dasharray': 315,
                    'stroke-dashoffset': 0,
                    transformOrigin: 'center',
                    stroke: 'var(--fiv-spin-color)',
                    opacity: 0
                }))
            ]);
            /** @type {?} */
            var player = animation.create(this.determinateCircle.nativeElement);
            player.play();
            player.onDone((/**
             * @return {?}
             */
            function () {
                _this.fivComplete.emit(_this);
                _this._value = 0;
            }));
            /** @type {?} */
            var i = rxjs.interval(duration / 100);
            /** @type {?} */
            var t = rxjs.timer(duration + duration / 50);
            /** @type {?} */
            var progress = i.pipe(operators.takeUntil(t));
            progress.subscribe((/**
             * @param {?} p
             * @return {?}
             */
            function (p) {
                _this.fivProgress.emit(p);
            }));
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivSpinner.prototype.setValue = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            this.mode = 'determinate';
            this._value = progress;
            this.change.detectChanges();
        };
        /**
         * @return {?}
         */
        FivSpinner.prototype.spin = /**
         * @return {?}
         */
        function () {
            this.mode = 'indeterminate';
            this.change.detectChanges();
        };
        /**
         * @return {?}
         */
        FivSpinner.prototype.stop = /**
         * @return {?}
         */
        function () {
            this._value = 0;
            this.change.detectChanges();
        };
        /**
         * @param {?} mode
         * @return {?}
         */
        FivSpinner.prototype.setMode = /**
         * @param {?} mode
         * @return {?}
         */
        function (mode) {
            this.mode = mode;
            this.change.detectChanges();
        };
        FivSpinner.diameters = new Set([BASE_SIZE]);
        FivSpinner.styleTag = null;
        FivSpinner.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-spinner',
                        template: "<svg [style.width.px]=\"diameter\" [style.height.px]=\"diameter\" [attr.viewBox]=\"viewBox\"\n  preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" [ngSwitch]=\"mode == 'indeterminate'\">\n  <circle [attr.stroke]=\"_color\" *ngSwitchCase=\"true\" cx=\"50%\" cy=\"50%\" [attr.r]=\"circleRadius\"\n    [style.animation-name]=\"'fiv-progress-spinner-stroke-rotate-' + diameter\"\n    [style.stroke-dashoffset.px]=\"strokeDashOffset\" [style.stroke-dasharray.px]=\"strokeCircumference\"\n    [style.stroke-width.%]=\"circleStrokeWidth\"></circle>\n\n  <circle [attr.stroke]=\"_color\" class=\"determinate-circle\" #determinateCircle *ngSwitchCase=\"false\" cx=\"50%\" cy=\"50%\"\n    [attr.r]=\"circleRadius\" [style.stroke-dashoffset.px]=\"strokeDashOffset\"\n    [style.stroke-dasharray.px]=\"strokeCircumference\" [style.stroke-width.%]=\"circleStrokeWidth\"></circle>\n</svg>",
                        // tslint:disable-next-line:use-host-property-decorator
                        host: {
                            '[style.width.px]': 'diameter',
                            '[style.height.px]': 'diameter'
                        },
                        changeDetection: core.ChangeDetectionStrategy.OnPush,
                        encapsulation: core.ViewEncapsulation.None,
                        styles: ["fiv-spinner{display:block;position:relative}fiv-spinner svg{position:absolute;transform:rotate(-90deg);top:0;left:0;transform-origin:center;overflow:visible}fiv-spinner circle{fill:transparent;transform-origin:center;transition:stroke-dashoffset 225ms linear}fiv-spinner.fiv-progress-spinner-indeterminate-animation.determinate circle{transition-property:stroke;-webkit-animation-duration:4s;animation-duration:4s;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}fiv-spinner.fiv-progress-spinner-indeterminate-animation.indeterminate{-webkit-animation:2s linear infinite fiv-progress-spinner-linear-rotate;animation:2s linear infinite fiv-progress-spinner-linear-rotate}fiv-spinner.fiv-progress-spinner-indeterminate-animation.indeterminate circle{transition-property:stroke;-webkit-animation-duration:4s;animation-duration:4s;-webkit-animation-timing-function:ease-in-out;animation-timing-function:ease-in-out;-webkit-animation-iteration-count:infinite;animation-iteration-count:infinite}@-webkit-keyframes fiv-progress-spinner-linear-rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes fiv-progress-spinner-linear-rotate{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@-webkit-keyframes fiv-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.6061718819px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677646px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677646px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.6061718819px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.6061718819px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677646px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677646px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.6061718819px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.6061718819px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677646px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677646px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.6061718819px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.6061718819px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677646px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677646px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.6061718819px;transform:rotateX(180deg) rotate(341.5deg)}}@keyframes fiv-progress-spinner-stroke-rotate-100{0%{stroke-dashoffset:268.6061718819px;transform:rotate(0)}12.5%{stroke-dashoffset:56.5486677646px;transform:rotate(0)}12.5001%{stroke-dashoffset:56.5486677646px;transform:rotateX(180deg) rotate(72.5deg)}25%{stroke-dashoffset:268.6061718819px;transform:rotateX(180deg) rotate(72.5deg)}25.0001%{stroke-dashoffset:268.6061718819px;transform:rotate(270deg)}37.5%{stroke-dashoffset:56.5486677646px;transform:rotate(270deg)}37.5001%{stroke-dashoffset:56.5486677646px;transform:rotateX(180deg) rotate(161.5deg)}50%{stroke-dashoffset:268.6061718819px;transform:rotateX(180deg) rotate(161.5deg)}50.0001%{stroke-dashoffset:268.6061718819px;transform:rotate(180deg)}62.5%{stroke-dashoffset:56.5486677646px;transform:rotate(180deg)}62.5001%{stroke-dashoffset:56.5486677646px;transform:rotateX(180deg) rotate(251.5deg)}75%{stroke-dashoffset:268.6061718819px;transform:rotateX(180deg) rotate(251.5deg)}75.0001%{stroke-dashoffset:268.6061718819px;transform:rotate(90deg)}87.5%{stroke-dashoffset:56.5486677646px;transform:rotate(90deg)}87.5001%{stroke-dashoffset:56.5486677646px;transform:rotateX(180deg) rotate(341.5deg)}100%{stroke-dashoffset:268.6061718819px;transform:rotateX(180deg) rotate(341.5deg)}}"]
                    }] }
        ];
        /** @nocollapse */
        FivSpinner.ctorParameters = function () { return [
            { type: undefined, decorators: [{ type: core.Optional }, { type: core.Inject, args: [common.DOCUMENT,] }] },
            { type: core.ElementRef },
            { type: core.ChangeDetectorRef },
            { type: animations.AnimationBuilder },
            { type: platformBrowser.DomSanitizer }
        ]; };
        FivSpinner.propDecorators = {
            fivProgress: [{ type: core.Output }],
            fivComplete: [{ type: core.Output }],
            determinateCircle: [{ type: core.ViewChild, args: ['determinateCircle', { static: false },] }],
            mode: [{ type: core.Input }],
            circleRadius: [{ type: core.Input }],
            class: [{ type: core.HostBinding, args: ['class',] }],
            value: [{ type: core.Input }],
            diameter: [{ type: core.Input }],
            strokeWidth: [{ type: core.Input }]
        };
        return FivSpinner;
    }());
    if (false) {
        /**
         * @type {?}
         * @private
         */
        FivSpinner.diameters;
        /**
         * @type {?}
         * @private
         */
        FivSpinner.styleTag;
        /**
         * @type {?}
         * @private
         */
        FivSpinner.prototype._diameter;
        /** @type {?} */
        FivSpinner.prototype._strokeWidth;
        /** @type {?} */
        FivSpinner.prototype._value;
        /** @type {?} */
        FivSpinner.prototype.fivProgress;
        /** @type {?} */
        FivSpinner.prototype.fivComplete;
        /** @type {?} */
        FivSpinner.prototype.determinateCircle;
        /** @type {?} */
        FivSpinner.prototype.mode;
        /** @type {?} */
        FivSpinner.prototype.circleRadius;
        /** @type {?} */
        FivSpinner.prototype._color;
        /**
         * @type {?}
         * @private
         */
        FivSpinner.prototype._document;
        /** @type {?} */
        FivSpinner.prototype._elementRef;
        /** @type {?} */
        FivSpinner.prototype.change;
        /**
         * @type {?}
         * @private
         */
        FivSpinner.prototype.builder;
        /** @type {?} */
        FivSpinner.prototype.sanitizer;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/fab/fab.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivFab = /** @class */ (function () {
        function FivFab(renderer, platform, content) {
            this.renderer = renderer;
            this.platform = platform;
            this.content = content;
            this.vertical = 'none';
            this.horizontal = 'none';
            this.mode = 'normal';
            this.spinColor = 'primary';
            this.disabled = false;
            this.visible = true;
            this.pulse = false;
            this.animationDisabled = false;
            this._scroll = false;
            this.fivComplete = new core.EventEmitter();
            this.fivRefresh = new core.EventEmitter();
            this.fivHidden = new core.EventEmitter();
            this.fivShow = new core.EventEmitter();
            this.fivTransition = new core.EventEmitter();
            this.loading = false;
            this.extended = false;
            this.iconState = 'normal';
            this.currentDeltaY = 0;
            this.$onDestroy = new rxjs.Subject();
        }
        Object.defineProperty(FivFab.prototype, "scroll", {
            get: /**
             * @return {?}
             */
            function () {
                return this._scroll;
            },
            set: /**
             * @param {?} scroll
             * @return {?}
             */
            function (scroll) {
                this._scroll = scroll;
                this.$onDestroy.next();
                this.ngOnInit();
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivFab.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (!this.content) {
                return;
            }
            if (!this.scroll) {
                return;
            }
            this.content.scrollEvents = true;
            /** @type {?} */
            var directionChange = this.content.ionScroll.pipe(operators.map((/**
             * @param {?} ev
             * @return {?}
             */
            function (ev) { return ev.detail.deltaY; })), operators.pairwise(), operators.map((/**
             * @param {?} __0
             * @return {?}
             */
            function (_a) {
                var _b = __read(_a, 2), y1 = _b[0], y2 = _b[1];
                return (y2 < y1 ? 'Up' : 'Down');
            })), operators.distinctUntilChanged(), operators.takeUntil(this.content.ionScrollEnd), operators.repeat());
            /** @type {?} */
            var up = directionChange.pipe(operators.filter((/**
             * @param {?} direction
             * @return {?}
             */
            function (direction) { return direction === 'Up'; })));
            /** @type {?} */
            var down = directionChange.pipe(operators.filter((/**
             * @param {?} direction
             * @return {?}
             */
            function (direction) { return direction === 'Down'; })));
            up.pipe(operators.tap((/**
             * @return {?}
             */
            function () {
                return _this.labelComp ? (_this.extended = true) : (_this.visible = true);
            })), operators.takeUntil(this.$onDestroy)).subscribe();
            down
                .pipe(operators.tap((/**
             * @return {?}
             */
            function () {
                return _this.labelComp ? (_this.extended = false) : (_this.visible = false);
            })), operators.takeUntil(this.$onDestroy))
                .subscribe();
        };
        /**
         * @return {?}
         */
        FivFab.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            this.$onDestroy.next();
        };
        /**
         * @return {?}
         */
        FivFab.prototype.ngAfterContentInit = /**
         * @return {?}
         */
        function () {
            this.extended = !!this.labelComp;
        };
        /**
         * @return {?}
         */
        FivFab.prototype.load = /**
         * @return {?}
         */
        function () {
            this.loading = true;
            this.fivRefresh.emit(this);
        };
        /**
         * @return {?}
         */
        FivFab.prototype.unload = /**
         * @return {?}
         */
        function () {
            if (this.bar) {
                this.bar.unload();
            }
            this.loading = false;
        };
        /**
         * @return {?}
         */
        FivFab.prototype.complete = /**
         * @return {?}
         */
        function () {
            if (this.loading) {
                if (this.spinner) {
                    this.spinner.completeIn(1000);
                }
                else if (this.bar) {
                    this.bar.complete();
                }
            }
        };
        /**
         * @return {?}
         */
        FivFab.prototype.fillAnimationDone = /**
         * @return {?}
         */
        function () {
            this.fivComplete.emit(this);
            this.unload();
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivFab.prototype.rotate = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            this.renderer.setStyle(this.spinner._elementRef.nativeElement, 'transform', "rotateZ(" + (progress / 200) * 360 + "deg)");
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivFab.prototype.fabAnimDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState === 'void') {
                this.fivShow.emit(this);
            }
            if (event.toState === 'void') {
                this.fivHidden.emit(this);
            }
        };
        FivFab.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-fab',
                        template: "<ion-fab *ngIf=\"visible\" [@.disabled]=\"animationDisabled\" (@fabAnim.done)=\"fabAnimDone($event)\" [@fabAnim]=\"horizontal\"\n  [ngClass]=\"[mode,horizontal,vertical]\" [slot]=\"slot\">\n  <fiv-spinner *ngIf=\"!extended && loading\" (fivProgress)=\"rotate($event)\" #spinner (fivComplete)=\"fillAnimationDone()\"\n    class=\"spinner\" [circleRadius]=\"30\" [diameter]=\"68\" [strokeWidth]=\"4\" [mode]=\"'indeterminate'\">\n  </fiv-spinner>\n\n  <ion-button [ngClass]=\"{'pulse': pulse, 'small':!labelComp || !extended}\" [color]=\"color\" [disabled]=\"disabled\">\n    <fiv-loading-progress-bar *ngIf=\"extended\" [loading]=\"loading\" (fivComplete)=\"fillAnimationDone()\" #bar>\n    </fiv-loading-progress-bar>\n    <ng-content select=\"fiv-icon\"></ng-content>\n    <ng-content select=\"ion-icon\"></ng-content>\n    <div [@labelAnim] *ngIf=\"labelComp && extended\">\n      <ng-content select=\"ion-label\"></ng-content>\n    </div>\n  </ion-button>\n</ion-fab>",
                        animations: [
                            animations.trigger('fabAnim', [
                                animations.transition('void => center', [
                                    animations.style({
                                        transform: 'translateX(-50%) scale(0) '
                                    }),
                                    animations.animate('250ms ease', animations.style({ transform: 'translateX(-50%) scale(1)' }))
                                ]),
                                animations.transition('center => void', [
                                    animations.style({
                                        transform: 'translateX(-50%) scale(1) '
                                    }),
                                    animations.animate('250ms ease', animations.style({ transform: ' translateX(-50%) scale(0)' }))
                                ]),
                                animations.transition('void => *', [
                                    animations.style({
                                        transform: 'scale(0)'
                                    }),
                                    animations.animate('250ms ease', animations.style({
                                        transform: 'scale(1)'
                                    }))
                                ]),
                                animations.transition('* => void', [
                                    animations.style({
                                        transform: 'scale(1)'
                                    }),
                                    animations.animate('250ms ease', animations.style({
                                        transform: 'scale(0)'
                                    }))
                                ])
                            ]),
                            animations.trigger('labelAnim', [
                                animations.transition('void => *', [
                                    animations.style({ width: '0', opacity: 0 }),
                                    animations.animate('140ms', animations.style({ width: '*', opacity: 1 }))
                                ]),
                                animations.transition('* => void', [
                                    animations.style({ width: '*', opacity: 1 }),
                                    animations.animate('120ms', animations.style({ width: 0, opacity: 0 }))
                                ])
                            ])
                        ],
                        styles: [":host{--fiv-fab-size:56px;--fiv-spinner-size:calc(var(--fiv-fab-size) + 12px);--fiv-fab-bottom:calc(10px + env(safe-area-inset-bottom));--fiv-fab-top:calc(10px + env(safe-area-inset-top));--background-fab-progress-bar:var(--ion-color-primary);--background-fab-progress:var(--ion-color-primary-shade);position:inherit}fiv-loading-progress-bar{--background-progress-bar:var(--background-fab-progress-bar);--background-progress:var(--background-fab-progress)}:host(.button-disabled){pointer-events:none}::ng-deep ng-deep fiv-icon.ios{--fiv-icon-height:24px;--fiv-icon-width:24px}::ng-deep fiv-icon:not(.ios){--fiv-icon-height:25px;--fiv-icon-width:25px}ion-button{--border-radius:calc(var(--fiv-fab-size) / 2);height:var(--fiv-fab-size);min-width:var(--fiv-fab-size);-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:0;margin-inline-end:0;margin:0}ion-fab.top{top:var(--fiv-fab-top)}ion-fab.top.edge{top:calc(var(--fiv-fab-top) - 38px)}ion-fab.middle{top:calc(50% - var(--fiv-spinner-size))}ion-fab.bottom.edge{bottom:calc(var(--fiv-fab-bottom) - 38px)}ion-fab.bottom{bottom:var(--fiv-fab-bottom)}ion-fab.center{left:50%;transform:translateX(-50%)}ion-fab.start{left:10px}ion-fab.end{right:calc(10px + var(--ion-safe-area-right,0px))}.pulse{-webkit-animation:1.2s infinite shadow-pulse;animation:1.2s infinite shadow-pulse}fiv-spinner{position:absolute;left:calc((var(--fiv-spinner-size) - var(--fiv-fab-size))/ -2);top:calc((var(--fiv-spinner-size) - var(--fiv-fab-size))/ -2)}@-webkit-keyframes shadow-pulse{0%{border-radius:calc(var(--fiv-spinner-size)/ 2);box-shadow:0 0 0 0 rgba(0,0,0,.2)}100%{border-radius:calc(var(--fiv-spinner-size)/ 2);box-shadow:0 0 0 28px transparent}}@keyframes shadow-pulse{0%{border-radius:calc(var(--fiv-spinner-size)/ 2);box-shadow:0 0 0 0 rgba(0,0,0,.2)}100%{border-radius:calc(var(--fiv-spinner-size)/ 2);box-shadow:0 0 0 28px transparent}}"]
                    }] }
        ];
        /** @nocollapse */
        FivFab.ctorParameters = function () { return [
            { type: core.Renderer2 },
            { type: angular.Platform },
            { type: angular.IonContent, decorators: [{ type: core.Optional }] }
        ]; };
        FivFab.propDecorators = {
            vertical: [{ type: core.Input }],
            horizontal: [{ type: core.Input }],
            mode: [{ type: core.Input }],
            slot: [{ type: core.Input }],
            spinColor: [{ type: core.Input }],
            color: [{ type: core.Input }],
            disabled: [{ type: core.Input }],
            visible: [{ type: core.Input }],
            pulse: [{ type: core.Input }],
            animationDisabled: [{ type: core.Input }],
            scroll: [{ type: core.Input }],
            feature: [{ type: core.Input }],
            fivComplete: [{ type: core.Output }],
            fivRefresh: [{ type: core.Output }],
            fivHidden: [{ type: core.Output }],
            fivShow: [{ type: core.Output }],
            fivTransition: [{ type: core.Output }],
            spinner: [{ type: core.ViewChild, args: ['spinner', { static: false },] }],
            bar: [{ type: core.ViewChild, args: ['bar', { static: false },] }],
            labelComp: [{ type: core.ContentChild, args: [angular.IonLabel, { static: false },] }]
        };
        return FivFab;
    }());
    if (false) {
        /** @type {?} */
        FivFab.prototype.vertical;
        /** @type {?} */
        FivFab.prototype.horizontal;
        /** @type {?} */
        FivFab.prototype.mode;
        /** @type {?} */
        FivFab.prototype.slot;
        /** @type {?} */
        FivFab.prototype.spinColor;
        /** @type {?} */
        FivFab.prototype.color;
        /** @type {?} */
        FivFab.prototype.disabled;
        /** @type {?} */
        FivFab.prototype.visible;
        /** @type {?} */
        FivFab.prototype.pulse;
        /** @type {?} */
        FivFab.prototype.animationDisabled;
        /** @type {?} */
        FivFab.prototype._scroll;
        /** @type {?} */
        FivFab.prototype.feature;
        /** @type {?} */
        FivFab.prototype.fivComplete;
        /** @type {?} */
        FivFab.prototype.fivRefresh;
        /** @type {?} */
        FivFab.prototype.fivHidden;
        /** @type {?} */
        FivFab.prototype.fivShow;
        /** @type {?} */
        FivFab.prototype.fivTransition;
        /** @type {?} */
        FivFab.prototype.spinner;
        /** @type {?} */
        FivFab.prototype.bar;
        /** @type {?} */
        FivFab.prototype.labelComp;
        /** @type {?} */
        FivFab.prototype.loading;
        /** @type {?} */
        FivFab.prototype.extended;
        /** @type {?} */
        FivFab.prototype.iconState;
        /** @type {?} */
        FivFab.prototype.currentDeltaY;
        /** @type {?} */
        FivFab.prototype.$onDestroy;
        /**
         * @type {?}
         * @private
         */
        FivFab.prototype.renderer;
        /** @type {?} */
        FivFab.prototype.platform;
        /**
         * @type {?}
         * @private
         */
        FivFab.prototype.content;
    }
    /**
     * @record
     */
    function FabTransitionEvent() { }
    if (false) {
        /** @type {?} */
        FabTransitionEvent.prototype.from;
        /** @type {?} */
        FabTransitionEvent.prototype.to;
    }
    /** @enum {number} */
    var FabState = {
        HIDDEN: 0,
        NORMAL: 1,
        EXTENDED: 2,
    };
    FabState[FabState.HIDDEN] = 'HIDDEN';
    FabState[FabState.NORMAL] = 'NORMAL';
    FabState[FabState.EXTENDED] = 'EXTENDED';

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/spinner/spinner.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivSpinnerModule = /** @class */ (function () {
        function FivSpinnerModule() {
        }
        FivSpinnerModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivSpinner],
                        imports: [common.CommonModule],
                        exports: [FivSpinner]
                    },] }
        ];
        return FivSpinnerModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/fab/fab.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivFabModule = /** @class */ (function () {
        function FivFabModule() {
        }
        FivFabModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivFab],
                        imports: [
                            common.CommonModule,
                            FivCenterModule,
                            FivIconModule,
                            FivSpinnerModule,
                            angular.IonicModule,
                            FivLoadingProgressBarModule
                        ],
                        exports: [FivFab],
                        providers: []
                    },] }
        ];
        return FivFabModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/app-bar/app-bar.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivAppBarModule = /** @class */ (function () {
        function FivAppBarModule() {
        }
        FivAppBarModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivAppBar, FivAppBarTab, FivAppBarFabDirective],
                        imports: [common.CommonModule, FivIconModule, FivFabModule, angular.IonicModule],
                        exports: [FivAppBar, FivAppBarTab, FivAppBarFabDirective],
                        providers: []
                    },] }
        ];
        return FivAppBarModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/back-button/routing-state.service.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * @record
     */
    function RoutingStateConfig() { }
    if (false) {
        /** @type {?} */
        RoutingStateConfig.prototype.clearOn;
        /** @type {?} */
        RoutingStateConfig.prototype.root;
    }
    var FivRoutingStateService = /** @class */ (function () {
        function FivRoutingStateService(router, navCtrl, platform) {
            this.router = router;
            this.navCtrl = navCtrl;
            this.platform = platform;
            this.history = [];
        }
        /**
         * @param {?=} config
         * @return {?}
         */
        FivRoutingStateService.prototype.loadRouting = /**
         * @param {?=} config
         * @return {?}
         */
        function (config) {
            var _this = this;
            this.config = config;
            this.handleAndroidBackButton();
            this.router.events
                .pipe(operators.filter((/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return event instanceof router.NavigationEnd; })))
                .subscribe((/**
             * @param {?} __0
             * @return {?}
             */
            function (_a) {
                var urlAfterRedirects = _a.urlAfterRedirects;
                if (urlAfterRedirects === _this.getPreviousUrl(_this.config.root)) {
                    _this.pop();
                    _this.pop();
                }
                // add url to history
                _this.history.push(urlAfterRedirects);
                if (_this.config && _this.config.clearOn) {
                    /** @type {?} */
                    var clear = _this.config.clearOn.some((/**
                     * @param {?} s
                     * @return {?}
                     */
                    function (s) { return s === urlAfterRedirects; }));
                    if (clear) {
                        _this.clearHistory(urlAfterRedirects);
                    }
                }
            }));
        };
        /**
         * @param {?} target
         * @return {?}
         */
        FivRoutingStateService.prototype.registerNavigateable = /**
         * @param {?} target
         * @return {?}
         */
        function (target) {
            if (isNavigateable(target)) {
                this.history.push(target);
            }
        };
        /**
         * @return {?}
         */
        FivRoutingStateService.prototype.handleAndroidBackButton = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.platform.backButton
                .pipe(operators.filter((/**
             * @return {?}
             */
            function () { return !isNavigateable(_this.getCurrentUrl()); })))
                .subscribe((/**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                _this.goBack();
            }));
            this.platform.backButton
                .pipe(operators.filter((/**
             * @return {?}
             */
            function () { return isNavigateable(_this.getCurrentUrl()); })))
                .subscribe((/**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                event.register(99999, (/**
                 * @return {?}
                 */
                function () {
                    _this.goBack('/');
                }));
            }));
        };
        /**
         * @return {?}
         */
        FivRoutingStateService.prototype.getHistory = /**
         * @return {?}
         */
        function () {
            return this.history;
        };
        /**
         * @param {?=} defaultHref
         * @return {?}
         */
        FivRoutingStateService.prototype.getPreviousUrl = /**
         * @param {?=} defaultHref
         * @return {?}
         */
        function (defaultHref) {
            if (defaultHref === void 0) { defaultHref = '/'; }
            if (this.history.length >= 2) {
                return this.history[this.history.length - 2];
            }
            return defaultHref;
        };
        /**
         * @return {?}
         */
        FivRoutingStateService.prototype.pop = /**
         * @return {?}
         */
        function () {
            return this.history.pop();
        };
        /**
         * @param {?} fromUrl
         * @return {?}
         */
        FivRoutingStateService.prototype.clearHistory = /**
         * @param {?} fromUrl
         * @return {?}
         */
        function (fromUrl) {
            var _this = this;
            this.history = this.history.filter((/**
             * @param {?} h
             * @return {?}
             */
            function (h) {
                return _this.config.clearOn.some((/**
                 * @param {?} s
                 * @return {?}
                 */
                function (s) { return s === h; }));
            }));
            if (fromUrl !== this.config.root) {
                this.history.push(fromUrl);
            }
            this.history = this.history
                .reverse()
                .filter((/**
             * @param {?} item
             * @param {?} pos
             * @param {?} self
             * @return {?}
             */
            function (item, pos, self) {
                return self.indexOf(item) === pos;
            }))
                .reverse();
            if (this.history[0] !== this.config.root) {
                this.history = __spread([this.config.root], this.history);
            }
        };
        /**
         * @return {?}
         */
        FivRoutingStateService.prototype.getCurrentUrl = /**
         * @return {?}
         */
        function () {
            return this.history[this.history.length - 1];
        };
        /**
         * @param {?=} defaultHref
         * @return {?}
         */
        FivRoutingStateService.prototype.goBack = /**
         * @param {?=} defaultHref
         * @return {?}
         */
        function (defaultHref) {
            if (defaultHref === void 0) { defaultHref = '/'; }
            if (this.getHistory().length <= 1) {
                // close the app because we are at root level
                return navigator['app']
                    ? navigator['app'].exitApp()
                    : this.navCtrl.navigateBack(defaultHref);
            }
            /** @type {?} */
            var current = this.getCurrentUrl();
            if (typeof current !== 'string' && isNavigateable(current)) {
                current.dismiss();
                return this.pop();
            }
            /** @type {?} */
            var previous = this.getPreviousUrl(defaultHref);
            if (typeof previous === 'string') {
                return this.navCtrl.navigateBack(previous);
            }
            if (isNavigateable(previous)) {
                return this.navCtrl.navigateBack(this.getLatestUrl(defaultHref));
            }
        };
        /**
         * @param {?} defaultHref
         * @return {?}
         */
        FivRoutingStateService.prototype.getLatestUrl = /**
         * @param {?} defaultHref
         * @return {?}
         */
        function (defaultHref) {
            /** @type {?} */
            var urls = this.history.filter((/**
             * @param {?} e
             * @return {?}
             */
            function (e) { return !!(typeof e === 'string'); }));
            /** @type {?} */
            var latest = urls[urls.length - 1];
            if (urls.length > 0 && latest && typeof latest === 'string') {
                return latest;
            }
            return defaultHref;
        };
        FivRoutingStateService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        FivRoutingStateService.ctorParameters = function () { return [
            { type: router.Router },
            { type: angular.NavController },
            { type: angular.Platform }
        ]; };
        /** @nocollapse */ FivRoutingStateService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function FivRoutingStateService_Factory() { return new FivRoutingStateService(core.ɵɵinject(router.Router), core.ɵɵinject(angular.NavController), core.ɵɵinject(angular.Platform)); }, token: FivRoutingStateService, providedIn: "root" });
        return FivRoutingStateService;
    }());
    if (false) {
        /**
         * @type {?}
         * @private
         */
        FivRoutingStateService.prototype.history;
        /**
         * @type {?}
         * @private
         */
        FivRoutingStateService.prototype.config;
        /**
         * @type {?}
         * @private
         */
        FivRoutingStateService.prototype.router;
        /**
         * @type {?}
         * @private
         */
        FivRoutingStateService.prototype.navCtrl;
        /**
         * @type {?}
         * @private
         */
        FivRoutingStateService.prototype.platform;
    }
    /**
     * @param {?} object
     * @return {?}
     */
    function isNavigateable(object) {
        return !!object && object.dismiss !== undefined;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/back-button/back-button.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivBackButton = /** @class */ (function () {
        function FivBackButton(routingState) {
            this.routingState = routingState;
            this.icon = 'arrow-back';
            this.defaultHref = '/';
        }
        /**
         * @return {?}
         */
        FivBackButton.prototype.buttonClick = /**
         * @return {?}
         */
        function () {
            this.routingState.goBack(this.defaultHref);
        };
        FivBackButton.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-back-button',
                        template: "<ion-button (click)=\"buttonClick()\">\n  <fiv-icon slot=\"icon-only\" [color]=\"color\" [name]=\"icon\"></fiv-icon>\n</ion-button>",
                        styles: [":host{display:block;padding-top:.2em}"]
                    }] }
        ];
        /** @nocollapse */
        FivBackButton.ctorParameters = function () { return [
            { type: FivRoutingStateService }
        ]; };
        FivBackButton.propDecorators = {
            icon: [{ type: core.Input }],
            color: [{ type: core.Input }],
            defaultHref: [{ type: core.Input }]
        };
        return FivBackButton;
    }());
    if (false) {
        /** @type {?} */
        FivBackButton.prototype.icon;
        /** @type {?} */
        FivBackButton.prototype.color;
        /** @type {?} */
        FivBackButton.prototype.defaultHref;
        /** @type {?} */
        FivBackButton.prototype.routingState;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/back-button/back-button.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivBackButtonModule = /** @class */ (function () {
        function FivBackButtonModule() {
        }
        FivBackButtonModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivBackButton],
                        imports: [common.CommonModule, FivIconModule, angular.IonicModule],
                        exports: [FivBackButton],
                        providers: []
                    },] }
        ];
        return FivBackButtonModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/bottom-sheet/drawer-state.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @enum {number} */
    var DrawerState = {
        Bottom: 0,
        Docked: 1,
        Top: 2,
    };
    DrawerState[DrawerState.Bottom] = 'Bottom';
    DrawerState[DrawerState.Docked] = 'Docked';
    DrawerState[DrawerState.Top] = 'Top';

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/bottom-sheet/bottom-sheet-content/bottom-sheet-content.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivBottomSheetContent = /** @class */ (function () {
        function FivBottomSheetContent(sanitizer) {
            this.sanitizer = sanitizer;
            this.rounded = true;
            this.handle = true;
            this.float = true;
            this.fivClick = new core.EventEmitter();
            this.states = DrawerState;
            this.shouldBounce = true;
            this.panning = false;
        }
        Object.defineProperty(FivBottomSheetContent.prototype, "isRounded", {
            get: /**
             * @return {?}
             */
            function () {
                switch (this.currentState) {
                    case DrawerState.Top:
                        return false;
                    case DrawerState.Docked:
                        return this.rounded;
                    case DrawerState.Bottom:
                        return this.rounded && !this.float;
                }
                return true;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivBottomSheetContent.prototype, "styles", {
            get: /**
             * @return {?}
             */
            function () {
                if (!(this.float && this.currentState === DrawerState.Bottom)) {
                    return this.sanitizer
                        .bypassSecurityTrustStyle("box-shadow: 0 4px 16px rgba(0, 0, 0, .12);\n                                                      border-top: 1px solid var(--ion-color-light);");
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivBottomSheetContent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivBottomSheetContent.prototype.ngAfterViewInit = /**
         * @return {?}
         */
        function () {
            this.content.scrollEvents = true;
        };
        /**
         * @param {?} state
         * @return {?}
         */
        FivBottomSheetContent.prototype.updateState = /**
         * @param {?} state
         * @return {?}
         */
        function (state) {
            this.currentState = state;
        };
        /**
         * @return {?}
         */
        FivBottomSheetContent.prototype.click = /**
         * @return {?}
         */
        function () {
            this.fivClick.emit();
        };
        FivBottomSheetContent.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-bottom-sheet-content',
                        template: "<div class=\"bsc-wrapper\">\n  <span (click)=\"click()\" *ngIf=\"currentState !== states.Top && handle\"\n    [fivCenter]=\"{vertical: false, horizontal: true}\" class=\"handle\"></span>\n  <div [ngClass]=\"{'margin': handle}\" class=\"content\">\n    <ion-content [scrollY]=\"currentState === 2 && shouldBounce && !panning\">\n      <ng-content>\n\n      </ng-content>\n    </ion-content>\n\n  </div>\n</div>",
                        styles: [":host{display:block;width:100%;height:100%;--fiv-border-radius:12px;--fiv-padding:20px;padding-top:var(--fiv-padding);--fiv-background:var(--ion-background-color);--fiv-handle-background:var(--ion-color-light-shade);background:var(--fiv-background)}.bsc-wrapper{width:100%;height:100%}:host.rounded{border-top-left-radius:var(--fiv-border-radius);border-top-right-radius:var(--fiv-border-radius)}.handle{display:block;background:var(--fiv-handle-background);border-radius:12px;top:8px;width:32px;height:8px;position:absolute}.content{height:100%}"]
                    }] }
        ];
        /** @nocollapse */
        FivBottomSheetContent.ctorParameters = function () { return [
            { type: platformBrowser.DomSanitizer }
        ]; };
        FivBottomSheetContent.propDecorators = {
            rounded: [{ type: core.Input }],
            handle: [{ type: core.Input }],
            float: [{ type: core.Input }],
            fivClick: [{ type: core.Output }],
            content: [{ type: core.ViewChild, args: [angular.IonContent, { static: true },] }],
            isRounded: [{ type: core.HostBinding, args: ['class.rounded',] }],
            styles: [{ type: core.HostBinding, args: ['style',] }]
        };
        return FivBottomSheetContent;
    }());
    if (false) {
        /** @type {?} */
        FivBottomSheetContent.prototype.rounded;
        /** @type {?} */
        FivBottomSheetContent.prototype.handle;
        /** @type {?} */
        FivBottomSheetContent.prototype.float;
        /** @type {?} */
        FivBottomSheetContent.prototype.fivClick;
        /** @type {?} */
        FivBottomSheetContent.prototype.content;
        /** @type {?} */
        FivBottomSheetContent.prototype.currentState;
        /** @type {?} */
        FivBottomSheetContent.prototype.states;
        /** @type {?} */
        FivBottomSheetContent.prototype.shouldBounce;
        /** @type {?} */
        FivBottomSheetContent.prototype.panning;
        /**
         * @type {?}
         * @private
         */
        FivBottomSheetContent.prototype.sanitizer;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/bottom-sheet/bottom-sheet.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * @record
     */
    function PanEvent() { }
    if (false) {
        /** @type {?} */
        PanEvent.prototype.currentOffset;
        /** @type {?} */
        PanEvent.prototype.startOffset;
        /** @type {?} */
        PanEvent.prototype.currentTop;
        /** @type {?} */
        PanEvent.prototype.startTop;
        /** @type {?} */
        PanEvent.prototype.distance;
        /** @type {?} */
        PanEvent.prototype.touch;
    }
    var FivBottomSheet = /** @class */ (function () {
        function FivBottomSheet(_element, _renderer, _domCtrl, _platform) {
            this._element = _element;
            this._renderer = _renderer;
            this._domCtrl = _domCtrl;
            this._platform = _platform;
            this.dockedHeight = 80;
            this.shouldBounce = true;
            this.distanceTop = 56;
            this.transition = '0.25s';
            this.state = DrawerState.Bottom;
            this.bounceThreshold = 40;
            this.panThreshold = 20;
            this.panEnabled = true;
            this.stateChange = new core.EventEmitter();
            this.fivOpen = new core.EventEmitter();
            this.fivDocked = new core.EventEmitter();
            this.fivClose = new core.EventEmitter();
            this.fivProgress = new core.EventEmitter();
            this.scrollTop = 0;
            this.$onDestroy = new rxjs.Subject();
        }
        /**
         * @return {?}
         */
        FivBottomSheet.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            this.$onDestroy.next();
        };
        /**
         * @return {?}
         */
        FivBottomSheet.prototype.ngAfterViewInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this._setDrawerState(this.state);
            this.content.shouldBounce = this.shouldBounce;
            /** @type {?} */
            var touchmove = rxjs.fromEvent(this._element.nativeElement, 'touchmove', {
                passive: true
            });
            /** @type {?} */
            var touchend = rxjs.merge(rxjs.fromEvent(this._element.nativeElement, 'touchend', {
                passive: true
            }), rxjs.fromEvent(this._element.nativeElement, 'touchcancel', {
                passive: true
            }));
            /** @type {?} */
            var getScrollContent = rxjs.from(this.content.content.getScrollElement());
            /** @type {?} */
            var scroll = this.content.content.ionScroll.pipe(operators.tap((/**
             * @param {?} el
             * @return {?}
             */
            function (el) { return (_this.scrollTop = el.detail.scrollTop); })), operators.takeUntil(this.$onDestroy));
            scroll.subscribe();
            this.content.content.ionScrollEnd
                .pipe(operators.filter((/**
             * @param {?} el
             * @return {?}
             */
            function (el) { return _this.scrollTop === 0 && _this.state === DrawerState.Top; })), operators.tap((/**
             * @return {?}
             */
            function () { return _this.content.content.scrollByPoint(0, 1, 0); })), operators.takeUntil(this.$onDestroy))
                .subscribe();
            /** @type {?} */
            var canStart = touchmove.pipe(operators.filter((/**
             * @return {?}
             */
            function () { return _this.scrollTop === 0; })));
            /** @type {?} */
            var start = canStart.pipe(operators.take(1), operators.tap((/**
             * @param {?} s
             * @return {?}
             */
            function (s) { return _this._handlePanStart(s); })));
            /** @type {?} */
            var pan = start.pipe(operators.filter((/**
             * @return {?}
             */
            function () { return _this.panEnabled; })), operators.flatMap((/**
             * @return {?}
             */
            function () { return touchmove; })), operators.map((/**
             * @param {?} tm
             * @return {?}
             */
            function (tm) { return _this.calculatePanEvent(tm); })));
            /** @type {?} */
            var handlePan = pan.pipe(operators.filter((/**
             * @param {?} p
             * @return {?}
             */
            function (p) { return Math.abs(p.distance) > _this.panThreshold; })), operators.map((/**
             * @param {?} tm
             * @return {?}
             */
            function (tm) { return _this._handlePan(tm); })), operators.takeUntil(touchend), operators.repeat(), operators.takeUntil(this.$onDestroy));
            /** @type {?} */
            var handleBackPan = pan
                .pipe(operators.filter((/**
             * @param {?} p
             * @return {?}
             */
            function (p) { return Math.abs(p.distance) <= _this.panThreshold && _this.content.panning; })), operators.map((/**
             * @param {?} tm
             * @return {?}
             */
            function (tm) { return _this._handlePan(tm); })), operators.takeUntil(touchend), operators.repeat(), operators.takeUntil(this.$onDestroy))
                .subscribe();
            handlePan
                .pipe(operators.first(), operators.tap((/**
             * @return {?}
             */
            function () { return (_this.content.panning = true); })), operators.repeatWhen((/**
             * @return {?}
             */
            function () { return touchend; })), operators.takeUntil(this.$onDestroy))
                .subscribe();
            handlePan
                .pipe(operators.flatMap((/**
             * @return {?}
             */
            function () { return touchend; })), operators.first(), operators.withLatestFrom(pan), operators.tap((/**
             * @return {?}
             */
            function () { return _this.content.content.scrollByPoint(0, 1, 0); })), operators.tap((/**
             * @return {?}
             */
            function () { return (_this.content.panning = false); })), operators.map((/**
             * @param {?} ev
             * @return {?}
             */
            function (ev) { return ev[1]; })), operators.repeat(), operators.takeUntil(this.$onDestroy))
                .subscribe((/**
             * @param {?} ev
             * @return {?}
             */
            function (ev) { return _this._handlePanEnd(ev); }));
        };
        /**
         * @param {?} changes
         * @return {?}
         */
        FivBottomSheet.prototype.ngOnChanges = /**
         * @param {?} changes
         * @return {?}
         */
        function (changes) {
            if (!changes.state) {
                return;
            }
            this._setDrawerState(changes.state.currentValue);
            this.updateContent(changes.state.currentValue);
        };
        /**
         * @param {?} state
         * @return {?}
         */
        FivBottomSheet.prototype.updateContent = /**
         * @param {?} state
         * @return {?}
         */
        function (state) {
            if (this.content) {
                this.content.updateState(state);
            }
        };
        /**
         * @private
         * @param {?} state
         * @return {?}
         */
        FivBottomSheet.prototype._setDrawerState = /**
         * @private
         * @param {?} state
         * @return {?}
         */
        function (state) {
            this._renderer.setStyle(this._element.nativeElement, 'transition', this.transition);
            switch (state) {
                case DrawerState.Bottom:
                    this.content.content.scrollToTop(0);
                    this._setTranslateY(this._platform.height());
                    break;
                case DrawerState.Docked:
                    this.content.content.scrollToTop(0);
                    this._setTranslateY(this._platform.height() - this.dockedHeight);
                    break;
                default:
                    this._setTranslateY(this.distanceTop);
            }
        };
        /**
         * @private
         * @param {?} event
         * @return {?}
         */
        FivBottomSheet.prototype._handlePanStart = /**
         * @private
         * @param {?} event
         * @return {?}
         */
        function (event) {
            this._startPositionTop = this.getCurrentTop();
            this._startPositionOffset = event.touches[0].pageY;
        };
        /**
         * @return {?}
         */
        FivBottomSheet.prototype.getCurrentTop = /**
         * @return {?}
         */
        function () {
            return this._element.nativeElement.getBoundingClientRect().top;
        };
        /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        FivBottomSheet.prototype._handlePanEnd = /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        function (ev) {
            if (this.shouldBounce) {
                this._renderer.setStyle(this._element.nativeElement, 'transition', this.transition);
                switch (this.state) {
                    case DrawerState.Docked:
                        this._handleDockedPanEnd(ev);
                        break;
                    case DrawerState.Top:
                        this._handleTopPanEnd(ev);
                        break;
                    default:
                        this._handleBottomPanEnd(ev);
                }
            }
            this.stateChange.emit(this.state);
        };
        /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        FivBottomSheet.prototype._handleTopPanEnd = /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        function (ev) {
            if (ev.distance > this.bounceThreshold) {
                if (this.state !== DrawerState.Docked) {
                    this.state = DrawerState.Docked;
                    this.fivDocked.emit(this);
                }
            }
            else {
                this._setTranslateY(this.distanceTop);
            }
        };
        /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        FivBottomSheet.prototype._handleDockedPanEnd = /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        function (ev) {
            /** @type {?} */
            var absDeltaY = Math.abs(ev.distance);
            if (absDeltaY > this.bounceThreshold && ev.distance < 0) {
                if (this.state !== DrawerState.Top) {
                    this.state = DrawerState.Top;
                    this.fivOpen.emit();
                }
            }
            else if (absDeltaY > this.bounceThreshold && ev.distance > 0) {
                if (this.state !== DrawerState.Bottom) {
                    this.close();
                }
            }
            else {
                this._setTranslateY(this._platform.height() - this.dockedHeight);
            }
        };
        /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        FivBottomSheet.prototype._handleBottomPanEnd = /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        function (ev) {
            if (-ev.distance > this.bounceThreshold) {
                if (this.state !== DrawerState.Docked) {
                    this.state = DrawerState.Docked;
                    this.fivDocked.emit();
                }
            }
            else {
                this._setTranslateY('100vh');
            }
        };
        /**
         * @param {?} ev
         * @return {?}
         */
        FivBottomSheet.prototype.calculatePanEvent = /**
         * @param {?} ev
         * @return {?}
         */
        function (ev) {
            return {
                currentOffset: ev.touches[0].pageY,
                startOffset: this._startPositionOffset,
                startTop: this._startPositionTop,
                currentTop: this.getCurrentTop(),
                distance: ev.touches[0].pageY - this._startPositionOffset,
                touch: ev
            };
        };
        /**
         * @private
         * @param {?} event
         * @return {?}
         */
        FivBottomSheet.prototype._handlePan = /**
         * @private
         * @param {?} event
         * @return {?}
         */
        function (event) {
            this._renderer.setStyle(this._element.nativeElement, 'transition', 'none');
            if (event.currentTop >= 0 && event.currentTop <= this._platform.height()) {
                /** @type {?} */
                var newTop = this._startPositionTop + event.distance;
                if (newTop >= this.distanceTop) {
                    this._setTranslateY(newTop);
                }
                else if (newTop <= this.distanceTop && this.content.panning) {
                    this._setTranslateY(this.distanceTop);
                    this.content.content.scrollToPoint(0, 0 - newTop, 0);
                }
                return event;
            }
        };
        /**
         * @private
         * @param {?} value
         * @return {?}
         */
        FivBottomSheet.prototype._setTranslateY = /**
         * @private
         * @param {?} value
         * @return {?}
         */
        function (value) {
            var _this = this;
            this.fivProgress.emit(1 - value / (this._platform.height() - this.dockedHeight));
            this._domCtrl.write((/**
             * @return {?}
             */
            function () {
                _this._renderer.setStyle(_this._element.nativeElement, 'transform', 'translateY(' + value + 'px)');
            }));
        };
        /**
         * @return {?}
         */
        FivBottomSheet.prototype.open = /**
         * @return {?}
         */
        function () {
            this.state = DrawerState.Top;
            this._setDrawerState(this.state);
            this.updateContent(this.state);
        };
        /**
         * @return {?}
         */
        FivBottomSheet.prototype.close = /**
         * @return {?}
         */
        function () {
            this.state = DrawerState.Bottom;
            this._setDrawerState(this.state);
            this.updateContent(this.state);
            this.fivClose.emit();
        };
        /**
         * @return {?}
         */
        FivBottomSheet.prototype.dock = /**
         * @return {?}
         */
        function () {
            this.state = DrawerState.Docked;
            this._setDrawerState(this.state);
            this.updateContent(this.state);
        };
        FivBottomSheet.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-bottom-sheet',
                        template: "<div class=\"fiv-bottom-drawer-scrollable-content\" no-bounce>\n  <ng-content></ng-content>\n</div>",
                        styles: [":host{width:100%;height:100%;position:absolute;left:0;z-index:11!important;background-color:rgba(0,0,0,0);transform:translateY(100vh)}.fiv-bottom-drawer-scrollable-content{width:100%;height:100%}"]
                    }] }
        ];
        /** @nocollapse */
        FivBottomSheet.ctorParameters = function () { return [
            { type: core.ElementRef },
            { type: core.Renderer2 },
            { type: angular.DomController },
            { type: angular.Platform }
        ]; };
        FivBottomSheet.propDecorators = {
            dockedHeight: [{ type: core.Input }],
            shouldBounce: [{ type: core.Input }],
            distanceTop: [{ type: core.Input }],
            transition: [{ type: core.Input }],
            state: [{ type: core.Input }],
            bounceThreshold: [{ type: core.Input }],
            panThreshold: [{ type: core.Input }],
            panEnabled: [{ type: core.Input }],
            stateChange: [{ type: core.Output }],
            fivOpen: [{ type: core.Output }],
            fivDocked: [{ type: core.Output }],
            fivClose: [{ type: core.Output }],
            fivProgress: [{ type: core.Output }],
            content: [{ type: core.ContentChild, args: [FivBottomSheetContent, { static: true },] }]
        };
        return FivBottomSheet;
    }());
    if (false) {
        /** @type {?} */
        FivBottomSheet.prototype.dockedHeight;
        /** @type {?} */
        FivBottomSheet.prototype.shouldBounce;
        /** @type {?} */
        FivBottomSheet.prototype.distanceTop;
        /** @type {?} */
        FivBottomSheet.prototype.transition;
        /** @type {?} */
        FivBottomSheet.prototype.state;
        /** @type {?} */
        FivBottomSheet.prototype.bounceThreshold;
        /** @type {?} */
        FivBottomSheet.prototype.panThreshold;
        /** @type {?} */
        FivBottomSheet.prototype.panEnabled;
        /** @type {?} */
        FivBottomSheet.prototype.stateChange;
        /** @type {?} */
        FivBottomSheet.prototype.fivOpen;
        /** @type {?} */
        FivBottomSheet.prototype.fivDocked;
        /** @type {?} */
        FivBottomSheet.prototype.fivClose;
        /** @type {?} */
        FivBottomSheet.prototype.fivProgress;
        /** @type {?} */
        FivBottomSheet.prototype.content;
        /**
         * @type {?}
         * @private
         */
        FivBottomSheet.prototype._startPositionTop;
        /** @type {?} */
        FivBottomSheet.prototype._startPositionOffset;
        /** @type {?} */
        FivBottomSheet.prototype.scrollTop;
        /** @type {?} */
        FivBottomSheet.prototype.$onDestroy;
        /**
         * @type {?}
         * @private
         */
        FivBottomSheet.prototype._element;
        /**
         * @type {?}
         * @private
         */
        FivBottomSheet.prototype._renderer;
        /**
         * @type {?}
         * @private
         */
        FivBottomSheet.prototype._domCtrl;
        /**
         * @type {?}
         * @private
         */
        FivBottomSheet.prototype._platform;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/bottom-sheet/bottom-sheet.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivBottomSheetModule = /** @class */ (function () {
        function FivBottomSheetModule() {
        }
        FivBottomSheetModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivBottomSheet, FivBottomSheetContent],
                        imports: [common.CommonModule, FivCenterModule, angular.IonicModule],
                        exports: [FivBottomSheet, FivBottomSheetContent]
                    },] }
        ];
        return FivBottomSheetModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/collapsable-menu/collapsable-menu.directive.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivCollapsableMenu = /** @class */ (function () {
        function FivCollapsableMenu(sanitizer, menu, split, platform) {
            var _this = this;
            this.sanitizer = sanitizer;
            this.menu = menu;
            this.split = split;
            this.platform = platform;
            this.collapsed = false;
            this.hovering = false;
            this.splitVisible = false;
            this.hoverMenu = true;
            this.width = 64;
            this.minWidth = 270;
            this.maxWidth = this.platform.width() * 0.28;
            this.split.ionSplitPaneVisible
                .pipe(operators.map((/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return event.detail.visible; })))
                .subscribe((/**
             * @param {?} visible
             * @return {?}
             */
            function (visible) { return (_this.splitVisible = visible); }));
        }
        Object.defineProperty(FivCollapsableMenu.prototype, "myStyle", {
            get: /**
             * @return {?}
             */
            function () {
                if (this.collapsed && this.splitVisible) {
                    return (this.sanitizer
                        // tslint:disable-next-line:max-line-length
                        .bypassSecurityTrustStyle("min-width: " + this.width + "px; max-width: " + this.width + "px; --border: 0; transition: all cubic-bezier(.55,0,.1,1) 200ms;"));
                }
                else {
                    if (!this.splitVisible) {
                        return (this.sanitizer
                            // tslint:disable-next-line:max-line-length
                            .bypassSecurityTrustStyle("--border: 0; transition: all cubic-bezier(.55,0,.1,1) 200ms;"));
                    }
                    else {
                        return (this.sanitizer
                            // tslint:disable-next-line:max-line-length
                            .bypassSecurityTrustStyle("min-width: " + this.minWidth + "px; max-width: " + this.maxWidth + "px; --border: 0; transition: all cubic-bezier(.55,0,.1,1) 200ms;"));
                    }
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivCollapsableMenu.prototype.hover = /**
         * @return {?}
         */
        function () {
            if (this.collapsed && !this.hovering && this.hoverMenu) {
                this.open();
                this.hovering = true;
            }
        };
        /**
         * @return {?}
         */
        FivCollapsableMenu.prototype.blur = /**
         * @return {?}
         */
        function () {
            if (!this.hoverMenu) {
                return;
            }
            if (!this.collapsed && this.hovering) {
                this.close();
            }
            this.hovering = false;
        };
        Object.defineProperty(FivCollapsableMenu.prototype, "fivCollapseMenu", {
            set: /**
             * @param {?} collapse
             * @return {?}
             */
            function (collapse) {
                this.collapsed = collapse;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivCollapsableMenu.prototype.toggleMenu = /**
         * @return {?}
         */
        function () {
            if (this.hovering) {
                this.open();
                this.hovering = false;
                return;
            }
            this.collapsed = !this.collapsed;
        };
        /**
         * @return {?}
         */
        FivCollapsableMenu.prototype.open = /**
         * @return {?}
         */
        function () {
            this.collapsed = false;
        };
        /**
         * @return {?}
         */
        FivCollapsableMenu.prototype.close = /**
         * @return {?}
         */
        function () {
            this.collapsed = true;
        };
        FivCollapsableMenu.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivCollapseMenu]',
                        exportAs: 'menuCollapse'
                    },] }
        ];
        /** @nocollapse */
        FivCollapsableMenu.ctorParameters = function () { return [
            { type: platformBrowser.DomSanitizer },
            { type: angular.IonMenu, decorators: [{ type: core.Host }] },
            { type: angular.IonSplitPane, decorators: [{ type: core.Host }, { type: core.Optional }] },
            { type: angular.Platform }
        ]; };
        FivCollapsableMenu.propDecorators = {
            hoverMenu: [{ type: core.Input }],
            width: [{ type: core.Input }],
            minWidth: [{ type: core.Input }],
            maxWidth: [{ type: core.Input }],
            myStyle: [{ type: core.HostBinding, args: ['style',] }],
            hover: [{ type: core.HostListener, args: ['mouseenter',] }],
            blur: [{ type: core.HostListener, args: ['mouseleave',] }],
            fivCollapseMenu: [{ type: core.Input }]
        };
        return FivCollapsableMenu;
    }());
    if (false) {
        /** @type {?} */
        FivCollapsableMenu.prototype.collapsed;
        /** @type {?} */
        FivCollapsableMenu.prototype.hovering;
        /** @type {?} */
        FivCollapsableMenu.prototype.splitVisible;
        /** @type {?} */
        FivCollapsableMenu.prototype.hoverMenu;
        /** @type {?} */
        FivCollapsableMenu.prototype.width;
        /** @type {?} */
        FivCollapsableMenu.prototype.minWidth;
        /** @type {?} */
        FivCollapsableMenu.prototype.maxWidth;
        /**
         * @type {?}
         * @private
         */
        FivCollapsableMenu.prototype.sanitizer;
        /**
         * @type {?}
         * @private
         */
        FivCollapsableMenu.prototype.menu;
        /**
         * @type {?}
         * @private
         */
        FivCollapsableMenu.prototype.split;
        /**
         * @type {?}
         * @private
         */
        FivCollapsableMenu.prototype.platform;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/collapsable-menu/collapsable-menu-button/collapsable-menu-button.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivCollapsableMenuButton = /** @class */ (function () {
        function FivCollapsableMenuButton() {
            this.icon = 'menu';
        }
        /**
         * @return {?}
         */
        FivCollapsableMenuButton.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivCollapsableMenuButton.prototype.onClick = /**
         * @return {?}
         */
        function () {
            this.menu.toggleMenu();
        };
        FivCollapsableMenuButton.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-collapsable-menu-button',
                        template: "<ion-button fivCenter (click)=\"onClick()\">\n  <fiv-icon slot=\"icon-only\" [name]=\"icon\" [color]=\"color\"></fiv-icon>\n</ion-button>",
                        styles: [":host{display:block;padding-top:.2em}"]
                    }] }
        ];
        /** @nocollapse */
        FivCollapsableMenuButton.ctorParameters = function () { return []; };
        FivCollapsableMenuButton.propDecorators = {
            menu: [{ type: core.Input }],
            icon: [{ type: core.Input }],
            color: [{ type: core.Input }]
        };
        return FivCollapsableMenuButton;
    }());
    if (false) {
        /** @type {?} */
        FivCollapsableMenuButton.prototype.menu;
        /** @type {?} */
        FivCollapsableMenuButton.prototype.icon;
        /** @type {?} */
        FivCollapsableMenuButton.prototype.color;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/collapsable-menu/collapsable-menu.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivCollapsableModule = /** @class */ (function () {
        function FivCollapsableModule() {
        }
        FivCollapsableModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivCollapsableMenu, FivCollapsableMenuButton],
                        imports: [common.CommonModule, FivIconModule, angular.IonicModule],
                        exports: [FivCollapsableMenu, FivCollapsableMenuButton]
                    },] }
        ];
        return FivCollapsableModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/pull/pull.directive.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivPull = /** @class */ (function () {
        function FivPull(element, platform, content) {
            this.element = element;
            this.platform = platform;
            this.content = content;
            this.minPullHeight = 112;
            this.maxPullHeight = 168;
            this.enabled = true;
            this.enableScroll = false;
            this.direction = 'down';
            this.fivRefresh = new core.EventEmitter();
            this.fivCancel = new core.EventEmitter();
            this.fivPull = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivPull.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            this.init();
        };
        /**
         * @param {?=} minPullHeight
         * @param {?=} maxPullHeight
         * @param {?=} direction
         * @return {?}
         */
        FivPull.prototype.init = /**
         * @param {?=} minPullHeight
         * @param {?=} maxPullHeight
         * @param {?=} direction
         * @return {?}
         */
        function (minPullHeight, maxPullHeight, direction) {
            var _this = this;
            if (minPullHeight === void 0) { minPullHeight = 112; }
            if (maxPullHeight === void 0) { maxPullHeight = 168; }
            if (direction === void 0) { direction = 'down'; }
            this.minPullHeight = minPullHeight;
            this.maxPullHeight = maxPullHeight;
            this.direction = direction;
            this.content.scrollEvents = true;
            this.content.getScrollElement().then((/**
             * @param {?} s
             * @return {?}
             */
            function (s) {
                _this.scrollY = s; // needed for scrollTop
                _this.setupPanListener();
            }));
        };
        /**
         * @private
         * @return {?}
         */
        FivPull.prototype.setupPanListener = /**
         * @private
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var touchstart$ = rxjs.fromEvent(this.element.nativeElement, 'touchstart', {
                passive: true
            });
            /** @type {?} */
            var touchmove$ = rxjs.fromEvent(this.element.nativeElement, 'touchmove', {
                passive: true
            });
            /** @type {?} */
            var touchend$ = rxjs.fromEvent(this.element.nativeElement, 'touchend', {
                passive: true
            });
            /** @type {?} */
            var touchcancel$ = rxjs.fromEvent(this.element.nativeElement, 'touchcancel', {
                passive: true
            });
            /** @type {?} */
            var end$ = rxjs.merge(touchend$, touchcancel$);
            /** @type {?} */
            var dragAtTop = touchstart$.pipe(operators.filter((/**
             * @param {?} e
             * @return {?}
             */
            function (e) {
                return (_this.scrollY.scrollTop === 0 || _this.enableScroll) &&
                    _this.direction === 'down' &&
                    _this.enabled;
            })));
            /** @type {?} */
            var dragAtBottom = touchstart$.pipe(operators.filter((/**
             * @param {?} e
             * @return {?}
             */
            function (e) {
                return (_this.scrollY.scrollTop ===
                    _this.scrollY.clientHeight - _this.platform.height() ||
                    _this.enableScroll) &&
                    _this.direction === 'up' &&
                    _this.enabled;
            })));
            /** @type {?} */
            var dragTopDown = dragAtTop.pipe(operators.map((/**
             * @param {?} start
             * @return {?}
             */
            function (start) {
                /** @type {?} */
                var startY = start.touches[0].pageY;
                return touchmove$.pipe(operators.map((/**
                 * @param {?} move
                 * @return {?}
                 */
                function (move) {
                    /** @type {?} */
                    var currentY = move.touches[0].pageY;
                    return {
                        startEvent: start,
                        moveEvent: move,
                        startY: startY,
                        currentY: currentY,
                        offset: currentY - startY
                    };
                })), operators.skipWhile((/**
                 * @param {?} drag
                 * @return {?}
                 */
                function (drag) { return drag.offset < 0; })), operators.takeUntil(end$));
            })));
            dragTopDown.forEach((/**
             * @param {?} drags
             * @return {?}
             */
            function (drags) {
                drags.forEach((/**
                 * @param {?} drag
                 * @return {?}
                 */
                function (drag) {
                    /** @type {?} */
                    var offset = drag.offset / 2;
                    if (offset < 0 || offset > _this.maxPullHeight) {
                        return;
                    }
                    if (offset <= _this.maxPullHeight) {
                    }
                    _this.fivPull.emit(offset / _this.maxPullHeight);
                }));
                drags.pipe(operators.takeLast(1)).subscribe((/**
                 * @param {?} drag
                 * @return {?}
                 */
                function (drag) {
                    /** @type {?} */
                    var offset = drag.offset / 2;
                    /** @type {?} */
                    var refresh = offset >= _this.minPullHeight;
                    if (refresh) {
                        _this.fivRefresh.emit(offset / _this.maxPullHeight);
                    }
                    else {
                        _this.fivCancel.emit(offset / _this.maxPullHeight);
                    }
                }));
            }));
            /** @type {?} */
            var dragBottomUp = dragAtBottom.pipe(operators.map((/**
             * @param {?} start
             * @return {?}
             */
            function (start) {
                /** @type {?} */
                var startY = start.touches[0].pageY;
                return touchmove$.pipe(operators.map((/**
                 * @param {?} move
                 * @return {?}
                 */
                function (move) {
                    /** @type {?} */
                    var currentY = move.touches[0].pageY;
                    return {
                        startEvent: start,
                        moveEvent: move,
                        startY: startY,
                        currentY: currentY,
                        offset: startY - currentY
                    };
                })), operators.skipWhile((/**
                 * @param {?} drag
                 * @return {?}
                 */
                function (drag) { return drag.offset < 0; })), operators.takeUntil(end$));
            })));
            dragBottomUp.forEach((/**
             * @param {?} drags
             * @return {?}
             */
            function (drags) {
                drags.forEach((/**
                 * @param {?} drag
                 * @return {?}
                 */
                function (drag) {
                    /** @type {?} */
                    var offset = drag.offset / 2;
                    if (offset < 0 || offset > _this.maxPullHeight) {
                        return;
                    }
                    _this.fivPull.emit(offset / _this.maxPullHeight);
                }));
                drags.pipe(operators.takeLast(1)).subscribe((/**
                 * @param {?} drag
                 * @return {?}
                 */
                function (drag) {
                    /** @type {?} */
                    var offset = drag.offset / 2;
                    /** @type {?} */
                    var refresh = offset >= _this.minPullHeight;
                    if (refresh) {
                        _this.fivRefresh.emit(offset / _this.maxPullHeight);
                    }
                    else {
                        _this.fivCancel.emit(offset / _this.maxPullHeight);
                    }
                }));
            }));
        };
        FivPull.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivPull]'
                    },] }
        ];
        /** @nocollapse */
        FivPull.ctorParameters = function () { return [
            { type: core.ElementRef },
            { type: angular.Platform },
            { type: angular.IonContent }
        ]; };
        FivPull.propDecorators = {
            minPullHeight: [{ type: core.Input }],
            maxPullHeight: [{ type: core.Input }],
            enabled: [{ type: core.Input }],
            enableScroll: [{ type: core.Input }],
            direction: [{ type: core.Input }],
            fivRefresh: [{ type: core.Output }],
            fivCancel: [{ type: core.Output }],
            fivPull: [{ type: core.Output }]
        };
        return FivPull;
    }());
    if (false) {
        /** @type {?} */
        FivPull.prototype.minPullHeight;
        /** @type {?} */
        FivPull.prototype.maxPullHeight;
        /** @type {?} */
        FivPull.prototype.enabled;
        /** @type {?} */
        FivPull.prototype.enableScroll;
        /** @type {?} */
        FivPull.prototype.direction;
        /** @type {?} */
        FivPull.prototype.fivRefresh;
        /** @type {?} */
        FivPull.prototype.fivCancel;
        /** @type {?} */
        FivPull.prototype.fivPull;
        /** @type {?} */
        FivPull.prototype.scrollY;
        /**
         * @type {?}
         * @private
         */
        FivPull.prototype.element;
        /**
         * @type {?}
         * @private
         */
        FivPull.prototype.platform;
        /**
         * @type {?}
         * @private
         */
        FivPull.prototype.content;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/pull/pull.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivPullModule = /** @class */ (function () {
        function FivPullModule() {
        }
        FivPullModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivPull],
                        imports: [common.CommonModule],
                        exports: [FivPull]
                    },] }
        ];
        return FivPullModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/overlay/overlay.service.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivOverlayService = /** @class */ (function () {
        function FivOverlayService(componentFactoryResolver, rendererFactory, appRef, injector) {
            this.componentFactoryResolver = componentFactoryResolver;
            this.appRef = appRef;
            this.injector = injector;
            this.renderer = rendererFactory.createRenderer(null, null);
        }
        /**
         * @template T
         * @param {?} view
         * @param {?} component
         * @param {?=} content
         * @return {?}
         */
        FivOverlayService.prototype.createOverlay = /**
         * @template T
         * @param {?} view
         * @param {?} component
         * @param {?=} content
         * @return {?}
         */
        function (view, component, content) {
            /** @type {?} */
            var resolvedContent = this.resolveNgContent(view, content);
            /** @type {?} */
            var componentRef = this.componentFactoryResolver
                .resolveComponentFactory(component)
                .create(this.injector, resolvedContent);
            this.appRef.attachView(componentRef.hostView);
            /** @type {?} */
            var domElem = (/** @type {?} */ (((/** @type {?} */ (componentRef.hostView)))
                .rootNodes[0]));
            document.body.appendChild(domElem);
            return componentRef;
        };
        /**
         * @private
         * @template T
         * @param {?} viewContainerRef
         * @param {?} content
         * @return {?}
         */
        FivOverlayService.prototype.resolveNgContent = /**
         * @private
         * @template T
         * @param {?} viewContainerRef
         * @param {?} content
         * @return {?}
         */
        function (viewContainerRef, content) {
            if (!content) {
                return;
            }
            if (content instanceof core.TemplateRef) {
                /** @type {?} */
                var viewRef = viewContainerRef.createEmbeddedView(content);
                return [viewRef.rootNodes];
            }
            /** @type {?} */
            var factory = this.componentFactoryResolver.resolveComponentFactory(content);
            /** @type {?} */
            var componentRef = factory.create(this.injector);
            return [[componentRef.location.nativeElement]];
        };
        FivOverlayService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        FivOverlayService.ctorParameters = function () { return [
            { type: core.ComponentFactoryResolver },
            { type: core.RendererFactory2 },
            { type: core.ApplicationRef },
            { type: core.Injector }
        ]; };
        /** @nocollapse */ FivOverlayService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function FivOverlayService_Factory() { return new FivOverlayService(core.ɵɵinject(core.ComponentFactoryResolver), core.ɵɵinject(core.RendererFactory2), core.ɵɵinject(core.ApplicationRef), core.ɵɵinject(core.INJECTOR)); }, token: FivOverlayService, providedIn: "root" });
        return FivOverlayService;
    }());
    if (false) {
        /**
         * @type {?}
         * @private
         */
        FivOverlayService.prototype.renderer;
        /**
         * @type {?}
         * @private
         */
        FivOverlayService.prototype.componentFactoryResolver;
        /**
         * @type {?}
         * @private
         */
        FivOverlayService.prototype.appRef;
        /**
         * @type {?}
         * @private
         */
        FivOverlayService.prototype.injector;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/overlay/overlay-content/overlay-content.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivOverlayContent = /** @class */ (function () {
        function FivOverlayContent(sanitizer) {
            this.sanitizer = sanitizer;
        }
        Object.defineProperty(FivOverlayContent.prototype, "myStyle", {
            get: /**
             * @return {?}
             */
            function () {
                return this.priority
                    ? this.sanitizer.bypassSecurityTrustStyle("z-index: " + this.priority)
                    : null;
            },
            enumerable: true,
            configurable: true
        });
        FivOverlayContent.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-overlay-content',
                        template: "<ng-content #content></ng-content>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        FivOverlayContent.ctorParameters = function () { return [
            { type: platformBrowser.DomSanitizer }
        ]; };
        FivOverlayContent.propDecorators = {
            myStyle: [{ type: core.HostBinding, args: ['style',] }]
        };
        return FivOverlayContent;
    }());
    if (false) {
        /** @type {?} */
        FivOverlayContent.prototype.priority;
        /**
         * @type {?}
         * @private
         */
        FivOverlayContent.prototype.sanitizer;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/overlay/overlay.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivOverlay = /** @class */ (function () {
        function FivOverlay(viewContainer, overlay) {
            this.viewContainer = viewContainer;
            this.overlay = overlay;
            this.afterInit = new core.EventEmitter();
            this._open = false;
        }
        /**
         * @param {?=} priority
         * @param {?=} data
         * @return {?}
         */
        FivOverlay.prototype.show = /**
         * @param {?=} priority
         * @param {?=} data
         * @return {?}
         */
        function (priority, data) {
            var _this = this;
            if (!this.componentRef) {
                this.componentRef = this.overlay.createOverlay(this.viewContainer, FivOverlayContent, this.ngContent);
                this._open = true;
                this.componentRef.instance.priority = priority;
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    _this.afterInit.emit(data);
                }), 0);
                return this.componentRef.instance;
            }
        };
        /**
         * @return {?}
         */
        FivOverlay.prototype.hide = /**
         * @return {?}
         */
        function () {
            if (this.componentRef) {
                this.componentRef.destroy();
                this.componentRef = null;
                this._open = false;
            }
        };
        Object.defineProperty(FivOverlay.prototype, "open", {
            get: /**
             * @return {?}
             */
            function () {
                return this._open;
            },
            enumerable: true,
            configurable: true
        });
        FivOverlay.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-overlay',
                        template: "<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        FivOverlay.ctorParameters = function () { return [
            { type: core.ViewContainerRef },
            { type: FivOverlayService }
        ]; };
        FivOverlay.propDecorators = {
            ngContent: [{ type: core.ViewChild, args: ['content', { static: true },] }],
            priority: [{ type: core.Input }],
            afterInit: [{ type: core.Output }]
        };
        return FivOverlay;
    }());
    if (false) {
        /**
         * @type {?}
         * @private
         */
        FivOverlay.prototype.componentRef;
        /** @type {?} */
        FivOverlay.prototype.ngContent;
        /** @type {?} */
        FivOverlay.prototype.priority;
        /** @type {?} */
        FivOverlay.prototype.afterInit;
        /**
         * @type {?}
         * @private
         */
        FivOverlay.prototype._open;
        /**
         * @type {?}
         * @private
         */
        FivOverlay.prototype.viewContainer;
        /**
         * @type {?}
         * @private
         */
        FivOverlay.prototype.overlay;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/dialog/dialog.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivDialog = /** @class */ (function () {
        function FivDialog(renderer, domCtrl, animation) {
            this.renderer = renderer;
            this.domCtrl = domCtrl;
            this.animation = animation;
            this.verticalAlign = 'top';
            this.horizontalAlign = 'middle';
            this.shape = 'card';
            this.priority = 20001;
            this.backdrop = true;
            this.backdropDismiss = true;
            this.pullEnabled = true;
            // animation data
            this.inDuration = 160;
            this.outDuration = 120;
            this.outPosition = '-100%';
            this.toPosition = '0px';
            this.translate = '0px';
            this.fivClose = new core.EventEmitter();
            this.fivDurationOver = new core.EventEmitter();
            this.fivOpen = new core.EventEmitter();
            this.dialogState = 'out';
        }
        /**
         * @return {?}
         */
        FivDialog.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivDialog.prototype.open = /**
         * @return {?}
         */
        function () {
            this.overlay.show(this.priority);
            this.dialogState = this.verticalAlign;
            if (this.duration) {
                this.bar.shrinkIn(this.duration);
            }
        };
        /**
         * @return {?}
         */
        FivDialog.prototype.doneShrinking = /**
         * @return {?}
         */
        function () {
            this.fivDurationOver.emit(this);
        };
        /**
         * @return {?}
         */
        FivDialog.prototype.close = /**
         * @return {?}
         */
        function () {
            this.dialogState = 'out';
            this.bar.stopProgressAnimation();
        };
        /**
         * @return {?}
         */
        FivDialog.prototype.backdropClick = /**
         * @return {?}
         */
        function () {
            if (this.backdropDismiss) {
                this.close();
            }
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivDialog.prototype.animationDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState !== 'void' && event.toState === 'out') {
                this.transformDialog(0);
                this.overlay.hide();
                this.fivClose.emit(this);
            }
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivDialog.prototype.backdropAnimDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState === 'out' && event.toState !== 'void') {
                this.fivOpen.emit(this);
            }
        };
        /**
         * @return {?}
         */
        FivDialog.prototype.onRefresh = /**
         * @return {?}
         */
        function () {
            this.close();
        };
        /**
         * @return {?}
         */
        FivDialog.prototype.fivCancel = /**
         * @return {?}
         */
        function () {
            this.resetDialog(this.currentPullProgress);
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivDialog.prototype.transformDialog = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            var _this = this;
            this.currentPullProgress = progress;
            this.domCtrl.write((/**
             * @return {?}
             */
            function () {
                if (_this.verticalAlign === 'bottom') {
                    _this.renderer.setStyle(_this.dialogRef.nativeElement, 'margin-bottom', "-" + progress * 120 + "px");
                }
                else if (_this.verticalAlign === 'top') {
                    _this.renderer.setStyle(_this.dialogRef.nativeElement, 'margin-top', "-" + progress * 120 + "px");
                }
                else if (_this.verticalAlign === 'center') {
                    _this.renderer.setStyle(_this.dialogRef.nativeElement, 'margin-top', progress * 120 + "px");
                }
            }));
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivDialog.prototype.resetDialog = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            var _this = this;
            /** @type {?} */
            var reset;
            if (this.verticalAlign === 'bottom') {
                reset = this.animation.build([
                    animations.style({ 'margin-bottom': "-" + progress * 120 + "px" }),
                    animations.animate('150ms', animations.style({ 'margin-bottom': "0px" }))
                ]);
            }
            else if (this.verticalAlign === 'top') {
                reset = this.animation.build([
                    animations.style({ 'margin-top': "-" + progress * 120 + "px" }),
                    animations.animate('150ms', animations.style({ 'margin-top': "0px" }))
                ]);
            }
            else if (this.verticalAlign === 'center') {
                reset = this.animation.build([
                    animations.style({ 'margin-top': progress * 120 + "px" }),
                    animations.animate('150ms', animations.style({ 'margin-top': "0px" }))
                ]);
            }
            /** @type {?} */
            var animation = reset.create(this.dialogRef.nativeElement);
            animation.play();
            animation.onDone((/**
             * @return {?}
             */
            function () {
                animation.destroy();
                _this.transformDialog(0);
            }));
        };
        FivDialog.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-dialog',
                        template: "<fiv-overlay #overlay>\n  <ion-content no-bounce [direction]=\"verticalAlign === 'top' ? 'up' : 'down'\" fivPull [enabled]=\"pullEnabled\" [maxPullHeight]=\"168\" [minPullHeight]=\"120\" (fivPull)=\"transformDialog($event)\"\n  (fivRefresh)=\"onRefresh()\" (fivCancel)=\"fivCancel()\"  *ngIf=\"backdrop\" (@fade.done)=\"backdropAnimDone($event)\"\n    [@fade]=\"{value: dialogState, params: { opacity: 0, inDuration: '120ms' }}\" (click)=\"backdropClick()\" class=\"backdrop\">\n</ion-content>\n  <div #dialog [@fade]=\"{value: dialogState, params: { opacity: 0, inDuration: '120ms' }}\"\n  [@slide]=\"{value: dialogState, params: {top: outPosition, inDuration: inDuration + 'ms',outDuration: outDuration + 'ms', toPosition: toPosition, translate: translate,translateX: horizontalAlign === 'middle' ? 'translateX(-50%)' :  '' }}\"\n  (@slide.done)=\"animationDone($event)\" class=\"dialog\" [ngClass]=\"[verticalAlign, horizontalAlign, shape]\">\n    <ng-container>\n      <ng-container *ngTemplateOutlet=\"card\"></ng-container>\n    </ng-container>\n  </div>\n\n</fiv-overlay>\n\n<ng-template #card>\n  <ion-card>\n    <fiv-loading-progress-bar [verticalAlign]=\"verticalAlign === 'top' ? 'bottom' : 'top'\"\n      (fivDoneShrinking)=\"doneShrinking()\" #bar></fiv-loading-progress-bar>\n    <ng-content></ng-content>\n  </ion-card>\n</ng-template>",
                        animations: [
                            animations.trigger('slide', [
                                animations.transition('out => top', [
                                    animations.style({ top: '0', transform: 'translateY(-100%) {{translateX}}' }),
                                    animations.animate('220ms ease-out')
                                ]),
                                animations.transition('out => center', [
                                    animations.style({
                                        top: '50%',
                                        transform: 'translateY(-50%) {{translateX}} scale(0)',
                                        opacity: 0
                                    }),
                                    animations.animate('220ms ease-out', animations.style({
                                        top: '50%',
                                        transform: 'translateY(-50%) {{translateX}} scale(1)',
                                        opacity: 1
                                    }))
                                ]),
                                animations.transition('out => bottom', [
                                    animations.style({ bottom: '0', transform: 'translateY(100%) {{translateX}}' }),
                                    animations.animate('220ms ease-out')
                                ]),
                                animations.transition('top => out', [
                                    animations.style({ top: '0', transform: '*' }),
                                    animations.animate('140ms ease-in', animations.style({ top: '0', transform: 'translateY(-100%) {{translateX}}' }))
                                ]),
                                animations.transition('center => out', [
                                    animations.style({
                                        top: '50%',
                                        transform: '*',
                                        opacity: 1
                                    }),
                                    animations.animate('140ms ease-in', animations.style({
                                        top: '50%',
                                        transform: 'translateY(-50%) {{translateX}} scale(0)',
                                        opacity: 0
                                    }))
                                ]),
                                animations.transition('bottom => out', [
                                    animations.style({ bottom: '0', transform: '*' }),
                                    animations.animate('140ms ease-in', animations.style({ bottom: '0', transform: 'translateY(100%) {{translateX}}' }))
                                ])
                                // state('bottom', style({ bottom: '0', transform: '*' })),
                                // state('top', style({ top: '0', transform: '*' })),
                                // state('center', style({ top: '50%', transform: 'translateY(-50%) {{translateX}}' }))
                            ]),
                            animations.trigger('fade', [
                                animations.transition('out => *', [
                                    animations.style({ opacity: '{{opacity}}' }),
                                    animations.animate('{{inDuration}} ease-out', animations.style({ opacity: '1' }))
                                ], { params: { opacity: 0, inDuration: '250ms' } }),
                                animations.transition('* => out', [
                                    animations.style({ opacity: '1' }),
                                    animations.animate('{{outDuration}} ease-in', animations.style({ opacity: '0' }))
                                ], { params: { opacity: 0, outDuration: '200ms' } }),
                                animations.state('out', animations.style({ opacity: '0' }))
                            ])
                        ],
                        styles: ["ion-grid{--ion-grid-padding:0;--ion-grid-column-padding:0}.dialog{--min-width:340px;position:absolute;min-width:var(--min-width)}@media (max-width:600px){.dialog{--min-width:100%}}.dialog.fill{background:var(--ion-item-background);box-shadow:0 4px 16px rgba(0,0,0,.12)}.dialog.fill .sc-ion-card-ios-h,.dialog.fill .sc-ion-card-md-h{margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:0;margin-inline-end:0;box-shadow:none;margin-top:0;margin-bottom:0}.dialog.fill.bottom .sc-ion-card-ios-h,.dialog.fill.bottom .sc-ion-card-md-h,.dialog.fill.top .sc-ion-card-ios-h,.dialog.fill.top .sc-ion-card-md-h{border-radius:0}.dialog.top.left{padding-top:env(safe-area-inset-top);top:0;left:0}.dialog.top.right{padding-top:env(safe-area-inset-top);top:0;right:0}.dialog.top.middle{padding-top:env(safe-area-inset-top);top:0;left:50%;transform:translateX(-50%)}.dialog.center.middle{padding-top:env(safe-area-inset-top);top:50%;left:50%;transform:translate(-50%,-50%)}.dialog.center.left{top:50%;padding-top:env(safe-area-inset-top);left:0;transform:translateY(-50%)}.dialog.center.right{right:0;top:50%;padding-top:env(safe-area-inset-top);transform:translateY(-50%)}.dialog.bottom.left{bottom:0;left:0;padding-bottom:env(safe-area-inset-bottom)}.dialog.bottom.right{bottom:0;right:0;padding-bottom:env(safe-area-inset-bottom)}.dialog.bottom.middle{bottom:0;left:50%;transform:translateX(-50%);padding-bottom:env(safe-area-inset-bottom)}.backdrop{width:100%;height:100%;--background:rgba(0, 0, 0, 0.2);position:absolute}"]
                    }] }
        ];
        /** @nocollapse */
        FivDialog.ctorParameters = function () { return [
            { type: core.Renderer2 },
            { type: angular.DomController },
            { type: animations.AnimationBuilder }
        ]; };
        FivDialog.propDecorators = {
            verticalAlign: [{ type: core.Input }],
            horizontalAlign: [{ type: core.Input }],
            shape: [{ type: core.Input }],
            priority: [{ type: core.Input }],
            backdrop: [{ type: core.Input }],
            backdropDismiss: [{ type: core.Input }],
            pullEnabled: [{ type: core.Input }],
            duration: [{ type: core.Input }],
            inDuration: [{ type: core.Input }],
            outDuration: [{ type: core.Input }],
            fivClose: [{ type: core.Output }],
            fivDurationOver: [{ type: core.Output }],
            fivOpen: [{ type: core.Output }],
            overlay: [{ type: core.ViewChild, args: [FivOverlay, { static: false },] }],
            bar: [{ type: core.ViewChild, args: [FivLoadingProgressBar, { static: false },] }],
            dialogRef: [{ type: core.ViewChild, args: ['dialog', { static: false },] }]
        };
        return FivDialog;
    }());
    if (false) {
        /** @type {?} */
        FivDialog.prototype.verticalAlign;
        /** @type {?} */
        FivDialog.prototype.horizontalAlign;
        /** @type {?} */
        FivDialog.prototype.shape;
        /** @type {?} */
        FivDialog.prototype.priority;
        /** @type {?} */
        FivDialog.prototype.backdrop;
        /** @type {?} */
        FivDialog.prototype.backdropDismiss;
        /** @type {?} */
        FivDialog.prototype.pullEnabled;
        /** @type {?} */
        FivDialog.prototype.duration;
        /** @type {?} */
        FivDialog.prototype.inDuration;
        /** @type {?} */
        FivDialog.prototype.outDuration;
        /** @type {?} */
        FivDialog.prototype.outPosition;
        /** @type {?} */
        FivDialog.prototype.toPosition;
        /** @type {?} */
        FivDialog.prototype.translate;
        /** @type {?} */
        FivDialog.prototype.fivClose;
        /** @type {?} */
        FivDialog.prototype.fivDurationOver;
        /** @type {?} */
        FivDialog.prototype.fivOpen;
        /** @type {?} */
        FivDialog.prototype.overlay;
        /** @type {?} */
        FivDialog.prototype.bar;
        /** @type {?} */
        FivDialog.prototype.dialogRef;
        /** @type {?} */
        FivDialog.prototype.dialogState;
        /** @type {?} */
        FivDialog.prototype.currentPullProgress;
        /**
         * @type {?}
         * @private
         */
        FivDialog.prototype.renderer;
        /**
         * @type {?}
         * @private
         */
        FivDialog.prototype.domCtrl;
        /**
         * @type {?}
         * @private
         */
        FivDialog.prototype.animation;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/dialog/dialog.service.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /**
     * @record
     */
    function DialogOptions() { }
    if (false) {
        /** @type {?} */
        DialogOptions.prototype.verticalAlign;
        /** @type {?} */
        DialogOptions.prototype.horizontalAlign;
        /** @type {?} */
        DialogOptions.prototype.shape;
        /** @type {?} */
        DialogOptions.prototype.backdrop;
        /** @type {?} */
        DialogOptions.prototype.duration;
    }
    var FivDialogService = /** @class */ (function () {
        function FivDialogService(overlay) {
            this.overlay = overlay;
        }
        /**
         * @param {?} viewContainerRef
         * @param {?} content
         * @param {?=} options
         * @return {?}
         */
        FivDialogService.prototype.openDialog = /**
         * @param {?} viewContainerRef
         * @param {?} content
         * @param {?=} options
         * @return {?}
         */
        function (viewContainerRef, content, options) {
            /** @type {?} */
            var c = this.overlay.createOverlay(viewContainerRef, FivDialog, content);
            c.instance.verticalAlign = options ? options.verticalAlign : 'top';
            c.instance.verticalAlign = options ? options.verticalAlign : 'center';
            c.instance.backdrop = options ? options.backdrop : true;
            c.instance.duration = options ? options.duration : 0;
            c.instance.shape = options ? options.shape : 'card';
            c.instance.open();
            return c;
        };
        FivDialogService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        FivDialogService.ctorParameters = function () { return [
            { type: FivOverlayService }
        ]; };
        /** @nocollapse */ FivDialogService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function FivDialogService_Factory() { return new FivDialogService(core.ɵɵinject(FivOverlayService)); }, token: FivDialogService, providedIn: "root" });
        return FivDialogService;
    }());
    if (false) {
        /**
         * @type {?}
         * @private
         */
        FivDialogService.prototype.overlay;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/overlay/overlay.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivOverlayModule = /** @class */ (function () {
        function FivOverlayModule() {
        }
        FivOverlayModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivOverlay, FivOverlayContent],
                        imports: [common.CommonModule],
                        exports: [FivOverlay, FivOverlayContent],
                        entryComponents: [FivOverlayContent],
                        providers: [FivOverlayService]
                    },] }
        ];
        return FivOverlayModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/dialog/dialog.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivDialogModule = /** @class */ (function () {
        function FivDialogModule() {
        }
        FivDialogModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivDialog],
                        imports: [
                            common.CommonModule,
                            FivLoadingProgressBarModule,
                            FivOverlayModule,
                            angular.IonicModule,
                            FivPullModule
                        ],
                        exports: [FivDialog],
                        entryComponents: [FivDialog],
                        providers: [FivDialogService]
                    },] }
        ];
        return FivDialogModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/editable-label/editable-label.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var CUSTOM_EDITIABLE_LABEL_CONTROL_VALUE_ACCESSOR = {
        provide: forms.NG_VALUE_ACCESSOR,
        useExisting: core.forwardRef((/**
         * @return {?}
         */
        function () { return FivEditableLabel; })),
        multi: true
    };
    var FivEditableLabel = /** @class */ (function () {
        function FivEditableLabel() {
            this.type = 'label';
            this.disabled = false;
            this.blur = new core.EventEmitter();
        }
        Object.defineProperty(FivEditableLabel.prototype, "editing", {
            get: /**
             * @return {?}
             */
            function () {
                return this._editing;
            },
            set: /**
             * @param {?} edit
             * @return {?}
             */
            function (edit) {
                this._editing = edit;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivEditableLabel.prototype.ngAfterContentInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            rxjs.timer(0).subscribe((/**
             * @return {?}
             */
            function () { return (_this.internalValue = _this.value); }));
        };
        Object.defineProperty(FivEditableLabel.prototype, "internalValue", {
            get: /**
             * @return {?}
             */
            function () {
                return this._value;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */
            function (value) {
                if (value !== this._value) {
                    this._value = value;
                    if (this.onChangeCallback) {
                        this.onChangeCallback(this._value);
                    }
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivEditableLabel.prototype.edit = /**
         * @return {?}
         */
        function () {
            this.editing = true;
        };
        /**
         * @return {?}
         */
        FivEditableLabel.prototype.stopEdit = /**
         * @return {?}
         */
        function () {
            this.editing = false;
        };
        /**
         * @return {?}
         */
        FivEditableLabel.prototype.onEscapeClick = /**
         * @return {?}
         */
        function () {
            this.internalValue = this.value;
            this.stopEdit();
        };
        /**
         * @return {?}
         */
        FivEditableLabel.prototype.onEnterClick = /**
         * @return {?}
         */
        function () {
            this.value = this.internalValue;
            this.stopEdit();
        };
        /**
         * @param {?} value
         * @return {?}
         */
        FivEditableLabel.prototype.writeValue = /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value !== undefined && value !== this._value) {
                this._value = value;
            }
        };
        /**
         * @return {?}
         */
        FivEditableLabel.prototype.onBlur = /**
         * @return {?}
         */
        function () {
            this.blur.emit();
            this.stopEdit();
            if (this.onTouchedCallback) {
                this.onTouchedCallback();
            }
        };
        /**
         * @param {?} fn
         * @return {?}
         */
        FivEditableLabel.prototype.registerOnChange = /**
         * @param {?} fn
         * @return {?}
         */
        function (fn) {
            this.onChangeCallback = fn;
        };
        /**
         * @param {?} fn
         * @return {?}
         */
        FivEditableLabel.prototype.registerOnTouched = /**
         * @param {?} fn
         * @return {?}
         */
        function (fn) {
            this.onTouchedCallback = fn;
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivEditableLabel.prototype.titleAnimDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.toState === 'void') {
                this.input.setFocus();
            }
        };
        FivEditableLabel.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-editable-label',
                        template: "<!-- TODO if value is empty label or title can not be clicked, show placeholder?! -->\n<ion-title *ngIf=\"type === 'title' && !editing\" (click)=\"edit()\" (@titleAnim.done)=\"titleAnimDone($event)\" [@titleAnim]>\n    {{value}}</ion-title>\n<ion-label *ngIf=\"type === 'label' && !editing\" class=\"label\" (click)=\"edit()\" (@titleAnim.done)=\"titleAnimDone($event)\" [@titleAnim]>\n    {{value}}</ion-label>\n<ion-input *ngIf=\"editing\" [(ngModel)]=\"internalValue\" (blur)=\"onBlur()\" (keyup.enter)=\"onEnterClick()\"\n    (keyup.escape)=\"onEscapeClick()\" #input [@titleAnim] [ngClass]=\"{'title-input': type === 'title'}\">\n</ion-input>",
                        animations: [
                            animations.trigger('titleAnim', [
                                animations.transition('void => *', [
                                    animations.style({ opacity: '0', transform: 'translateY(-20%)' }),
                                    animations.animate('175ms ease-out', animations.style({ opacity: '1', transform: 'translateY(0)' }))
                                ])
                            ])
                        ],
                        providers: [CUSTOM_EDITIABLE_LABEL_CONTROL_VALUE_ACCESSOR],
                        styles: [":host{width:100%}.label{max-width:100%}:host *{pointer-events:auto}:host(.editable-label-disabled){pointer-events:none}.title-input{font-size:20px;font-weight:500;color:var(--color)}"]
                    }] }
        ];
        /** @nocollapse */
        FivEditableLabel.ctorParameters = function () { return []; };
        FivEditableLabel.propDecorators = {
            editing: [{ type: core.Input }],
            value: [{ type: core.Input }],
            type: [{ type: core.Input }],
            disabled: [{ type: core.HostBinding, args: ['class.editable-label-disabled',] }, { type: core.Input }],
            blur: [{ type: core.Output }],
            input: [{ type: core.ViewChild, args: ['input', { static: false },] }]
        };
        return FivEditableLabel;
    }());
    if (false) {
        /** @type {?} */
        FivEditableLabel.prototype.value;
        /** @type {?} */
        FivEditableLabel.prototype.type;
        /** @type {?} */
        FivEditableLabel.prototype.disabled;
        /** @type {?} */
        FivEditableLabel.prototype.blur;
        /** @type {?} */
        FivEditableLabel.prototype.input;
        /**
         * @type {?}
         * @private
         */
        FivEditableLabel.prototype._editing;
        /**
         * @type {?}
         * @private
         */
        FivEditableLabel.prototype._value;
        /**
         * @type {?}
         * @private
         */
        FivEditableLabel.prototype.onTouchedCallback;
        /**
         * @type {?}
         * @private
         */
        FivEditableLabel.prototype.onChangeCallback;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/editable-label/editable-label.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivEditableLabelModule = /** @class */ (function () {
        function FivEditableLabelModule() {
        }
        FivEditableLabelModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivEditableLabel],
                        imports: [common.CommonModule, forms.FormsModule, angular.IonicModule],
                        exports: [FivEditableLabel]
                    },] }
        ];
        return FivEditableLabelModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/expandable/expandable.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivExpandable = /** @class */ (function () {
        function FivExpandable(change) {
            this.change = change;
            this.isOpen = false;
            this.fivWillOpen = new core.EventEmitter();
            this.fivDidOpen = new core.EventEmitter();
            this.fivWillClose = new core.EventEmitter();
            this.fivDidClose = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivExpandable.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivExpandable.prototype.open = /**
         * @return {?}
         */
        function () {
            this.fivWillOpen.emit(this);
            this.isOpen = true;
            this.change.detectChanges();
        };
        /**
         * @return {?}
         */
        FivExpandable.prototype.toggle = /**
         * @return {?}
         */
        function () {
            if (this.isOpen === false) {
                this.open();
            }
            else {
                this.close();
            }
        };
        /**
         * @param {?=} param
         * @return {?}
         */
        FivExpandable.prototype.close = /**
         * @param {?=} param
         * @return {?}
         */
        function (param) {
            this.param = param;
            this.fivWillClose.emit(this);
            this.isOpen = false;
            this.change.detectChanges();
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivExpandable.prototype.onAnimationEnd = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState === 'closed') {
                this.fivDidOpen.emit(this);
            }
            else if (event.fromState === 'open') {
                this.fivDidClose.emit({ expandable: this, param: this.param });
                this.param = null;
            }
        };
        FivExpandable.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-expandable',
                        template: "<div>\n  <ng-content select=\"[header]\"></ng-content>\n  <div [@listAnim]=\"{value: isOpen ? 'open' : 'closed', params: timingFunction ? {time: timingFunction} : {}}\" (@listAnim.done)=\"onAnimationEnd($event)\"\n    style=\"overflow: hidden\">\n    <ng-content select=\"[content]\"></ng-content>\n  </div>\n</div>",
                        animations: [
                            animations.trigger('listAnim', [
                                animations.state('open', animations.style({ height: '*', opacity: 1 })),
                                animations.state('closed', animations.style({ height: '0', opacity: 0 })),
                                animations.transition('closed => open', [
                                    animations.animate('{{time}}', animations.keyframes([
                                        animations.style({ height: '0', opacity: 0, offset: 0 }),
                                        animations.style({ height: '*', opacity: 0.1, offset: 0.8 }),
                                        animations.style({ height: '*', opacity: 1, offset: 1 })
                                    ]))
                                ], { params: { time: '270ms ease-out' } }),
                                animations.transition('open => closed', [
                                    animations.animate('{{time}}', animations.keyframes([
                                        animations.style({ height: '*', opacity: 1, offset: 0 }),
                                        animations.style({ height: '*', opacity: 0.1, offset: 0.2 }),
                                        animations.style({ height: '0', opacity: 0, offset: 1 })
                                    ]))
                                ], { params: { time: '220ms ease-out' } })
                            ])
                        ],
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        FivExpandable.ctorParameters = function () { return [
            { type: core.ChangeDetectorRef }
        ]; };
        FivExpandable.propDecorators = {
            isOpen: [{ type: core.Input }],
            timingFunction: [{ type: core.Input }],
            fivWillOpen: [{ type: core.Output }],
            fivDidOpen: [{ type: core.Output }],
            fivWillClose: [{ type: core.Output }],
            fivDidClose: [{ type: core.Output }]
        };
        return FivExpandable;
    }());
    if (false) {
        /** @type {?} */
        FivExpandable.prototype.isOpen;
        /** @type {?} */
        FivExpandable.prototype.timingFunction;
        /** @type {?} */
        FivExpandable.prototype.fivWillOpen;
        /** @type {?} */
        FivExpandable.prototype.fivDidOpen;
        /** @type {?} */
        FivExpandable.prototype.fivWillClose;
        /** @type {?} */
        FivExpandable.prototype.fivDidClose;
        /** @type {?} */
        FivExpandable.prototype.param;
        /**
         * @type {?}
         * @private
         */
        FivExpandable.prototype.change;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/expandable/expandable-indicator/expandable-indicator.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivExpandableIndicator = /** @class */ (function () {
        function FivExpandableIndicator(expandable) {
            this.expandable = expandable;
            this.icon = 'chevron-down';
        }
        /**
         * @return {?}
         */
        FivExpandableIndicator.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        FivExpandableIndicator.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-expandable-indicator',
                        template: "<ion-icon class=\"indicator\" [ngClass]=\"{'rotate': expandable.isOpen}\" [name]=\"icon\"></ion-icon>",
                        styles: [":host{display:flex}.indicator{transition:125ms}.indicator.rotate{transform:rotateZ(180deg)}"]
                    }] }
        ];
        /** @nocollapse */
        FivExpandableIndicator.ctorParameters = function () { return [
            { type: FivExpandable }
        ]; };
        FivExpandableIndicator.propDecorators = {
            icon: [{ type: core.Input }]
        };
        return FivExpandableIndicator;
    }());
    if (false) {
        /** @type {?} */
        FivExpandableIndicator.prototype.icon;
        /** @type {?} */
        FivExpandableIndicator.prototype.expandable;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/expandable/expandable.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivExpandableModule = /** @class */ (function () {
        function FivExpandableModule() {
        }
        FivExpandableModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivExpandable, FivExpandableIndicator],
                        imports: [common.CommonModule, angular.IonicModule],
                        exports: [FivExpandable, FivExpandableIndicator]
                    },] }
        ];
        return FivExpandableModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/feature-discovery/feature-discovery.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivFeatureDiscovery = /** @class */ (function () {
        function FivFeatureDiscovery(renderer, platform) {
            this.renderer = renderer;
            this.platform = platform;
            this.top = 0;
            this.left = 0;
            this.width = 420;
            this.height = 420;
            this.innerDiameter = 0;
            this.featurePadding = 0;
            this.contentTop = 0;
            this.contentLeft = 0;
            this.contentWidth = 0;
            this.contentHeight = 0;
            this.contentOffset = 0;
            this.animationState = 'hidden';
            this.pulse = 'small';
            this.fivClick = new core.EventEmitter();
            this.fivBackdropClick = new core.EventEmitter();
            this.fivClose = new core.EventEmitter();
            this.fivOpen = new core.EventEmitter();
            this.fivAnimation = new core.EventEmitter();
        }
        Object.defineProperty(FivFeatureDiscovery.prototype, "_classes", {
            get: /**
             * @return {?}
             */
            function () {
                return this.classes.join(' ');
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivFeatureDiscovery.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivFeatureDiscovery.prototype.ngAfterContentInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @param {?} bounds
         * @return {?}
         */
        FivFeatureDiscovery.prototype.setBounds = /**
         * @param {?} bounds
         * @return {?}
         */
        function (bounds) {
            this.bounds = bounds;
            this.innerDiameter =
                bounds.height > bounds.width ? bounds.height : bounds.width;
            this.top = bounds.top + bounds.height / 2 - this.height / 2;
            this.left = bounds.left + bounds.width / 2 - this.width / 2;
            this.calculateContentBounds();
            if (!this.icon) {
                /** @type {?} */
                var gradient = "-webkit-radial-gradient(transparent " + (this
                    .innerDiameter /
                    2 +
                    5) + "px, var(--fiv-color-feature) " + (this.innerDiameter / 2 + 5) + "px)";
                /** @type {?} */
                var pulseGradient = "-webkit-radial-gradient(transparent " + (this
                    .innerDiameter /
                    2 +
                    5) + "px, var(--fiv-color-pulse) " + (this.innerDiameter / 2 + 5) + "px)";
                this.renderer.setStyle(this.circle.nativeElement, 'background', gradient);
                this.renderer.setStyle(this.innerPulse.nativeElement, 'background', pulseGradient);
                this.renderer.setStyle(this.outerPulse.nativeElement, 'background', pulseGradient);
            }
        };
        /**
         * @return {?}
         */
        FivFeatureDiscovery.prototype.calculateContentBounds = /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var absoluteCenter = {
                x: this.platform.width() / 2,
                y: this.platform.height() / 2
            };
            /** @type {?} */
            var center = {
                x: this.left + this.width / 2,
                y: this.top + this.width / 2
            };
            /** @type {?} */
            var rectWidth = Math.sqrt(Math.pow(this.width, 2) / 2);
            /** @type {?} */
            var isTop = center.y < absoluteCenter.y;
            /** @type {?} */
            var isLeft = center.x < absoluteCenter.x;
            /** @type {?} */
            var innerRadius = this.innerDiameter / 2;
            /** @type {?} */
            var padding = this.featurePadding / 2;
            /** @type {?} */
            var contentRight = 0;
            /** @type {?} */
            var contentBottom = 0;
            if (isLeft) {
                this.contentLeft = center.x - innerRadius;
                contentRight = Math.min(center.x + rectWidth / 2 + this.contentOffset, this.platform.width());
            }
            else {
                this.contentLeft = Math.max(center.x - rectWidth / 2 - this.contentOffset, 0);
                contentRight = center.x + innerRadius;
            }
            if (isTop) {
                this.contentTop = center.y + innerRadius + padding;
                contentBottom = center.y + rectWidth / 2 + -1 * this.contentOffset;
            }
            else {
                this.contentTop = center.y - rectWidth / 2 + this.contentOffset;
                contentBottom = center.y - innerRadius - padding;
            }
            this.contentWidth = Math.abs(this.contentLeft - contentRight);
            this.contentHeight = Math.abs(this.contentTop - contentBottom);
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivFeatureDiscovery.prototype.handleCircleAnimation = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            this.fivAnimation.emit(event);
            if (event.toState === 'visible') {
                this.fivOpen.emit();
            }
            if (event.fromState === 'visible' && event.toState === 'hidden') {
                this.fivClose.emit();
            }
            if (event.fromState === 'visible' && event.toState === 'execute') {
                this.fivClose.emit();
            }
        };
        /**
         * @return {?}
         */
        FivFeatureDiscovery.prototype.show = /**
         * @return {?}
         */
        function () {
            this.animationState = 'visible';
        };
        /**
         * @return {?}
         */
        FivFeatureDiscovery.prototype.hide = /**
         * @return {?}
         */
        function () {
            this.animationState = 'hidden';
        };
        /**
         * @return {?}
         */
        FivFeatureDiscovery.prototype.featureClick = /**
         * @return {?}
         */
        function () {
            this.animationState = 'execute';
        };
        /**
         * @param {?} icon
         * @return {?}
         */
        FivFeatureDiscovery.prototype.setIcon = /**
         * @param {?} icon
         * @return {?}
         */
        function (icon) {
            if (icon) {
                this.icon = icon.name;
            }
        };
        FivFeatureDiscovery.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-feature-discovery',
                        template: "<div class=\"backdrop\" (click)=\"fivBackdropClick.emit()\"></div>\n<div [@scale]=\"animationState\" (@scale.done)=\"handleCircleAnimation($event)\" #circle class=\"circle\"\n  [style.height]=\"height + 'px'\" [style.width]=\"width + 'px'\" [style.top]=\"top + 'px'\" [style.left]=\"left + 'px'\">\n  <div #pOuter class=\"feature center pulse\" [style.height]=\"(innerDiameter + featurePadding) + 'px'\"\n    [style.width]=\"(innerDiameter + featurePadding) + 'px'\">\n  </div>\n  <div #pInner class=\"feature center inner  ion-activatable\" (click)=\"fivClick.emit($event)\"\n    [style.height]=\"(innerDiameter + (icon ? featurePadding : 0)) + 'px'\"\n    [style.width]=\"(innerDiameter + (icon ? featurePadding : 0)) + 'px'\">\n    <fiv-icon class=\"center\" *ngIf=\"icon\" [name]=\"icon\"></fiv-icon>\n    <ion-ripple-effect type=\"unbounded\"></ion-ripple-effect>\n  </div>\n</div>\n<div class=\"content\" *ngIf=\"animationState === 'visible'\" [@contentAnim] [style.width]=\"contentWidth + 'px'\"\n  [style.height]=\"contentHeight + 'px'\" [style.top]=\"contentTop + 'px'\" [style.left]=\"contentLeft + 'px'\">\n  <ng-content></ng-content>\n</div>",
                        animations: [
                            animations.trigger('scale', [
                                animations.transition('* => visible', [
                                    animations.style({ transform: 'scale(0)', opacity: '0' }),
                                    animations.animate('240ms ease-out', animations.style({ transform: 'scale(1)', opacity: '1' }))
                                ]),
                                animations.transition('visible => hidden', [
                                    animations.style({ transform: 'scale(1)', opacity: '1' }),
                                    animations.animate('215ms ease-in', animations.style({ transform: 'scale(0)', opacity: '0' }))
                                ]),
                                animations.transition('visible => execute', [
                                    animations.style({ transform: 'scale(1)', opacity: '1' }),
                                    animations.animate('215ms 0.15s ease-in', animations.style({ transform: 'scale(1.4)', opacity: '0' }))
                                ])
                            ]),
                            animations.trigger('contentAnim', [
                                animations.transition('void => *', [
                                    animations.style({ opacity: '0' }),
                                    animations.animate('100ms 240ms ease-out', animations.style({ opacity: '1' }))
                                ])
                            ])
                        ],
                        styles: [":host{display:block;height:100vh;width:100vw;position:absolute;--fiv-color-feature:rgba(56, 128, 255, 0.97);--fiv-color-pulse:var(--ion-color-light);--fiv-icon-color:var(--fiv-color-feature, var(--ion-color-primary))}.backdrop{display:block;height:100vh;width:100vw;position:absolute}.circle{position:absolute;border-radius:100%;background:var(--fiv-color-feature);box-shadow:0 3px 1px -2px rgba(0,0,0,.2),0 2px 2px 0 rgba(0,0,0,.14),0 1px 5px 0 rgba(0,0,0,.12)}.feature{border-radius:100%;background:var(--fiv-color-pulse)}.feature.center.pulse{-webkit-animation:1.4s infinite feature-pulse;animation:1.4s infinite feature-pulse}@-webkit-keyframes feature-pulse{0%{transform:scale(1) translate(-50%,-50%);border-radius:100%;box-shadow:0 0 0 0 rgba(0,0,0,.24)}50%{transform:scale(1.1) translate(-45%,-45%)}100%{transform:scale(1) translate(-50%,-50%);border-radius:100%;box-shadow:0 0 0 28px transparent}}@keyframes feature-pulse{0%{transform:scale(1) translate(-50%,-50%);border-radius:100%;box-shadow:0 0 0 0 rgba(0,0,0,.24)}50%{transform:scale(1.1) translate(-45%,-45%)}100%{transform:scale(1) translate(-50%,-50%);border-radius:100%;box-shadow:0 0 0 28px transparent}}.content{position:absolute}.center{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%)}"]
                    }] }
        ];
        /** @nocollapse */
        FivFeatureDiscovery.ctorParameters = function () { return [
            { type: core.Renderer2 },
            { type: angular.Platform }
        ]; };
        FivFeatureDiscovery.propDecorators = {
            circle: [{ type: core.ViewChild, args: ['circle', { static: true },] }],
            rect: [{ type: core.ViewChild, args: ['rect', { static: true },] }],
            innerPulse: [{ type: core.ViewChild, args: ['pInner', { static: true, read: core.ElementRef },] }],
            outerPulse: [{ type: core.ViewChild, args: ['pOuter', { static: true },] }],
            fivClick: [{ type: core.Output }],
            fivBackdropClick: [{ type: core.Output }],
            fivClose: [{ type: core.Output }],
            fivOpen: [{ type: core.Output }],
            fivAnimation: [{ type: core.Output }],
            _classes: [{ type: core.HostBinding, args: ['class',] }]
        };
        return FivFeatureDiscovery;
    }());
    if (false) {
        /** @type {?} */
        FivFeatureDiscovery.prototype.top;
        /** @type {?} */
        FivFeatureDiscovery.prototype.left;
        /** @type {?} */
        FivFeatureDiscovery.prototype.width;
        /** @type {?} */
        FivFeatureDiscovery.prototype.height;
        /** @type {?} */
        FivFeatureDiscovery.prototype.innerDiameter;
        /** @type {?} */
        FivFeatureDiscovery.prototype.featurePadding;
        /** @type {?} */
        FivFeatureDiscovery.prototype.contentTop;
        /** @type {?} */
        FivFeatureDiscovery.prototype.contentLeft;
        /** @type {?} */
        FivFeatureDiscovery.prototype.contentWidth;
        /** @type {?} */
        FivFeatureDiscovery.prototype.contentHeight;
        /** @type {?} */
        FivFeatureDiscovery.prototype.contentOffset;
        /** @type {?} */
        FivFeatureDiscovery.prototype.bounds;
        /** @type {?} */
        FivFeatureDiscovery.prototype.icon;
        /** @type {?} */
        FivFeatureDiscovery.prototype.classes;
        /** @type {?} */
        FivFeatureDiscovery.prototype.circle;
        /** @type {?} */
        FivFeatureDiscovery.prototype.rect;
        /** @type {?} */
        FivFeatureDiscovery.prototype.innerPulse;
        /** @type {?} */
        FivFeatureDiscovery.prototype.outerPulse;
        /** @type {?} */
        FivFeatureDiscovery.prototype.animationState;
        /** @type {?} */
        FivFeatureDiscovery.prototype.pulse;
        /** @type {?} */
        FivFeatureDiscovery.prototype.fivClick;
        /** @type {?} */
        FivFeatureDiscovery.prototype.fivBackdropClick;
        /** @type {?} */
        FivFeatureDiscovery.prototype.fivClose;
        /** @type {?} */
        FivFeatureDiscovery.prototype.fivOpen;
        /** @type {?} */
        FivFeatureDiscovery.prototype.fivAnimation;
        /**
         * @type {?}
         * @private
         */
        FivFeatureDiscovery.prototype.renderer;
        /**
         * @type {?}
         * @private
         */
        FivFeatureDiscovery.prototype.platform;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/feature-discovery/feature.directive.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivFeature = /** @class */ (function () {
        function FivFeature(host, viewContainer, fivIcon, ionIcon, overlay, platform) {
            this.host = host;
            this.viewContainer = viewContainer;
            this.fivIcon = fivIcon;
            this.ionIcon = ionIcon;
            this.overlay = overlay;
            this.platform = platform;
            this.maxDiameter = 1080;
            this.diameter = Math.min(this.platform.width() * 2, this.maxDiameter);
            this.contentOffset = 20;
            this.featurePadding = 20;
            this.clickEnabled = true;
            this.classes = [];
            this.fivFeatureClick = new core.EventEmitter();
            this.fivOpen = new core.EventEmitter();
            this.fivWillOpen = new core.EventEmitter();
            this.fivClose = new core.EventEmitter();
            this.fivWillClose = new core.EventEmitter();
            this.isOpen = false;
        }
        /**
         * @private
         * @param {?} nativeElement
         * @return {?}
         */
        FivFeature.prototype.getBounds = /**
         * @private
         * @param {?} nativeElement
         * @return {?}
         */
        function (nativeElement) {
            /** @type {?} */
            var bounds = nativeElement.getBoundingClientRect();
            return {
                top: bounds.top,
                left: bounds.left,
                height: nativeElement.clientHeight,
                width: nativeElement.clientWidth
            };
        };
        /**
         * @return {?}
         */
        FivFeature.prototype.show = /**
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var icon = this.ionIcon || this.fivIcon;
            /** @type {?} */
            var bounds = icon
                ? this.getBounds(this.host.nativeElement.parentElement)
                : this.getBounds(this.host.nativeElement);
            this.overlayRef = this.overlay.createOverlay(this.viewContainer, FivFeatureDiscovery, this.fivFeature);
            /** @type {?} */
            var featureOverlay = this.overlayRef.instance;
            featureOverlay.height = this.diameter;
            featureOverlay.width = this.diameter;
            featureOverlay.featurePadding = this.featurePadding;
            featureOverlay.contentOffset = this.contentOffset;
            featureOverlay.classes = this.classes;
            featureOverlay.setIcon(icon);
            featureOverlay.setBounds(bounds);
            featureOverlay.show();
            this.fivWillOpen.emit();
            featureOverlay.fivAnimation
                .pipe(operators.filter((/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return event.toState === 'visible'; })), operators.first())
                .subscribe((/**
             * @return {?}
             */
            function () {
                _this.didOpen();
            }));
            featureOverlay.fivClick.pipe(operators.first()).subscribe((/**
             * @param {?} ev
             * @return {?}
             */
            function (ev) {
                _this.featureClick(ev);
            }));
            featureOverlay.fivBackdropClick.pipe(operators.first()).subscribe((/**
             * @return {?}
             */
            function () {
                _this.hide();
            }));
        };
        /**
         * @return {?}
         */
        FivFeature.prototype.hide = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.fivWillClose.emit();
            if (this.overlayRef) {
                this.overlayRef.instance.hide();
                this.overlayRef.instance.fivClose.pipe(operators.first()).subscribe((/**
                 * @return {?}
                 */
                function () {
                    _this.fivClose.emit();
                    _this.isOpen = false;
                    _this.overlayRef.destroy();
                    _this.overlayRef = null;
                }));
            }
        };
        /**
         * @private
         * @return {?}
         */
        FivFeature.prototype.didOpen = /**
         * @private
         * @return {?}
         */
        function () {
            this.fivOpen.emit();
            this.isOpen = true;
        };
        /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        FivFeature.prototype.featureClick = /**
         * @private
         * @param {?} ev
         * @return {?}
         */
        function (ev) {
            var _this = this;
            if (this.overlayRef) {
                this.fivFeatureClick.emit(ev);
                this.fivWillClose.emit();
                this.overlayRef.instance.featureClick();
                this.overlayRef.instance.fivClose.pipe(operators.first()).subscribe((/**
                 * @return {?}
                 */
                function () {
                    _this.fivClose.emit();
                    _this.overlayRef.destroy();
                    _this.overlayRef = null;
                    if (_this.clickEnabled) {
                        _this.host.nativeElement.click();
                    }
                }));
            }
        };
        FivFeature.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivFeature]',
                        exportAs: 'fivFeature'
                    },] }
        ];
        /** @nocollapse */
        FivFeature.ctorParameters = function () { return [
            { type: core.ElementRef, decorators: [{ type: core.Host }] },
            { type: core.ViewContainerRef },
            { type: FivIcon, decorators: [{ type: core.Host }, { type: core.Optional }] },
            { type: angular.IonIcon, decorators: [{ type: core.Host }, { type: core.Optional }] },
            { type: FivOverlayService },
            { type: angular.Platform }
        ]; };
        FivFeature.propDecorators = {
            maxDiameter: [{ type: core.Input }],
            diameter: [{ type: core.Input }],
            contentOffset: [{ type: core.Input }],
            featurePadding: [{ type: core.Input }],
            clickEnabled: [{ type: core.Input }],
            classes: [{ type: core.Input }],
            fivFeature: [{ type: core.Input }],
            fivFeatureClick: [{ type: core.Output }],
            fivOpen: [{ type: core.Output }],
            fivWillOpen: [{ type: core.Output }],
            fivClose: [{ type: core.Output }],
            fivWillClose: [{ type: core.Output }]
        };
        return FivFeature;
    }());
    if (false) {
        /** @type {?} */
        FivFeature.prototype.maxDiameter;
        /** @type {?} */
        FivFeature.prototype.diameter;
        /** @type {?} */
        FivFeature.prototype.contentOffset;
        /** @type {?} */
        FivFeature.prototype.featurePadding;
        /** @type {?} */
        FivFeature.prototype.clickEnabled;
        /** @type {?} */
        FivFeature.prototype.classes;
        /** @type {?} */
        FivFeature.prototype.fivFeature;
        /** @type {?} */
        FivFeature.prototype.overlayRef;
        /** @type {?} */
        FivFeature.prototype.fivFeatureClick;
        /** @type {?} */
        FivFeature.prototype.fivOpen;
        /** @type {?} */
        FivFeature.prototype.fivWillOpen;
        /** @type {?} */
        FivFeature.prototype.fivClose;
        /** @type {?} */
        FivFeature.prototype.fivWillClose;
        /** @type {?} */
        FivFeature.prototype.isOpen;
        /**
         * @type {?}
         * @private
         */
        FivFeature.prototype.host;
        /**
         * @type {?}
         * @private
         */
        FivFeature.prototype.viewContainer;
        /**
         * @type {?}
         * @private
         */
        FivFeature.prototype.fivIcon;
        /**
         * @type {?}
         * @private
         */
        FivFeature.prototype.ionIcon;
        /**
         * @type {?}
         * @private
         */
        FivFeature.prototype.overlay;
        /**
         * @type {?}
         * @private
         */
        FivFeature.prototype.platform;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/feature-discovery/feature-discovery.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivFeatureDiscoveryModule = /** @class */ (function () {
        function FivFeatureDiscoveryModule() {
        }
        FivFeatureDiscoveryModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivFeature, FivFeatureDiscovery],
                        imports: [common.CommonModule, angular.IonicModule, FivIconModule],
                        exports: [FivFeature, FivFeatureDiscovery],
                        entryComponents: [FivFeatureDiscovery]
                    },] }
        ];
        return FivFeatureDiscoveryModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/gallery/gallery-toolbar/gallery-toolbar.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivGalleryToolbar = /** @class */ (function () {
        function FivGalleryToolbar() {
            this.position = 'top';
        }
        /**
         * @return {?}
         */
        FivGalleryToolbar.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        FivGalleryToolbar.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-gallery-toolbar',
                        template: "<ng-template #ref>\n  <ng-content></ng-content>\n</ng-template>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        FivGalleryToolbar.ctorParameters = function () { return []; };
        FivGalleryToolbar.propDecorators = {
            content: [{ type: core.ViewChild, args: [core.TemplateRef, { static: true },] }],
            position: [{ type: core.Input }]
        };
        return FivGalleryToolbar;
    }());
    if (false) {
        /** @type {?} */
        FivGalleryToolbar.prototype.content;
        /** @type {?} */
        FivGalleryToolbar.prototype.position;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/gallery/gallery-image/gallery-image.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivGalleryImage = /** @class */ (function () {
        function FivGalleryImage() {
            this.click = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivGalleryImage.prototype.open = /**
         * @return {?}
         */
        function () {
            this.click.emit(this);
        };
        /**
         * @return {?}
         */
        FivGalleryImage.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        FivGalleryImage.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-gallery-image',
                        template: "<ng-container *ngIf=\"!src\">\n  <ng-content></ng-content>\n</ng-container>\n<div class=\"ion-activatable\" (click)=\"open()\">\n  <img #thumbnail class=\"thumbnail\" [src]=\"src\">\n  <ion-ripple-effect type=\"bounded\"></ion-ripple-effect>\n</div>",
                        styles: [":host{display:block;--max-height:100%;--border-radius:0px;min-height:var(--max-height);--background:var(--ion-color-light);background:var(--background)}.thumbnail{-o-object-position:center;object-position:center;-o-object-fit:cover;object-fit:cover;display:block;height:var(--height,auto);max-height:var(--max-height);width:var(--width,100%);border-radius:var(--border-radius)}.ion-activatable{position:relative;--ripple-color:rgba(0, 0, 0, 0.5)}"]
                    }] }
        ];
        /** @nocollapse */
        FivGalleryImage.ctorParameters = function () { return []; };
        FivGalleryImage.propDecorators = {
            src: [{ type: core.Input }],
            thumbnail: [{ type: core.ViewChild, args: ['thumbnail', { static: true },] }],
            click: [{ type: core.Output }]
        };
        return FivGalleryImage;
    }());
    if (false) {
        /** @type {?} */
        FivGalleryImage.prototype.src;
        /** @type {?} */
        FivGalleryImage.prototype.originalSrc;
        /** @type {?} */
        FivGalleryImage.prototype.index;
        /** @type {?} */
        FivGalleryImage.prototype.thumbnail;
        /** @type {?} */
        FivGalleryImage.prototype.click;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/animations/animations.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var fade = animations.animation([
        animations.style({
            opacity: '{{ fromOpacity }}'
        }),
        animations.animate('{{ time }}', animations.style({
            opacity: '{{ toOpacity }}'
        }))
    ]);
    /** @type {?} */
    var translate = animations.animation([
        animations.animate('{{ time }}', animations.style({
            transform: 'translate({{toX}},{{toY}})'
        }))
    ]);

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/gallery/image.service.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var ImageService = /** @class */ (function () {
        function ImageService() {
        }
        /**
         * @param {?} imgEl
         * @return {?}
         */
        ImageService.prototype.getAverageRGB = /**
         * @param {?} imgEl
         * @return {?}
         */
        function (imgEl) {
            /** @type {?} */
            var blockSize = 5;
            /** @type {?} */
            var // only visit every 5 pixels
            defaultRGB = { r: 0, g: 0, b: 0 };
            /** @type {?} */
            var // for non-supporting envs
            canvas = document.createElement('canvas');
            /** @type {?} */
            var context = canvas.getContext && canvas.getContext('2d');
            /** @type {?} */
            var rgb = { r: 0, g: 0, b: 0 };
            /** @type {?} */
            var data;
            /** @type {?} */
            var width;
            /** @type {?} */
            var height;
            /** @type {?} */
            var length;
            /** @type {?} */
            var i = -4;
            /** @type {?} */
            var count = 0;
            if (!context) {
                return "rgb(" + defaultRGB.r + "," + defaultRGB.g + "," + defaultRGB.b + ")";
            }
            height = canvas.height =
                imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;
            width = canvas.width =
                imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;
            context.drawImage(imgEl, 0, 0);
            try {
                data = context.getImageData(0, 0, width, height);
            }
            catch (e) {
                /* security error, img on diff domain */
                return "rgb(" + defaultRGB.r + "," + defaultRGB.g + "," + defaultRGB.b + ")";
            }
            length = data.data.length;
            while ((i += blockSize * 4) < length) {
                ++count;
                rgb.r += data.data[i];
                rgb.g += data.data[i + 1];
                rgb.b += data.data[i + 2];
            }
            // ~~ used to floor values
            rgb.r = Math.floor(rgb.r / count);
            rgb.g = Math.floor(rgb.g / count);
            rgb.b = Math.floor(rgb.b / count);
            return "rgb(" + rgb.r + "," + rgb.g + "," + rgb.b + ")";
        };
        ImageService.decorators = [
            { type: core.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        ImageService.ctorParameters = function () { return []; };
        /** @nocollapse */ ImageService.ngInjectableDef = core.ɵɵdefineInjectable({ factory: function ImageService_Factory() { return new ImageService(); }, token: ImageService, providedIn: "root" });
        return ImageService;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/gallery/gallery.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivGallery = /** @class */ (function () {
        function FivGallery(domCtrl, renderer, animation, change, platform, imageService, document) {
            this.domCtrl = domCtrl;
            this.renderer = renderer;
            this.animation = animation;
            this.change = change;
            this.platform = platform;
            this.imageService = imageService;
            this.document = document;
            this.activeIndex = 0;
            this.inFullscreen = false;
            this.zoomedIn = false;
            this.controlsVisible = true;
            this.slidesLoaded = false;
            this.morphing = false;
            this.backdrop = false;
            this.backdropColor = '#000000ee';
            this.pagerVisible = true;
            this.ambient = false;
            this.willOpen = new core.EventEmitter();
            this.willClose = new core.EventEmitter();
            this.didOpen = new core.EventEmitter();
            this.didClose = new core.EventEmitter();
            this.backdropChange = new core.EventEmitter();
            this.$onDestroy = new rxjs.Subject();
        }
        /**
         * @return {?}
         */
        FivGallery.prototype.ngAfterContentInit = /**
         * @return {?}
         */
        function () {
            this.updateImagesIndex();
            this.setupToolbars();
            this.subscribeToImageEvents();
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            this.$onDestroy.next();
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.subscribeToImageEvents = /**
         * @return {?}
         */
        function () {
            var _this = this;
            rxjs.from(this.images.map((/**
             * @param {?} image
             * @return {?}
             */
            function (image) { return image.click; })))
                .pipe(operators.mergeMap((/**
             * @param {?} value
             * @return {?}
             */
            function (value) { return value; })), operators.takeUntil(this.$onDestroy))
                .subscribe((/**
             * @param {?} image
             * @return {?}
             */
            function (image) {
                _this.open(image);
            }));
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.updateImagesIndex = /**
         * @return {?}
         */
        function () {
            this.images.forEach((/**
             * @param {?} img
             * @param {?} i
             * @return {?}
             */
            function (img, i) {
                img.index = i;
            }));
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.setupToolbars = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.toolbars.forEach((/**
             * @param {?} toolbar
             * @return {?}
             */
            function (toolbar) {
                if (toolbar.position === 'top') {
                    _this.topToolbar = toolbar.content;
                }
                else {
                    _this.bottomToolbar = toolbar.content;
                }
            }));
        };
        /**
         * @param {?} initial
         * @return {?}
         */
        FivGallery.prototype.open = /**
         * @param {?} initial
         * @return {?}
         */
        function (initial) {
            var _this = this;
            this.willOpen.emit(initial);
            this.activeIndex = initial.index;
            this.morphing = true;
            this.overlay.show(50000);
            this.initialImage = initial;
            this.updateBackdrop(this.activeIndex);
            this.initialImage.originalSrc = initial.src;
            setTimeout((/**
             * @return {?}
             */
            function () {
                //wait a little for ripple
                _this.backdrop = true;
                _this.showControls();
                _this.morphIn();
            }), 300);
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.morphIn = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.morphOverlay.show(49999);
            /** @type {?} */
            var f = ngxRxjsAnimations.getPosition(this.initialImage.thumbnail);
            /** @type {?} */
            var t = this.calculateImagePosition();
            /** @type {?} */
            var tweenDone = new rxjs.Subject();
            ngxRxjsAnimations.tween(ngxRxjsAnimations.easeOutSine, 320)
                .pipe(ngxRxjsAnimations.fromToPixels(this.morphImage, f.top, t.top, 'top'), ngxRxjsAnimations.fromToPixels(this.morphImage, f.left, t.left, 'left'), ngxRxjsAnimations.fromToPixels(this.morphImage, f.height, t.height, 'height'), ngxRxjsAnimations.fromToPixels(this.morphImage, f.width, t.width, 'width'))
                .subscribe({
                complete: (/**
                 * @return {?}
                 */
                function () {
                    tweenDone.next();
                })
            });
            rxjs.zip(tweenDone, !this.slidesLoaded ? this.slides.ionSlidesDidLoad : rxjs.of(true))
                .pipe(operators.tap((/**
             * @return {?}
             */
            function () {
                _this.morphing = false;
                _this.morphOverlay.hide();
                _this.didOpen.emit(_this.initialImage);
                _this.swiper.nativeElement.swiper.on('click', (/**
                 * @return {?}
                 */
                function () {
                    _this.handleSingleTap();
                }));
            })), operators.takeUntil(this.$onDestroy))
                .subscribe();
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.dismiss = /**
         * @return {?}
         */
        function () {
            this.close(false);
        };
        /**
         * @param {?=} emit
         * @return {?}
         */
        FivGallery.prototype.close = /**
         * @param {?=} emit
         * @return {?}
         */
        function (emit) {
            if (emit === void 0) { emit = true; }
            if (emit) {
                this.willClose.emit(this.initialImage);
            }
            this.backdrop = false;
            /** @type {?} */
            var sameAsInitial = this.images.toArray()[this.activeIndex].index === this.initialImage.index;
            if (sameAsInitial) {
                this.morphBack();
            }
            else {
                this.slideOut();
            }
            this.resetSlides(0);
            if (this.inFullscreen) {
                this.closeFullscreen();
            }
            this.slidesLoaded = false;
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.morphBack = /**
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var f = ngxRxjsAnimations.getPosition(this.getActiveImage());
            /** @type {?} */
            var t = ngxRxjsAnimations.getPosition(this.initialImage.thumbnail);
            this.overlay.hide();
            this.morphOverlay.show();
            ngxRxjsAnimations.tween(ngxRxjsAnimations.easeOutSine, 240)
                .pipe(ngxRxjsAnimations.fromToPixels(this.morphImage, f.top, t.top, 'top'), ngxRxjsAnimations.fromToPixels(this.morphImage, f.left, t.left, 'left'), ngxRxjsAnimations.fromToPixels(this.morphImage, f.height, t.height, 'height'), ngxRxjsAnimations.fromToPixels(this.morphImage, f.width, t.width, 'width'))
                .subscribe({
                complete: (/**
                 * @return {?}
                 */
                function () {
                    _this.morphOverlay.hide();
                    _this.didClose.emit(_this.initialImage);
                    _this.initialImage = null;
                })
            });
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.slideOut = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.overlay.hide();
            this.morphOverlay.show();
            this.morphImage.nativeElement.src = this.getActiveImage().nativeElement.src;
            ngxRxjsAnimations.setPosition(this.morphImage, ngxRxjsAnimations.getPosition(this.getActiveImage()));
            ngxRxjsAnimations.tween(ngxRxjsAnimations.easeOutSine, 240)
                .pipe(ngxRxjsAnimations.fromTo(this.morphImage, 'transform', 0, 100, (/**
             * @param {?} t
             * @return {?}
             */
            function (t) { return "translateY(" + t + "%)"; })))
                .subscribe({
                complete: (/**
                 * @return {?}
                 */
                function () {
                    _this.morphImage.nativeElement.style.transform = '';
                    _this.morphOverlay.hide();
                    _this.didClose.emit(_this.initialImage);
                    _this.initialImage = null;
                })
            });
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.getActiveImage = /**
         * @return {?}
         */
        function () {
            return this.slideImages.toArray()[this.activeIndex];
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivGallery.prototype.transformSlides = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            var _this = this;
            if (this.controlsVisible) {
                this.hideControls();
            }
            this.domCtrl.write((/**
             * @return {?}
             */
            function () {
                _this.renderer.setStyle(_this.viewer.nativeElement, 'transform', "translateY(" + progress * 120 + "px)");
            }));
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivGallery.prototype.resetSlides = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            var _this = this;
            /** @type {?} */
            var reset = this.animation.build([
                animations.style({ transform: "translateY(" + progress * 120 + "px)" }),
                animations.animate('150ms', animations.style({ transform: "translateY(0px)" }))
            ]);
            /** @type {?} */
            var animation = reset.create(this.viewer.nativeElement);
            animation.play();
            animation.onDone((/**
             * @return {?}
             */
            function () {
                animation.destroy();
                _this.transformSlides(0);
                _this.showControls();
            }));
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.slideDidChange = /**
         * @return {?}
         */
        function () {
            this.activeIndex = this.swiper.nativeElement.swiper.activeIndex;
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.ionSlideNextStart = /**
         * @return {?}
         */
        function () {
            if (this.slidesLoaded) {
                this.updateBackdrop(this.activeIndex + 1);
            }
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.ionSlidePrevStart = /**
         * @return {?}
         */
        function () {
            if (this.slidesLoaded) {
                this.updateBackdrop(this.activeIndex - 1);
            }
        };
        /**
         * @param {?} index
         * @return {?}
         */
        FivGallery.prototype.updateBackdrop = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            this.backdropColor = this.ambient
                ? this.imageService.getAverageRGB(this.images.toArray()[index].thumbnail.nativeElement)
                : '#000000ee';
            this.backdropChange.emit();
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.onSlidesLoad = /**
         * @return {?}
         */
        function () {
            this.slidesLoaded = true;
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.calculateImagePosition = /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var nH = this.initialImage.thumbnail.nativeElement.naturalHeight;
            /** @type {?} */
            var nW = this.initialImage.thumbnail.nativeElement.naturalWidth;
            /** @type {?} */
            var height = Math.min(nH, this.platform.height());
            /** @type {?} */
            var width = Math.min(nW, this.platform.width());
            /** @type {?} */
            var ratio = nW / nH;
            if (ratio * height < width) {
                width = height * ratio;
            }
            else {
                height = width / ratio;
            }
            /** @type {?} */
            var top = this.platform.height() / 2 - height / 2;
            /** @type {?} */
            var left = this.platform.width() / 2 - width / 2;
            /** @type {?} */
            var p = {
                height: height,
                width: width,
                left: left,
                top: top
            };
            return p;
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.fullscreen = /**
         * @return {?}
         */
        function () {
            if (this.inFullscreen) {
                this.closeFullscreen();
            }
            else {
                this.openFullscreen();
            }
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.openFullscreen = /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var elem = document.documentElement;
            if (elem.requestFullscreen) {
                elem.requestFullscreen();
            }
            else if (elem['mozRequestFullScreen']) {
                /* Firefox */
                elem['mozRequestFullScreen']();
            }
            else if (elem['webkitRequestFullscreen']) {
                /* Chrome, Safari and Opera */
                elem['webkitRequestFullscreen']();
            }
            else if (elem['msRequestFullscreen']) {
                /* IE/Edge */
                elem['msRequestFullscreen']();
            }
            this.inFullscreen = true;
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.closeFullscreen = /**
         * @return {?}
         */
        function () {
            this.inFullscreen = false;
            if (this.document.exitFullscreen) {
                this.document.exitFullscreen();
            }
            else if (this.document.mozCancelFullScreen) {
                /* Firefox */
                this.document.mozCancelFullScreen();
            }
            else if (this.document.webkitExitFullscreen) {
                /* Chrome, Safari and Opera */
                this.document.webkitExitFullscreen();
            }
            else if (this.document.msExitFullscreen) {
                /* IE/Edge */
                this.document.msExitFullscreen();
            }
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.zoom = /**
         * @return {?}
         */
        function () {
            if (this.zoomedIn) {
                this.zoomOut();
            }
            else {
                this.zoomIn();
            }
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.zoomIn = /**
         * @return {?}
         */
        function () {
            this.swiper.nativeElement.swiper.zoom.in();
            this.zoomedIn = true;
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.zoomOut = /**
         * @return {?}
         */
        function () {
            this.swiper.nativeElement.swiper.zoom.out();
            this.zoomedIn = false;
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.handleSingleTap = /**
         * @return {?}
         */
        function () {
            this.controlsVisible = !this.controlsVisible;
            this.change.detectChanges();
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.hideControls = /**
         * @return {?}
         */
        function () {
            this.controlsVisible = false;
            this.change.detectChanges();
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.showControls = /**
         * @return {?}
         */
        function () {
            this.controlsVisible = true;
            this.change.detectChanges();
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivGallery.prototype.keyEvent = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (this.slidesLoaded && !this.morphing) {
                this.handleKeyboardEvents(event);
            }
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivGallery.prototype.handleKeyboardEvents = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.key === 'ArrowRight') {
                this.next();
                return;
            }
            if (event.key === 'ArrowLeft') {
                this.prev();
                return;
            }
            if (event.key === 'ArrowDown' || event.key === 'Escape') {
                this.close();
                return;
            }
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.next = /**
         * @return {?}
         */
        function () {
            if (this.slides && this.slidesLoaded) {
                this.slides.slideNext();
            }
        };
        /**
         * @return {?}
         */
        FivGallery.prototype.prev = /**
         * @return {?}
         */
        function () {
            if (this.slides && this.slidesLoaded) {
                this.slides.slidePrev();
            }
        };
        FivGallery.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-gallery',
                        template: "<ng-content></ng-content>\n<fiv-overlay #overlay>\n  <div [style.background]=\"backdropColor\" [@fade] class=\"backdrop\" *ngIf=\"overlay.open && backdrop\"></div>\n\n  <div [style.visibility]=\"!morphing ? 'visible' : 'hidden'\">\n    <div [@slideDown] *ngIf=\"controlsVisible && topToolbar\" class=\"gallery-toolbar header\" color=\"transparent\">\n      <ng-container [ngTemplateOutlet]=\"topToolbar\">\n      </ng-container>\n    </div>\n\n    <ng-container *fivIf=\"['desktop']\">\n      <ion-fab [@scale] *ngIf=\"controlsVisible && images?.length > 0 && pagerVisible\" vertical=\"center\"\n        horizontal=\"start\" slot=\"fixed\">\n        <ion-fab-button color=\"light\" (click)=\"prev()\" [disabled]=\"activeIndex === 0\">\n          <ion-icon name=\"arrow-back\"></ion-icon>\n        </ion-fab-button>\n      </ion-fab>\n    </ng-container>\n\n    <div #viewer class=\"viewer\" fivPull [maxPullHeight]=\"160\" [minPullHeight]=\"120\" (fivPull)=\"transformSlides($event)\"\n      (fivRefresh)=\"close()\" (fivCancel)=\"resetSlides($event)\" [enableScroll]=\"true\">\n      <ion-slides #slider *ngIf=\"overlay.open\" (ionSlideDidChange)=\"slideDidChange()\"\n        (ionSlideNextStart)=\"ionSlideNextStart()\" (ionSlidePrevStart)=\"ionSlidePrevStart()\"\n        (ionSlidesDidLoad)=\"onSlidesLoad()\" [options]=\"{ zoom: true, initialSlide: initialImage?.index}\">\n        <ion-slide *ngFor=\"let image of images; let i = index\">\n          <div class=\"swiper-zoom-container\">\n            <img #slideImage [ngClass]=\"{'instant': activeIndex !== i}\" [src]=\"image.src\">\n          </div>\n        </ion-slide>\n      </ion-slides>\n    </div>\n\n    <ng-container *fivIf=\"['desktop']\">\n      <ion-fab [@scale] *ngIf=\"controlsVisible && pagerVisible\" vertical=\"center\" horizontal=\"end\" slot=\"fixed\">\n        <ion-fab-button color=\"light\" (click)=\"next()\" [disabled]=\"activeIndex === images.length - 1\">\n          <ion-icon name=\"arrow-forward\"></ion-icon>\n        </ion-fab-button>\n      </ion-fab>\n    </ng-container>\n\n    <div [@slideUp] *ngIf=\"controlsVisible && bottomToolbar\" class=\"gallery-toolbar footer\" color=\"transparent\">\n      <ng-container [ngTemplateOutlet]=\"bottomToolbar\">\n      </ng-container>\n    </div>\n  </div>\n\n\n\n\n</fiv-overlay>\n<fiv-overlay #morphOverlay>\n  <img #morph class=\"morph\" *ngIf=\"initialImage\" [src]=\"initialImage.src\">\n</fiv-overlay>",
                        animations: [
                            animations.trigger('scale', [
                                animations.transition('void => *', [
                                    animations.style({ opacity: 0, transform: 'scale(0)' }),
                                    animations.animate('125ms', animations.style({ opacity: 1, transform: 'scale(1)' }))
                                ]),
                                animations.transition('* => void', [
                                    animations.style({ opacity: 1, transform: 'scale(1)' }),
                                    animations.animate('125ms', animations.style({ opacity: 0, transform: 'scale(0)' }))
                                ])
                            ]),
                            animations.trigger('slideUp', [
                                animations.transition('void => *', [
                                    animations.style({ opacity: 0, transform: 'translateY(100%)' }),
                                    animations.animate('75ms', animations.style({ opacity: 1, transform: 'translateY(0%)' }))
                                ]),
                                animations.transition('* => void', [
                                    animations.style({ opacity: 1, transform: 'translateY(0%)' }),
                                    animations.animate('75ms', animations.style({ opacity: 0, transform: 'translateY(100%)' }))
                                ])
                            ]),
                            animations.trigger('slideDown', [
                                animations.transition('* => void', [
                                    animations.style({ opacity: 0, transform: 'translateY(0%)' }),
                                    animations.animate('75ms', animations.style({ opacity: 1, transform: 'translateY(-100%)' }))
                                ]),
                                animations.transition('void => *', [
                                    animations.style({ opacity: 1, transform: 'translateY(-100%)' }),
                                    animations.animate('75ms', animations.style({ opacity: 0, transform: 'translateY(0%)' }))
                                ])
                            ]),
                            animations.trigger('fade', [
                                animations.transition('* => void', animations.useAnimation(fade, {
                                    params: {
                                        fromOpacity: 1,
                                        toOpacity: 0,
                                        time: '240ms'
                                    }
                                })),
                                animations.transition('void => *', animations.useAnimation(fade, {
                                    params: {
                                        fromOpacity: 0,
                                        toOpacity: 1,
                                        time: '240ms'
                                    }
                                }))
                            ])
                        ],
                        styles: [".viewer{width:100vw;height:100vh}.viewer ion-slides{height:100%}.viewer img{height:auto;max-height:100%;width:auto;max-width:100%}.viewer img.instant{transition-duration:0s!important}.gallery-toolbar{width:100%;--fiv-gallery-toolbar-color:#fff;position:absolute;color:var(--fiv-gallery-toolbar-color)}.gallery-toolbar.header{top:env(safe-area-inset-top)}.gallery-toolbar.footer{bottom:env(safe-area-inset-bottom)}.morph{position:absolute;-o-object-position:center;object-position:center;-o-object-fit:cover;object-fit:cover;display:block}.backdrop{height:100vh;width:100vw;position:absolute;transition:background-color .2s}"]
                    }] }
        ];
        /** @nocollapse */
        FivGallery.ctorParameters = function () { return [
            { type: angular.DomController },
            { type: core.Renderer2 },
            { type: animations.AnimationBuilder },
            { type: core.ChangeDetectorRef },
            { type: angular.Platform },
            { type: ImageService },
            { type: undefined, decorators: [{ type: core.Inject, args: [common.DOCUMENT,] }] }
        ]; };
        FivGallery.propDecorators = {
            overlay: [{ type: core.ViewChild, args: ['overlay', { static: false },] }],
            morphOverlay: [{ type: core.ViewChild, args: ['morphOverlay', { static: false },] }],
            viewer: [{ type: core.ViewChild, args: ['viewer', { static: false },] }],
            morphImage: [{ type: core.ViewChild, args: ['morph', { static: false },] }],
            swiper: [{ type: core.ViewChild, args: ['slider', { static: false, read: core.ElementRef },] }],
            slides: [{ type: core.ViewChild, args: ['slider', { static: false },] }],
            slideImages: [{ type: core.ViewChildren, args: ['slideImage',] }],
            images: [{ type: core.ContentChildren, args: [core.forwardRef((/**
                         * @return {?}
                         */
                        function () { return FivGalleryImage; })),
                        { descendants: true },] }],
            toolbars: [{ type: core.ContentChildren, args: [FivGalleryToolbar,] }],
            pagerVisible: [{ type: core.Input }],
            ambient: [{ type: core.Input }],
            willOpen: [{ type: core.Output }],
            willClose: [{ type: core.Output }],
            didOpen: [{ type: core.Output }],
            didClose: [{ type: core.Output }],
            backdropChange: [{ type: core.Output }],
            keyEvent: [{ type: core.HostListener, args: ['window:keyup', ['$event'],] }]
        };
        return FivGallery;
    }());
    if (false) {
        /** @type {?} */
        FivGallery.prototype.overlay;
        /** @type {?} */
        FivGallery.prototype.morphOverlay;
        /** @type {?} */
        FivGallery.prototype.viewer;
        /** @type {?} */
        FivGallery.prototype.morphImage;
        /** @type {?} */
        FivGallery.prototype.swiper;
        /** @type {?} */
        FivGallery.prototype.slides;
        /** @type {?} */
        FivGallery.prototype.slideImages;
        /** @type {?} */
        FivGallery.prototype.images;
        /** @type {?} */
        FivGallery.prototype.toolbars;
        /** @type {?} */
        FivGallery.prototype.topToolbar;
        /** @type {?} */
        FivGallery.prototype.bottomToolbar;
        /** @type {?} */
        FivGallery.prototype.initialImage;
        /** @type {?} */
        FivGallery.prototype.activeIndex;
        /** @type {?} */
        FivGallery.prototype.inFullscreen;
        /** @type {?} */
        FivGallery.prototype.zoomedIn;
        /** @type {?} */
        FivGallery.prototype.controlsVisible;
        /** @type {?} */
        FivGallery.prototype.slidesLoaded;
        /** @type {?} */
        FivGallery.prototype.morphing;
        /** @type {?} */
        FivGallery.prototype.backdrop;
        /** @type {?} */
        FivGallery.prototype.backdropColor;
        /** @type {?} */
        FivGallery.prototype.pagerVisible;
        /** @type {?} */
        FivGallery.prototype.ambient;
        /** @type {?} */
        FivGallery.prototype.willOpen;
        /** @type {?} */
        FivGallery.prototype.willClose;
        /** @type {?} */
        FivGallery.prototype.didOpen;
        /** @type {?} */
        FivGallery.prototype.didClose;
        /** @type {?} */
        FivGallery.prototype.backdropChange;
        /** @type {?} */
        FivGallery.prototype.$onDestroy;
        /**
         * @type {?}
         * @private
         */
        FivGallery.prototype.domCtrl;
        /**
         * @type {?}
         * @private
         */
        FivGallery.prototype.renderer;
        /**
         * @type {?}
         * @private
         */
        FivGallery.prototype.animation;
        /**
         * @type {?}
         * @private
         */
        FivGallery.prototype.change;
        /**
         * @type {?}
         * @private
         */
        FivGallery.prototype.platform;
        /**
         * @type {?}
         * @private
         */
        FivGallery.prototype.imageService;
        /**
         * @type {?}
         * @private
         */
        FivGallery.prototype.document;
    }
    var Position = /** @class */ (function () {
        function Position() {
        }
        return Position;
    }());
    if (false) {
        /** @type {?} */
        Position.prototype.top;
        /** @type {?} */
        Position.prototype.left;
        /** @type {?} */
        Position.prototype.height;
        /** @type {?} */
        Position.prototype.width;
        /** @type {?} */
        Position.prototype.translate;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/if-platform/if-platform.directive.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivIfPlatform = /** @class */ (function () {
        function FivIfPlatform(platform, viewContainer, templateRef) {
            this.platform = platform;
            this.viewContainer = viewContainer;
            this.templateRef = templateRef;
        }
        Object.defineProperty(FivIfPlatform.prototype, "fivIf", {
            set: /**
             * @param {?} platforms
             * @return {?}
             */
            function (platforms) {
                var _this = this;
                /** @type {?} */
                var show = true;
                platforms.forEach((/**
                 * @param {?} p
                 * @return {?}
                 */
                function (p) {
                    if (!_this.platform.is(p)) {
                        show = false;
                    }
                }));
                if (show) {
                    this.viewContainer.createEmbeddedView(this.templateRef);
                }
                else {
                    this.viewContainer.clear();
                }
            },
            enumerable: true,
            configurable: true
        });
        FivIfPlatform.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivIf]'
                    },] }
        ];
        /** @nocollapse */
        FivIfPlatform.ctorParameters = function () { return [
            { type: angular.Platform },
            { type: core.ViewContainerRef },
            { type: core.TemplateRef }
        ]; };
        FivIfPlatform.propDecorators = {
            fivIf: [{ type: core.Input }]
        };
        return FivIfPlatform;
    }());
    if (false) {
        /**
         * @type {?}
         * @private
         */
        FivIfPlatform.prototype.platform;
        /**
         * @type {?}
         * @private
         */
        FivIfPlatform.prototype.viewContainer;
        /**
         * @type {?}
         * @private
         */
        FivIfPlatform.prototype.templateRef;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/if-platform/if-platform.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivIfModule = /** @class */ (function () {
        function FivIfModule() {
        }
        FivIfModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivIfPlatform],
                        imports: [common.CommonModule],
                        exports: [FivIfPlatform]
                    },] }
        ];
        return FivIfModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/gallery/gallery-toolbar-content/gallery-toolbar-content.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivGalleryToolbarContent = /** @class */ (function () {
        function FivGalleryToolbarContent(gallery) {
            this.gallery = gallery;
        }
        /**
         * @return {?}
         */
        FivGalleryToolbarContent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        FivGalleryToolbarContent.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-gallery-toolbar-content',
                        template: "<ion-toolbar color=\"transparent\">\n  <ion-buttons slot=\"start\">\n    <ion-button (click)=\"gallery.close()\">\n      <ion-icon slot=\"icon-only\" name=\"close\"></ion-icon>\n    </ion-button>\n  </ion-buttons>\n  <ion-buttons slot=\"end\">\n    <ion-button (click)=\"gallery.fullscreen()\">\n      <fiv-icon slot=\"icon-only\" [name]=\"gallery.inFullscreen ? 'contract': 'expand'\"></fiv-icon>\n    </ion-button>\n    <ion-button (click)=\"gallery.zoom()\">\n      <fiv-icon slot=\"icon-only\" [name]=\"gallery.zoomedIn ? 'remove': 'add'\"></fiv-icon>\n    </ion-button>\n  </ion-buttons>\n</ion-toolbar>\n",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        FivGalleryToolbarContent.ctorParameters = function () { return [
            { type: FivGallery, decorators: [{ type: core.Host }] }
        ]; };
        return FivGalleryToolbarContent;
    }());
    if (false) {
        /** @type {?} */
        FivGalleryToolbarContent.prototype.gallery;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/gallery/gallery.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivGalleryModule = /** @class */ (function () {
        function FivGalleryModule() {
        }
        FivGalleryModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [
                            FivGallery,
                            FivGalleryImage,
                            FivGalleryToolbar,
                            FivGalleryToolbarContent
                        ],
                        imports: [
                            common.CommonModule,
                            angular.IonicModule,
                            FivIconModule,
                            FivIfModule,
                            FivPullModule,
                            FivOverlayModule
                        ],
                        exports: [
                            FivGallery,
                            FivGalleryImage,
                            FivGalleryToolbar,
                            FivGalleryToolbarContent
                        ]
                    },] }
        ];
        return FivGalleryModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/refresher/refresher-content/refresher-content.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivRefresherContent = /** @class */ (function () {
        function FivRefresherContent(element, renderer, builder) {
            this.element = element;
            this.renderer = renderer;
            this.builder = builder;
            this._progress = 0;
            this.fivComplete = new core.EventEmitter();
            this.fivRefresh = new core.EventEmitter();
            this.fivHidden = new core.EventEmitter();
            this.fivShowed = new core.EventEmitter();
            this.fivProgress = new core.EventEmitter();
            this.visible = false;
        }
        Object.defineProperty(FivRefresherContent.prototype, "progress", {
            get: /**
             * @return {?}
             */
            function () {
                return this._progress;
            },
            set: /**
             * @param {?} progress
             * @return {?}
             */
            function (progress) {
                this._progress = progress;
                if (progress < 1) {
                    this.renderer.setStyle(this.spinnerRef.nativeElement, 'transform', "rotateZ(" + 360 * progress + "deg)");
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivRefresherContent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivRefresherContent.prototype.load = /**
         * @return {?}
         */
        function () {
            this.visible = true;
            this.spinner.spin();
            this.fivRefresh.emit(this);
        };
        /**
         * @return {?}
         */
        FivRefresherContent.prototype.unload = /**
         * @return {?}
         */
        function () {
            this.spinner.stop();
        };
        /**
         * @return {?}
         */
        FivRefresherContent.prototype.show = /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (!this.visible) {
                this.visible = true;
                /** @type {?} */
                var animation = this.builder.build([
                    animations.style({ transform: 'scale(0)' }),
                    animations.animate('0ms ease-out', animations.style({ transform: 'scale(1)' }))
                ]);
                /** @type {?} */
                var player_1 = animation.create(this.background.nativeElement);
                player_1.play();
                player_1.onDone((/**
                 * @return {?}
                 */
                function () {
                    _this.fivShowed.emit(_this);
                    player_1.destroy();
                }));
            }
        };
        /**
         * @return {?}
         */
        FivRefresherContent.prototype.hide = /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (this.visible) {
                /** @type {?} */
                var transform = "scale(1)";
                /** @type {?} */
                var animation = this.builder.build([
                    animations.style({ transform: transform }),
                    animations.animate('175ms ease-in', animations.style({ transform: "scale(0)" }))
                ]);
                /** @type {?} */
                var player_2 = animation.create(this.background.nativeElement);
                player_2.play();
                player_2.onDone((/**
                 * @return {?}
                 */
                function () {
                    _this.fivHidden.emit(_this);
                    _this.visible = false;
                    player_2.destroy();
                }));
            }
        };
        /**
         * @return {?}
         */
        FivRefresherContent.prototype.complete = /**
         * @return {?}
         */
        function () {
            this.unload();
            this.fivComplete.emit(this);
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivRefresherContent.prototype.setValue = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            this.spinner.setValue(progress);
        };
        /**
         * @return {?}
         */
        FivRefresherContent.prototype.reset = /**
         * @return {?}
         */
        function () {
            this.spinner.setMode('indeterminate');
        };
        FivRefresherContent.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-refresher-content',
                        template: "<div #background class=\"spinner-background\" [ngClass]=\"{'hidden': progress === 0}\">\n    <fiv-spinner #spinner (fivProgress)=\"fivProgress.emit($event)\" (fivComplete)=\"complete()\" [circleRadius]=\"8\"\n        [diameter]=\"20\" [strokeWidth]=\"2\"></fiv-spinner>\n</div>",
                        styles: [":host{--fiv-spinner-size:40px;position:absolute;width:var(--fiv-spinner-size);height:var(--fiv-spinner-size);top:calc(-1 * var(--fiv-spinner-size));left:calc(50% - var(--fiv-spinner-size)/ 2);z-index:9}.spinner-background:not(.hidden){box-shadow:0 4px 6px 0 rgba(0,0,0,.14),0 4px 5px rgba(0,0,0,.1)}.spinner-background{position:absolute;width:40px;height:40px;background:var(--fiv-spin-background);border-radius:50%}.spinner-background fiv-spinner{position:absolute;top:10px;left:10px}"]
                    }] }
        ];
        /** @nocollapse */
        FivRefresherContent.ctorParameters = function () { return [
            { type: core.ElementRef },
            { type: core.Renderer2 },
            { type: animations.AnimationBuilder }
        ]; };
        FivRefresherContent.propDecorators = {
            progress: [{ type: core.Input }],
            fivComplete: [{ type: core.Output }],
            fivRefresh: [{ type: core.Output }],
            fivHidden: [{ type: core.Output }],
            fivShowed: [{ type: core.Output }],
            fivProgress: [{ type: core.Output }],
            spinner: [{ type: core.ViewChild, args: ['spinner', { static: false },] }],
            spinnerRef: [{ type: core.ViewChild, args: ['spinner', { static: true, read: core.ElementRef },] }],
            background: [{ type: core.ViewChild, args: ['background', { static: false },] }]
        };
        return FivRefresherContent;
    }());
    if (false) {
        /** @type {?} */
        FivRefresherContent.prototype._progress;
        /** @type {?} */
        FivRefresherContent.prototype.fivComplete;
        /** @type {?} */
        FivRefresherContent.prototype.fivRefresh;
        /** @type {?} */
        FivRefresherContent.prototype.fivHidden;
        /** @type {?} */
        FivRefresherContent.prototype.fivShowed;
        /** @type {?} */
        FivRefresherContent.prototype.fivProgress;
        /** @type {?} */
        FivRefresherContent.prototype.spinner;
        /** @type {?} */
        FivRefresherContent.prototype.spinnerRef;
        /** @type {?} */
        FivRefresherContent.prototype.background;
        /** @type {?} */
        FivRefresherContent.prototype.visible;
        /** @type {?} */
        FivRefresherContent.prototype.element;
        /**
         * @type {?}
         * @private
         */
        FivRefresherContent.prototype.renderer;
        /** @type {?} */
        FivRefresherContent.prototype.builder;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/refresher/refresher.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivRefresher = /** @class */ (function () {
        function FivRefresher(builder, refresher, renderer, platform) {
            this.builder = builder;
            this.refresher = refresher;
            this.renderer = renderer;
            this.platform = platform;
            this.hintText = 'new posts';
            this.maxPullHeight = 168;
            this.minPullHeight = 112;
            this.fivProgressChanged = new core.EventEmitter();
            this.fivRefresh = new core.EventEmitter();
            this.hintVisible = false;
            this.currentProgress = 0;
            this.refreshing = false;
            this.$onDestroy = new rxjs.Subject();
        }
        /**
         * @return {?}
         */
        FivRefresher.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.attachPullDirective()];
                        case 1:
                            _a.sent();
                            return [2 /*return*/];
                    }
                });
            });
        };
        /**
         * @return {?}
         */
        FivRefresher.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            this.$onDestroy.next();
        };
        /**
         * @private
         * @return {?}
         */
        FivRefresher.prototype.attachPullDirective = /**
         * @private
         * @return {?}
         */
        function () {
            return __awaiter(this, void 0, void 0, function () {
                var content, scroll, pull;
                var _this = this;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            content = this.refresher.nativeElement.closest('ion-content');
                            if (!content) {
                                throw new Error('The fiv-refresher component needs to be inside of an ion-content.');
                            }
                            content.scrollEvents = true;
                            return [4 /*yield*/, content.getScrollElement()];
                        case 1:
                            scroll = _a.sent();
                            pull = new FivPull(new core.ElementRef(content), this.platform, content);
                            pull.init();
                            pull.fivPull
                                .pipe(operators.filter((/**
                             * @return {?}
                             */
                            function () { return !_this.refreshing && !_this.hintVisible; })), operators.tap((/**
                             * @param {?} progress
                             * @return {?}
                             */
                            function (progress) { return _this.fivPull(progress); })), operators.takeUntil(this.$onDestroy))
                                .subscribe();
                            pull.fivRefresh
                                .pipe(operators.tap((/**
                             * @return {?}
                             */
                            function () { return _this.refresh(); })), operators.takeUntil(this.$onDestroy))
                                .subscribe();
                            pull.fivCancel
                                .pipe(operators.tap((/**
                             * @return {?}
                             */
                            function () { return _this.moveBack(); })), operators.takeUntil(this.$onDestroy))
                                .subscribe();
                            this.spinner.fivComplete.pipe(operators.takeUntil(this.$onDestroy)).subscribe();
                            this.fivRefresh
                                .pipe(operators.tap((/**
                             * @return {?}
                             */
                            function () { return scroll.scrollTo({ top: 0, behavior: 'smooth' }); })), operators.takeUntil(this.$onDestroy))
                                .subscribe();
                            return [2 /*return*/];
                    }
                });
            });
        };
        /**
         * @return {?}
         */
        FivRefresher.prototype.refresh = /**
         * @return {?}
         */
        function () {
            if (this.refreshing) {
                return;
            }
            this.refreshing = true;
            this.spinner.load();
            this.setPullAnimationProgress(112 / 168);
            this.fivRefresh.emit(this);
        };
        /**
         * @return {?}
         */
        FivRefresher.prototype.complete = /**
         * @return {?}
         */
        function () {
            if (!this.refreshing) {
                return;
            }
            this.spinner.complete();
        };
        /**
         * @return {?}
         */
        FivRefresher.prototype.onDone = /**
         * @return {?}
         */
        function () {
            this.spinner.hide();
        };
        /**
         * @return {?}
         */
        FivRefresher.prototype.onHidden = /**
         * @return {?}
         */
        function () {
            this.refreshing = false;
            this.setPullAnimationProgress(0);
        };
        /**
         * @return {?}
         */
        FivRefresher.prototype.showHint = /**
         * @return {?}
         */
        function () {
            this.hintVisible = true;
        };
        /**
         * @return {?}
         */
        FivRefresher.prototype.onHintClicked = /**
         * @return {?}
         */
        function () {
            this.hintVisible = false;
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivRefresher.prototype.postHint = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (!event.fromState && event.toState === 'void') {
                this.refresh();
            }
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivRefresher.prototype.setPullAnimationProgress = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            this.currentProgress = progress;
            if (progress < 1) {
                this.renderer.setStyle(this.spinner.element.nativeElement, 'transform', "translateY(" + this.minPullHeight * progress + "px)");
            }
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivRefresher.prototype.changeAnimationToProgress = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            var _this = this;
            return new Promise((/**
             * @param {?} resolve
             * @return {?}
             */
            function (resolve) {
                /** @type {?} */
                var animation = _this.builder.build([
                    animations.style({
                        transform: "translateY(" + 100 *
                            _this.currentProgress + "px) rotateZ(" + 360 * _this.currentProgress + "deg)"
                    }),
                    animations.animate('85ms ease-in', animations.style({
                        transform: "translateY(" + 100 * progress + "px) rotateZ(" + 360 *
                            progress + "deg)"
                    }))
                ]);
                /** @type {?} */
                var player = animation.create(_this.spinner.element.nativeElement);
                player.play();
                player.onDone((/**
                 * @return {?}
                 */
                function () {
                    _this.setPullAnimationProgress(progress);
                    player.destroy();
                    resolve();
                }));
            }));
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivRefresher.prototype.fivPull = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            this.setPullAnimationProgress(progress);
            this.spinner.show();
            /** @type {?} */
            var value = Math.max(0, Math.min(100, (progress * 100 * this.maxPullHeight) / this.minPullHeight));
            this.spinner.setValue(value * 0.84);
        };
        /**
         * @return {?}
         */
        FivRefresher.prototype.moveBack = /**
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var animation = this.builder.build([
                animations.style({
                    transform: "translateY(" + this.currentProgress *
                        this.minPullHeight + "px) rotateZ(" + 360 * this.currentProgress + "deg)"
                }),
                animations.animate('205ms ease-in', animations.style({ transform: 'translateY(0) rotateZ(0)' }))
            ]);
            /** @type {?} */
            var player = animation.create(this.spinner.element.nativeElement);
            ngxRxjsAnimations.tween(ngxRxjsAnimations.easeOutSine, 145)
                .pipe(ngxRxjsAnimations.reverse(), operators.map((/**
             * @param {?} n
             * @return {?}
             */
            function (n) {
                return Math.max(0, Math.min(100, (_this.currentProgress * n * 100 * _this.maxPullHeight) /
                    _this.minPullHeight));
            })), operators.tap((/**
             * @param {?} value
             * @return {?}
             */
            function (value) { return _this.spinner.setValue(value); })))
                .subscribe();
            player.play();
            player.onDone((/**
             * @return {?}
             */
            function () {
                _this.setPullAnimationProgress(0);
                _this.spinner.visible = false;
                player.destroy();
            }));
        };
        /**
         * @param {?} progress
         * @return {?}
         */
        FivRefresher.prototype.onSpinnerProgress = /**
         * @param {?} progress
         * @return {?}
         */
        function (progress) {
            this.fivProgressChanged.emit(progress);
            this.renderer
                // tslint:disable-next-line:max-line-length
                .setStyle(this.spinner.element.nativeElement, 'transform', "translateY(" + this.maxPullHeight *
                this.currentProgress + "px) rotateZ(" + (360 * progress) / 200 + "deg)");
        };
        FivRefresher.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-refresher',
                        template: "<fiv-refresher-content [progress]=\"currentProgress\" (fivProgress)=\"onSpinnerProgress($event)\" (fivComplete)=\"onDone()\"\n  (fivHidden)=\"onHidden()\" #spinner>\n</fiv-refresher-content>\n\n<ion-chip class=\"gg-hint-wrapper\" *ngIf=\"hintVisible\" [@hintAnim] (@hintAnim.done)=\"postHint($event)\"\n  (click)=\"onHintClicked()\" #hint>\n  <ion-icon class=\"icon\" name=\"arrow-up\"></ion-icon>\n  <ion-label [ngClass]=\"{'hidden': !hintVisible}\" class=\"text\">{{hintText}}</ion-label>\n</ion-chip>",
                        animations: [
                            animations.trigger('hintAnim', [
                                animations.transition('void => *', [
                                    animations.style({ transform: 'translateY(0px) translateX(-50%)' }),
                                    animations.animate('150ms ease-in', animations.style({
                                        opacity: 1,
                                        transform: 'translateY(72px) translateX(-50%)'
                                    }))
                                ]),
                                animations.transition('* => void', [
                                    animations.style({
                                        width: '*',
                                        opacity: 1,
                                        transform: 'translateY(72px) translateX(-50%)'
                                    }),
                                    animations.animate('150ms 125ms ease-out', animations.style({
                                        width: '40px',
                                        transform: 'translateY(72px) translateX(-50%)'
                                    }))
                                ])
                            ])
                        ],
                        styles: [":host{--fiv-spin-color:var(--ion-color-primary);--fiv-hint-color:var(--fiv-spin-color, var(--ion-color-primary));--fiv-spin-background:var(--ion-color-light)}.icon{height:20px;width:20px;background:0 0;color:var(--fiv-hint-color)}.text{font-size:1em;color:var(--fiv-hint-color)}.text.hidden{opacity:0}.gg-hint-wrapper{position:absolute;z-index:8;opacity:1;left:50%;top:-40px;transform:translateY(72px) translateX(-50%);height:40px;padding-left:8px;padding-right:8px;background:var(--fiv-spin-background);border-radius:40px;box-shadow:0 4px 6px 0 rgba(0,0,0,.14),0 4px 5px rgba(0,0,0,.1);margin:0}"]
                    }] }
        ];
        /** @nocollapse */
        FivRefresher.ctorParameters = function () { return [
            { type: animations.AnimationBuilder },
            { type: core.ElementRef },
            { type: core.Renderer2 },
            { type: angular.Platform }
        ]; };
        FivRefresher.propDecorators = {
            hintText: [{ type: core.Input }],
            maxPullHeight: [{ type: core.Input }],
            minPullHeight: [{ type: core.Input }],
            fivProgressChanged: [{ type: core.Output }],
            fivRefresh: [{ type: core.Output }],
            spinner: [{ type: core.ViewChild, args: ['spinner', { static: false },] }]
        };
        return FivRefresher;
    }());
    if (false) {
        /** @type {?} */
        FivRefresher.prototype.hintText;
        /** @type {?} */
        FivRefresher.prototype.maxPullHeight;
        /** @type {?} */
        FivRefresher.prototype.minPullHeight;
        /** @type {?} */
        FivRefresher.prototype.fivProgressChanged;
        /** @type {?} */
        FivRefresher.prototype.fivRefresh;
        /** @type {?} */
        FivRefresher.prototype.spinner;
        /** @type {?} */
        FivRefresher.prototype.hintVisible;
        /** @type {?} */
        FivRefresher.prototype.currentProgress;
        /** @type {?} */
        FivRefresher.prototype.refreshing;
        /**
         * @type {?}
         * @private
         */
        FivRefresher.prototype.$onDestroy;
        /**
         * @type {?}
         * @private
         */
        FivRefresher.prototype.builder;
        /**
         * @type {?}
         * @private
         */
        FivRefresher.prototype.refresher;
        /**
         * @type {?}
         * @private
         */
        FivRefresher.prototype.renderer;
        /**
         * @type {?}
         * @private
         */
        FivRefresher.prototype.platform;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/refresher/refresher.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivRefresherModule = /** @class */ (function () {
        function FivRefresherModule() {
        }
        FivRefresherModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivRefresher, FivRefresherContent],
                        imports: [common.CommonModule, FivSpinnerModule, FivPullModule, angular.IonicModule],
                        exports: [FivRefresher, FivRefresherContent]
                    },] }
        ];
        return FivRefresherModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/network-status/network-status.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivNetworkStatus = /** @class */ (function () {
        function FivNetworkStatus() {
            this.visible = true;
            this.status = 'online';
            this.onClick = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivNetworkStatus.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivNetworkStatus.prototype.show = /**
         * @return {?}
         */
        function () {
            this.visible = true;
        };
        /**
         * @return {?}
         */
        FivNetworkStatus.prototype.hide = /**
         * @return {?}
         */
        function () {
            this.visible = false;
        };
        /**
         * @param {?} status
         * @return {?}
         */
        FivNetworkStatus.prototype.setStatus = /**
         * @param {?} status
         * @return {?}
         */
        function (status) {
            this.status = status;
        };
        /**
         * @return {?}
         */
        FivNetworkStatus.prototype.FivNetworkStatusClicked = /**
         * @return {?}
         */
        function () {
            this.onClick.emit(this);
        };
        FivNetworkStatus.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-network-status',
                        template: "<ion-chip [@status] (click)=\"FivNetworkStatusClicked()\" *ngIf=\"visible\">\n  <fiv-icon [badge]=\"-1\" [fivCenter] [off]=\"status === 'offline'\" name=\"cloud\"></fiv-icon>\n</ion-chip>",
                        animations: [
                            animations.trigger('status', [
                                animations.transition('void => *', [
                                    animations.style({ opacity: 0 }),
                                    animations.animate('200ms ease-out', animations.style({ opacity: 1 }))
                                ]),
                                animations.transition('* => void', [
                                    animations.style({ opacity: 1 }),
                                    animations.animate('550ms 200ms ease-in', animations.style({ opacity: 0 }))
                                ])
                            ])
                        ],
                        styles: [":host{position:absolute;top:66px;right:8px}ion-chip{width:56px}fiv-icon{--fiv-icon-color:var(--ion-color-dark)}"]
                    }] }
        ];
        /** @nocollapse */
        FivNetworkStatus.ctorParameters = function () { return []; };
        return FivNetworkStatus;
    }());
    if (false) {
        /** @type {?} */
        FivNetworkStatus.prototype.visible;
        /** @type {?} */
        FivNetworkStatus.prototype.status;
        /** @type {?} */
        FivNetworkStatus.prototype.onClick;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/network-status/network-status.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivNetworkStatusModule = /** @class */ (function () {
        function FivNetworkStatusModule() {
        }
        FivNetworkStatusModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivNetworkStatus],
                        imports: [common.CommonModule, FivCenterModule, FivIconModule, angular.IonicModule],
                        exports: [FivNetworkStatus],
                        entryComponents: [FivNetworkStatus]
                    },] }
        ];
        return FivNetworkStatusModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/password-input/password-input.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR = {
        provide: forms.NG_VALUE_ACCESSOR,
        useExisting: core.forwardRef((/**
         * @return {?}
         */
        function () { return FivPasswordInput; })),
        multi: true
    };
    var FivPasswordInput = /** @class */ (function () {
        function FivPasswordInput() {
            this.clearOnEdit = false;
            this.disabled = false;
            this.hideIcon = 'eye';
            this.position = 'floating';
            this.showIcon = 'eye-off';
            this._passwordValue = '';
        }
        /**
         * @return {?}
         */
        FivPasswordInput.prototype.toggleShowPassword = /**
         * @return {?}
         */
        function () {
            this.show = !this.show;
        };
        Object.defineProperty(FivPasswordInput.prototype, "passwordValue", {
            get: /**
             * @return {?}
             */
            function () {
                return this._passwordValue;
            },
            set: /**
             * @param {?} v
             * @return {?}
             */
            function (v) {
                if (v !== this._passwordValue) {
                    this._passwordValue = v;
                    if (this.onChangeCallback) {
                        this.onChangeCallback(this._passwordValue);
                    }
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @param {?} value
         * @return {?}
         */
        FivPasswordInput.prototype.writeValue = /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (value !== undefined && value !== this._passwordValue) {
                this._passwordValue = value;
            }
        };
        /**
         * @return {?}
         */
        FivPasswordInput.prototype.blur = /**
         * @return {?}
         */
        function () {
            if (this.onTouchedCallback) {
                this.onTouchedCallback();
            }
        };
        /**
         * @param {?} fn
         * @return {?}
         */
        FivPasswordInput.prototype.registerOnChange = /**
         * @param {?} fn
         * @return {?}
         */
        function (fn) {
            this.onChangeCallback = fn;
        };
        /**
         * @param {?} fn
         * @return {?}
         */
        FivPasswordInput.prototype.registerOnTouched = /**
         * @param {?} fn
         * @return {?}
         */
        function (fn) {
            this.onTouchedCallback = fn;
        };
        FivPasswordInput.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-password-input',
                        template: "<ion-item [color]=\"color\" [disabled]=\"disabled\" [lines]=\"lines\">\n  <ion-label *ngIf=\"placeholder\" [position]=\"position\">{{ placeholder }}</ion-label>\n  <ion-input [type]=\"show ? 'text' : 'password'\" [(ngModel)]=\"passwordValue\" [clearOnEdit]=\"clearOnEdit\"\n    (ionBlur)=\"blur()\"></ion-input>\n  <ion-icon slot=\"end\" [name]=\"show ? hideIcon : showIcon\" (click)=\"toggleShowPassword()\"></ion-icon>\n</ion-item>",
                        providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR],
                        styles: [":host(.password-disabled){pointer-events:none}ion-icon{-ms-grid-row-align:center;align-self:center}"]
                    }] }
        ];
        /** @nocollapse */
        FivPasswordInput.ctorParameters = function () { return []; };
        FivPasswordInput.propDecorators = {
            clearOnEdit: [{ type: core.Input }],
            color: [{ type: core.Input }],
            disabled: [{ type: core.HostBinding, args: ['class.password-disabled',] }, { type: core.Input }],
            hideIcon: [{ type: core.Input }],
            lines: [{ type: core.Input }],
            placeholder: [{ type: core.Input }],
            position: [{ type: core.Input }],
            show: [{ type: core.Input }],
            showIcon: [{ type: core.Input }]
        };
        return FivPasswordInput;
    }());
    if (false) {
        /** @type {?} */
        FivPasswordInput.prototype.clearOnEdit;
        /** @type {?} */
        FivPasswordInput.prototype.color;
        /** @type {?} */
        FivPasswordInput.prototype.disabled;
        /** @type {?} */
        FivPasswordInput.prototype.hideIcon;
        /** @type {?} */
        FivPasswordInput.prototype.lines;
        /** @type {?} */
        FivPasswordInput.prototype.placeholder;
        /** @type {?} */
        FivPasswordInput.prototype.position;
        /** @type {?} */
        FivPasswordInput.prototype.show;
        /** @type {?} */
        FivPasswordInput.prototype.showIcon;
        /**
         * @type {?}
         * @private
         */
        FivPasswordInput.prototype._passwordValue;
        /**
         * @type {?}
         * @private
         */
        FivPasswordInput.prototype.onTouchedCallback;
        /**
         * @type {?}
         * @private
         */
        FivPasswordInput.prototype.onChangeCallback;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/password-input/password-input.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivPasswordInputModule = /** @class */ (function () {
        function FivPasswordInputModule() {
        }
        FivPasswordInputModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivPasswordInput],
                        imports: [common.CommonModule, forms.FormsModule, angular.IonicModule],
                        exports: [FivPasswordInput]
                    },] }
        ];
        return FivPasswordInputModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/popover/popover.animations.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var scaleIn = (/**
     * @param {?} target
     * @param {?} easing
     * @param {?} duration
     * @return {?}
     */
    function (target, easing, duration) {
        return ngxRxjsAnimations.tween(easing, duration).pipe(ngxRxjsAnimations.transform(target, ngxRxjsAnimations.scale(0, 1)));
    });
    /** @type {?} */
    var animIn = (/**
     * @param {?} element
     * @param {?} position
     * @param {?} duration
     * @return {?}
     */
    function (element, position, duration) {
        return rxjs.zip(ngxRxjsAnimations.fadeIn(element, ngxRxjsAnimations.easeOutSine, duration), scaleIn(element, ngxRxjsAnimations.easeOutSine, duration).pipe(ngxRxjsAnimations.beforeStyle(element, 'transform-origin', position.vertical + " " + position.horizontal)));
    });
    /** @type {?} */
    var animOut = (/**
     * @param {?} element
     * @param {?} duration
     * @return {?}
     */
    function (element, duration) {
        return ngxRxjsAnimations.fadeOut(element, ngxRxjsAnimations.easeInSine, duration);
    });

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/popover/popover.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivPopover = /** @class */ (function () {
        function FivPopover(platform, content, dom, router) {
            var _this = this;
            this.platform = platform;
            this.content = content;
            this.dom = dom;
            this.router = router;
            this.arrow = false;
            this.arrowWidth = 24;
            this.arrowHeight = this.arrowWidth / 1.6;
            this.arrowPosition = 'auto';
            this.backdrop = true;
            this.overlaysTarget = true;
            this.closeOnNavigation = true;
            this.scrollToTarget = false;
            this.scrollSpeed = 100;
            this.position = 'auto';
            this.classes = [];
            this.viewportOnly = true;
            this.hidden = false;
            this.onDestroy$ = new rxjs.Subject();
            this.onClose$ = new rxjs.Subject();
            this.inDuration = 200;
            this.outDuration = 80;
            this.animationIn = (/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                return animIn(element, _this._position, _this.inDuration);
            });
            this.animationOut = (/**
             * @param {?} element
             * @return {?}
             */
            function (element) {
                return animOut(element, _this.outDuration);
            });
        }
        Object.defineProperty(FivPopover.prototype, "styles", {
            get: /**
             * @return {?}
             */
            function () {
                if (!this._position) {
                    return;
                }
                return this.dom.bypassSecurityTrustStyle(" width: " + (this.width ? this.width + 'px' : 'auto') + "; \n        height: " + (this.height ? this.height + 'px' : 'auto') + "; \n        left: " + this.getContainerLeft() + "px; \n        top: " + this.getContainerTop() + "px;");
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivPopover.prototype, "triangle", {
            get: /**
             * @return {?}
             */
            function () {
                var _this = this;
                /** @type {?} */
                var isHorizontal = ['left', 'right'].some((/**
                 * @param {?} s
                 * @return {?}
                 */
                function (s) { return s === _this.position; }));
                if (isHorizontal) {
                    return this.arrowHeight + ",0 0," + this.arrowWidth / 2 + " " + this.arrowHeight + "," + this.arrowWidth;
                }
                return "0," + this.arrowHeight + " " + this.arrowWidth / 2 + ",0 " + this.arrowWidth + "," + this.arrowHeight;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivPopover.prototype, "svgStyles", {
            get: /**
             * @return {?}
             */
            function () {
                var _this = this;
                if (!this._position) {
                    return;
                }
                /** @type {?} */
                var isHorizontal = ['left', 'right'].some((/**
                 * @param {?} s
                 * @return {?}
                 */
                function (s) { return s === _this.position; }));
                /** @type {?} */
                var rotate = (this.position === 'auto' && this._position.vertical === 'bottom') ||
                    this.position === 'left';
                return this.dom.bypassSecurityTrustStyle("height: " + (isHorizontal ? this.arrowWidth : this.arrowHeight) + "px; \n      width: " + (isHorizontal ? this.arrowHeight : this.arrowWidth) + "px; \n      top: " + this.getArrowTop() + "px; \n      left: " + this.getArrowLeft() + "px;\n      transform: rotateZ(" + (rotate ? 180 : 0) + "deg);");
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivPopover.prototype, "animationStyles", {
            get: /**
             * @return {?}
             */
            function () {
                if (!this._position) {
                    return;
                }
                return this.dom.bypassSecurityTrustStyle("height: " + this.arrowHeight + "px; \n      width: " + this.arrowWidth + "px; \n      top: " + this.getArrowTop() + "px; \n      left: " + this.getArrowLeft() + "px;\n      transform: rotateZ(" + (this._position.vertical === 'bottom' ? 180 : 0) + "deg);");
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivPopover.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.router.events
                .pipe(operators.filter((/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return event instanceof router.NavigationStart; })), operators.filter((/**
             * @return {?}
             */
            function () { return _this.closeOnNavigation && _this.overlay.open; })), operators.tap((/**
             * @return {?}
             */
            function () { return _this.close(); })), operators.takeUntil(this.onDestroy$))
                .subscribe();
        };
        /**
         * @return {?}
         */
        FivPopover.prototype.ngAfterViewInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivPopover.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            this.onDestroy$.next();
        };
        /**
         * @return {?}
         */
        FivPopover.prototype.close = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.animationOut(this.animationContainer)
                .pipe(ngxRxjsAnimations.after((/**
             * @return {?}
             */
            function () {
                _this.overlay.hide();
                _this.onClose$.next();
            })))
                .subscribe();
        };
        /**
         * @private
         * @param {?} target
         * @return {?}
         */
        FivPopover.prototype.getPositionOfTarget = /**
         * @private
         * @param {?} target
         * @return {?}
         */
        function (target) {
            /** @type {?} */
            var rect = target.getBoundingClientRect();
            return this.calculcatePositioning(rect.top, rect.left, rect.bottom, rect.right, rect.height, rect.width);
        };
        /**
         * @param {?} target
         * @return {?}
         */
        FivPopover.prototype.open = /**
         * @param {?} target
         * @return {?}
         */
        function (target) {
            /** @type {?} */
            var element;
            if (target instanceof MouseEvent) {
                element = (/** @type {?} */ (target.target));
            }
            else if (target instanceof core.ElementRef) {
                element = (/** @type {?} */ (target.nativeElement));
            }
            else {
                return;
            }
            this.openTarget(element);
        };
        /**
         * @param {?} target
         * @return {?}
         */
        FivPopover.prototype.openTarget = /**
         * @param {?} target
         * @return {?}
         */
        function (target) {
            /** @type {?} */
            var position = this.getPositionOfTarget(target);
            this.openAtPosition(target, position);
            this.watchResize(target);
            this.watchScroll(target);
        };
        /**
         * @private
         * @param {?} target
         * @return {?}
         */
        FivPopover.prototype.watchResize = /**
         * @private
         * @param {?} target
         * @return {?}
         */
        function (target) {
            var _this = this;
            if (!this.viewportOnly) {
                return;
            }
            rxjs.fromEvent(window, 'resize')
                .pipe(operators.flatMap((/**
             * @return {?}
             */
            function () { return _this.filterInViewport(target); })), operators.throttleTime(50), operators.map((/**
             * @return {?}
             */
            function () { return _this.getPositionOfTarget(target); })), operators.tap((/**
             * @param {?} pos
             * @return {?}
             */
            function (pos) { return (_this._position = pos); })), operators.takeUntil(this.onDestroy$))
                .subscribe();
        };
        /**
         * @private
         * @param {?} target
         * @return {?}
         */
        FivPopover.prototype.watchScroll = /**
         * @private
         * @param {?} target
         * @return {?}
         */
        function (target) {
            var _this = this;
            if (!this.viewportOnly) {
                return;
            }
            if (this.content && !this.backdrop) {
                this.content.scrollEvents = true;
                rxjs.merge(rxjs.fromEvent(window, 'mousewheel'), rxjs.fromEvent(window, 'touchmove'), this.content.ionScroll)
                    .pipe(operators.flatMap((/**
                 * @return {?}
                 */
                function () { return _this.filterInViewport(target); })), operators.map((/**
                 * @return {?}
                 */
                function () { return _this.getPositionOfTarget(target); })), operators.tap((/**
                 * @param {?} pos
                 * @return {?}
                 */
                function (pos) { return (_this._position = pos); })), operators.takeUntil(this.onDestroy$))
                    .subscribe();
            }
        };
        /**
         * @private
         * @param {?} target
         * @return {?}
         */
        FivPopover.prototype.filterInViewport = /**
         * @private
         * @param {?} target
         * @return {?}
         */
        function (target) {
            var _this = this;
            return rxjs.from(this.inViewport(target.getBoundingClientRect())).pipe(operators.tap((/**
             * @param {?} inViewport
             * @return {?}
             */
            function (inViewport) {
                return !inViewport ? (_this.hidden = true) : (_this.hidden = false);
            })), operators.filter((/**
             * @param {?} inViewPort
             * @return {?}
             */
            function (inViewPort) { return _this.overlay.open && inViewPort; })));
        };
        /**
         * @private
         * @param {?} target
         * @param {?} position
         * @return {?}
         */
        FivPopover.prototype.openAtPosition = /**
         * @private
         * @param {?} target
         * @param {?} position
         * @return {?}
         */
        function (target, position) {
            return __awaiter(this, void 0, void 0, function () {
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0: return [4 /*yield*/, this.scrollToPosition(target, position)];
                        case 1:
                            _a.sent();
                            this._position = position;
                            this.overlay.show();
                            return [2 /*return*/];
                    }
                });
            });
        };
        /**
         * @private
         * @param {?} target
         * @param {?} position
         * @return {?}
         */
        FivPopover.prototype.scrollToPosition = /**
         * @private
         * @param {?} target
         * @param {?} position
         * @return {?}
         */
        function (target, position) {
            return __awaiter(this, void 0, void 0, function () {
                var isInViewport;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!(this.content && this.scrollToTarget)) return [3 /*break*/, 3];
                            return [4 /*yield*/, this.inViewport(target.getBoundingClientRect())];
                        case 1:
                            isInViewport = _a.sent();
                            if (isInViewport) {
                                return [2 /*return*/];
                            }
                            return [4 /*yield*/, this.content.scrollToPoint(position.left, position.top, this.scrollSpeed)];
                        case 2:
                            _a.sent();
                            _a.label = 3;
                        case 3: return [2 /*return*/];
                    }
                });
            });
        };
        /**
         * @param {?} position
         * @return {?}
         */
        FivPopover.prototype.inViewport = /**
         * @param {?} position
         * @return {?}
         */
        function (position) {
            return __awaiter(this, void 0, void 0, function () {
                var height, width;
                return __generator(this, function (_a) {
                    height = this.platform.height();
                    width = this.platform.width();
                    return [2 /*return*/, (position.top <= height &&
                            position.bottom >= 0 &&
                            position.left < width &&
                            position.right > 0)];
                });
            });
        };
        /**
         * @private
         * @param {?} top
         * @param {?} left
         * @param {?} bottom
         * @param {?} right
         * @param {?} targetHeight
         * @param {?} targetWidth
         * @return {?}
         */
        FivPopover.prototype.calculcatePositioning = /**
         * @private
         * @param {?} top
         * @param {?} left
         * @param {?} bottom
         * @param {?} right
         * @param {?} targetHeight
         * @param {?} targetWidth
         * @return {?}
         */
        function (top, left, bottom, right, targetHeight, targetWidth) {
            // calculates the position of the popover without considering arrow and overlay offset
            /** @type {?} */
            var width = this.platform.width();
            /** @type {?} */
            var height = this.platform.height();
            /** @type {?} */
            var _left = this.position === 'right' ||
                (width / 2 > left && this.position !== 'left');
            /** @type {?} */
            var _right = this.position === 'left' ||
                (width / 2 <= left && this.position !== 'right');
            /** @type {?} */
            var _top = this.position === 'below' ||
                (height / 2 > top && this.position !== 'above');
            /** @type {?} */
            var _bottom = this.position === 'above' ||
                (height / 2 <= top && this.position !== 'below');
            // transform origin
            /** @type {?} */
            var horizontal = 'left';
            /** @type {?} */
            var vertical = 'top';
            if (_left && _top) {
                // top left
                horizontal = 'left';
                vertical = 'top';
            }
            else if (_right && _bottom) {
                // bottom right
                left = right - this.width;
                top = bottom - this.height;
                horizontal = 'right';
                vertical = 'bottom';
            }
            else if (_right && _top) {
                // top right
                left = right - this.width;
                horizontal = 'right';
                vertical = 'top';
            }
            else if (_left && _bottom) {
                // bottom left
                top = bottom - this.height;
                horizontal = 'left';
                vertical = 'bottom';
            }
            return {
                top: top,
                left: left,
                bottom: bottom,
                right: right,
                targetHeight: targetHeight,
                targetWidth: targetWidth,
                horizontal: horizontal,
                vertical: vertical
            };
        };
        /**
         * @private
         * @return {?}
         */
        FivPopover.prototype.getArrowTop = /**
         * @private
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var isVert = ['auto', 'below', 'above'].some((/**
             * @param {?} s
             * @return {?}
             */
            function (s) { return s === _this.position; }));
            if (isVert) {
                return this._position.vertical === 'top'
                    ? -1 * this.arrowHeight
                    : this.height;
            }
            if (this.arrowPosition === 'center') {
                return this.height / 2 - this.arrowWidth / 2;
            }
            return this._position.vertical === 'top'
                ? this._position.targetHeight / 2 - this.arrowHeight / 2
                : this.height - this.arrowHeight / 2 - this._position.targetHeight / 2;
        };
        /**
         * @private
         * @return {?}
         */
        FivPopover.prototype.getArrowLeft = /**
         * @private
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var isHorizontal = ['left', 'right'].some((/**
             * @param {?} s
             * @return {?}
             */
            function (s) { return s === _this.position; }));
            if (isHorizontal) {
                return this._position.horizontal === 'left'
                    ? -1 * this.arrowHeight
                    : this.width;
            }
            if (this.arrowPosition === 'center') {
                return this.width / 2 - this.arrowHeight / 2;
            }
            return this._position.horizontal === 'left'
                ? this._position.targetWidth / 2 - this.arrowWidth / 2
                : this.width - this.arrowWidth / 2 - this._position.targetWidth / 2;
        };
        /**
         * @private
         * @return {?}
         */
        FivPopover.prototype.getContainerTop = /**
         * @private
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var isVert = ['auto', 'below', 'above'].some((/**
             * @param {?} s
             * @return {?}
             */
            function (s) { return s === _this.position; }));
            /** @type {?} */
            var isTop = this._position.vertical === 'top';
            /** @type {?} */
            var offset = 0;
            if (this.arrow && isTop) {
                offset -= this.getVerticalArrowOffset();
            }
            else if (this.arrow && !isTop) {
                offset += this.getVerticalArrowOffset();
            }
            if (!isVert) {
                return this._position.top + offset;
            }
            if (!this.overlaysTarget && isTop) {
                offset += this._position.targetHeight;
            }
            else if (!this.overlaysTarget && !isTop) {
                offset -= this._position.targetHeight;
            }
            if (this.arrow && isTop) {
                offset += this.arrowHeight;
            }
            else if (this.arrow && !isTop) {
                offset -= this.arrowHeight;
            }
            return this._position.top + offset;
        };
        /**
         * @private
         * @return {?}
         */
        FivPopover.prototype.getVerticalArrowOffset = /**
         * @private
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var offset = 0;
            /** @type {?} */
            var isHorizontal = ['left', 'right'].some((/**
             * @param {?} s
             * @return {?}
             */
            function (s) { return s === _this.position; }));
            if (this.arrowPosition === 'center' && isHorizontal) {
                offset += this.height / 2 - this._position.targetHeight / 2;
            }
            return offset;
        };
        /**
         * @private
         * @return {?}
         */
        FivPopover.prototype.getHorizontalArrowOffset = /**
         * @private
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var offset = 0;
            /** @type {?} */
            var isVertical = ['above', 'auto', 'below'].some((/**
             * @param {?} s
             * @return {?}
             */
            function (s) { return s === _this.position; }));
            if (this.arrowPosition === 'center' && isVertical) {
                offset += this.width / 2 - this._position.targetWidth / 2;
            }
            return offset;
        };
        /**
         * @private
         * @return {?}
         */
        FivPopover.prototype.getContainerLeft = /**
         * @private
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var isHorizontal = ['left', 'right'].some((/**
             * @param {?} s
             * @return {?}
             */
            function (s) { return s === _this.position; }));
            /** @type {?} */
            var isLeft = this._position.horizontal === 'left';
            /** @type {?} */
            var offset = 0;
            if (this.arrow && isLeft) {
                offset -= this.getHorizontalArrowOffset();
            }
            else if (this.arrow && !isLeft) {
                offset += this.getHorizontalArrowOffset();
            }
            if (!isHorizontal) {
                return this._position.left + offset;
            }
            if (!this.overlaysTarget && isLeft) {
                offset += this._position.targetWidth;
            }
            else if (!this.overlaysTarget && !isLeft) {
                offset -= this._position.targetWidth;
            }
            if (this.arrow && isLeft) {
                offset += this.arrowHeight;
            }
            else if (this.arrow && !isLeft) {
                offset -= this.arrowHeight;
            }
            return this._position.left + offset;
        };
        FivPopover.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-popover',
                        template: "<fiv-overlay>\n  <div *ngIf=\"backdrop && !hidden\" [ngClass]=\"classes\" class=\"fiv-popover-backdrop\" (click)=\"close()\">\n  </div>\n  <div *ngIf=\"!hidden\" [ngClass]=\"classes\" class=\"popover-container\" [style]=\"styles\">\n    <div #animation *ngIf=\"overlay?.open\" class=\"animation-container\" anim [anim.in]=\"animationIn\">\n      <ng-content>\n      </ng-content>\n      <svg *ngIf=\"arrow && !overlaysTarget\" class=\"arrow\" [style]=\"svgStyles\">\n        <polygon [attr.points]=\"triangle\" />\n      </svg>\n    </div>\n\n  </div>\n\n</fiv-overlay>",
                        encapsulation: core.ViewEncapsulation.None,
                        styles: [":host{--fiv-popover-backdrop-color:rgba(0, 0, 0, 0.2)}.popover-container{position:absolute;display:block}.animation-container{height:100%;position:relative}svg.arrow{position:absolute;fill:var(--ion-item-background)}.fiv-popover-backdrop{position:absolute;display:block;width:100vw;height:100vh;background:var(--fiv-popover-backdrop-color)}"]
                    }] }
        ];
        /** @nocollapse */
        FivPopover.ctorParameters = function () { return [
            { type: angular.Platform },
            { type: angular.IonContent, decorators: [{ type: core.Host }, { type: core.Optional }] },
            { type: platformBrowser.DomSanitizer },
            { type: router.Router }
        ]; };
        FivPopover.propDecorators = {
            overlay: [{ type: core.ViewChild, args: [FivOverlay, { static: true },] }],
            animationContainer: [{ type: core.ViewChild, args: ['animation', { static: false },] }],
            width: [{ type: core.Input }],
            height: [{ type: core.Input }],
            arrow: [{ type: core.Input }],
            arrowWidth: [{ type: core.Input }],
            arrowHeight: [{ type: core.Input }],
            arrowPosition: [{ type: core.Input }],
            backdrop: [{ type: core.Input }],
            overlaysTarget: [{ type: core.Input }],
            closeOnNavigation: [{ type: core.Input }],
            scrollToTarget: [{ type: core.Input }],
            scrollSpeed: [{ type: core.Input }],
            position: [{ type: core.Input }],
            classes: [{ type: core.Input }],
            viewportOnly: [{ type: core.Input }],
            inDuration: [{ type: core.Input }],
            outDuration: [{ type: core.Input }],
            animationIn: [{ type: core.Input }],
            animationOut: [{ type: core.Input }]
        };
        return FivPopover;
    }());
    if (false) {
        /** @type {?} */
        FivPopover.prototype.overlay;
        /** @type {?} */
        FivPopover.prototype.animationContainer;
        /** @type {?} */
        FivPopover.prototype.width;
        /** @type {?} */
        FivPopover.prototype.height;
        /** @type {?} */
        FivPopover.prototype.arrow;
        /** @type {?} */
        FivPopover.prototype.arrowWidth;
        /** @type {?} */
        FivPopover.prototype.arrowHeight;
        /** @type {?} */
        FivPopover.prototype.arrowPosition;
        /** @type {?} */
        FivPopover.prototype.backdrop;
        /** @type {?} */
        FivPopover.prototype.overlaysTarget;
        /** @type {?} */
        FivPopover.prototype.closeOnNavigation;
        /** @type {?} */
        FivPopover.prototype.scrollToTarget;
        /** @type {?} */
        FivPopover.prototype.scrollSpeed;
        /** @type {?} */
        FivPopover.prototype.position;
        /** @type {?} */
        FivPopover.prototype.classes;
        /** @type {?} */
        FivPopover.prototype.viewportOnly;
        /** @type {?} */
        FivPopover.prototype._position;
        /** @type {?} */
        FivPopover.prototype.hidden;
        /** @type {?} */
        FivPopover.prototype.onDestroy$;
        /** @type {?} */
        FivPopover.prototype.onClose$;
        /** @type {?} */
        FivPopover.prototype.inDuration;
        /** @type {?} */
        FivPopover.prototype.outDuration;
        /** @type {?} */
        FivPopover.prototype.animationIn;
        /** @type {?} */
        FivPopover.prototype.animationOut;
        /**
         * @type {?}
         * @private
         */
        FivPopover.prototype.platform;
        /**
         * @type {?}
         * @private
         */
        FivPopover.prototype.content;
        /**
         * @type {?}
         * @private
         */
        FivPopover.prototype.dom;
        /**
         * @type {?}
         * @private
         */
        FivPopover.prototype.router;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/popover/popover-element.directive.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivPopoverElementDirective = /** @class */ (function () {
        function FivPopoverElementDirective(el) {
            this.el = el;
            this.ready = false;
            this.delay = 150;
        }
        Object.defineProperty(FivPopoverElementDirective.prototype, "show", {
            get: /**
             * @return {?}
             */
            function () {
                return this._show;
            },
            set: /**
             * @param {?} visible
             * @return {?}
             */
            function (visible) {
                var _this = this;
                this._show = visible;
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    if (_this.show && _this.ready) {
                        _this.fivPopover.open(_this.el);
                    }
                    else if (_this.fivPopover.overlay && _this.fivPopover.overlay.open) {
                        _this.fivPopover.close();
                    }
                }), 0);
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivPopoverElementDirective.prototype.open = /**
         * @return {?}
         */
        function () {
            this.show = true;
        };
        /**
         * @return {?}
         */
        FivPopoverElementDirective.prototype.close = /**
         * @return {?}
         */
        function () {
            this.show = false;
        };
        /**
         * @return {?}
         */
        FivPopoverElementDirective.prototype.ngAfterViewInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.ready = true;
                _this.show = _this._show;
            }), this.delay);
        };
        FivPopoverElementDirective.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivPopover]',
                        exportAs: 'fivPopover'
                    },] }
        ];
        /** @nocollapse */
        FivPopoverElementDirective.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        FivPopoverElementDirective.propDecorators = {
            delay: [{ type: core.Input, args: ['fivPopover.delay',] }],
            fivPopover: [{ type: core.Input }],
            show: [{ type: core.Input, args: ['fivPopover.show',] }]
        };
        return FivPopoverElementDirective;
    }());
    if (false) {
        /** @type {?} */
        FivPopoverElementDirective.prototype._show;
        /** @type {?} */
        FivPopoverElementDirective.prototype.ready;
        /** @type {?} */
        FivPopoverElementDirective.prototype.delay;
        /** @type {?} */
        FivPopoverElementDirective.prototype.fivPopover;
        /**
         * @type {?}
         * @private
         */
        FivPopoverElementDirective.prototype.el;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/popover/popover.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivPopoverModule = /** @class */ (function () {
        function FivPopoverModule() {
        }
        FivPopoverModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivPopover, FivPopoverElementDirective],
                        imports: [common.CommonModule, ngxRxjsAnimations.AnimationsModule, FivOverlayModule],
                        exports: [FivPopover, FivPopoverElementDirective]
                    },] }
        ];
        return FivPopoverModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/router-item/router-item.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivRouterItem = /** @class */ (function () {
        function FivRouterItem(router, host) {
            this.router = router;
            this.host = host;
            this.active = false;
            this.detailIcon = 'chevron-forward';
            this.disabled = false;
            this.matchChildUrl = false;
            this.navigate = true;
            /**
             * The position of the active state.
             * Default value is: `"left"`
             */
            this.position = 'left';
            /**
             * The shape of the active state.
             * Possible values are: `"line"`, `"dot"` and `"rounded"`.
             * Default value is: `"line"`
             */
            this.shape = 'line';
        }
        /**
         * @return {?}
         */
        FivRouterItem.prototype.onclick = /**
         * @return {?}
         */
        function () {
            if (this.navigate && this.pageUrl) {
                this.router.navigateByUrl(this.pageUrl);
            }
        };
        Object.defineProperty(FivRouterItem.prototype, "classes", {
            get: /**
             * @return {?}
             */
            function () {
                return this.position + " " + this.shape;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivRouterItem.prototype, "activeClass", {
            get: /**
             * @return {?}
             */
            function () {
                return this.matchActiveUrl() || this.active;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivRouterItem.prototype, "disabledClass", {
            get: /**
             * @return {?}
             */
            function () {
                return this.disabled;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivRouterItem.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivRouterItem.prototype.ngAfterViewInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.router.events
                .pipe(operators.filter((/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return event instanceof router.NavigationEnd; })), operators.filter((/**
             * @param {?} event
             * @return {?}
             */
            function (event) { return event.url === _this.pageUrl; })))
                .subscribe((/**
             * @return {?}
             */
            function () { return _this.openExpandableHost(); }));
        };
        /**
         * @return {?}
         */
        FivRouterItem.prototype.openExpandableHost = /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var isActive = this.matchActiveUrl() || this.active;
            if (isActive) {
                if (this.host && !this.host.isOpen) {
                    this.host.open();
                }
            }
        };
        /**
         * @return {?}
         */
        FivRouterItem.prototype.getClasses = /**
         * @return {?}
         */
        function () {
            return [this.position, this.shape];
        };
        /**
         * @return {?}
         */
        FivRouterItem.prototype.matchActiveUrl = /**
         * @return {?}
         */
        function () {
            return this.matchChildUrl ? this.isChildUrl() : this.isCurrentUrl();
        };
        /**
         * @return {?}
         */
        FivRouterItem.prototype.isCurrentUrl = /**
         * @return {?}
         */
        function () {
            return this.router.url === this.pageUrl;
        };
        /**
         * @return {?}
         */
        FivRouterItem.prototype.isChildUrl = /**
         * @return {?}
         */
        function () {
            return this.router.url.startsWith(this.pageUrl);
        };
        FivRouterItem.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-router-item',
                        template: "<ion-menu-toggle auto-hide=\"false\">\n    <ion-item class=\"ion-activatable\" [color]=\"color\" [detail]=\"detail\" [detailIcon]=\"detailIcon\" [disabled]=\"disabled\"\n        [lines]=\"lines\">\n        <fiv-icon #fivIcon *ngIf=\"icon\" [name]=\"icon\"></fiv-icon>\n        <ion-label>{{text}}</ion-label>\n        <ion-ripple-effect type=\"bounded\"></ion-ripple-effect>\n    </ion-item>\n</ion-menu-toggle>\n<span [ngClass]=\"getClasses()\" class=\"indicator\"></span>",
                        styles: [":host{display:block;position:relative;width:100%}:host(.active){--color-active:var(--ion-color-primary)}:host(.active) ion-item{--color:var(--color-active);--background:var(--fiv-background, var(--ion-color-light))}:host(.line){--width-line:4px;--background-line:var(--ion-color-primary)}:host(.active) .line{display:block;background:var(--background-line)}:host.active.left .line{width:var(--width-line);height:100%;top:0}:host.active.right .line{width:var(--width-line);height:100%;top:0}.indicator{position:absolute}:host.active .dot{display:block}:host.active.dot.left{padding-left:24px}.dot{width:var(--fiv-dot-width,8px);height:var(--fiv-dot-heigt,8px);background-color:var(--fiv-dot-color,var(--ion-color-primary));top:50%;border-radius:100%;transform:translateY(-50%);right:8px;display:none}.dot.left{left:8px;right:unset}.dot.right{right:8px}:host(.rounded.left){--border-radius-rounded-left:0 50px 50px 0}:host(.rounded.left) ion-item{--border-radius:var(--border-radius-rounded-left);--background:var(--fiv-background)}:host(.rounded.right){--border-radius-rounded-right:50px 0 0 50px}:host(.rounded.right) ion-item{--border-radius:var(--border-radius-rounded-right);--background:var(--fiv-background)}:host(.active.rounded){--background-rounded:var(--ion-color-primary-rgb);--opacity-rounded:0.25}:host(.active.rounded) ion-item{--background:rgba(var(--background-rounded), var(--opacity-rounded))}@media (any-hover:hover){:host(:hover){cursor:pointer}:host(:hover) ion-label{--color:var(--ion-color-primary)}:host(.dot:hover) ion-item,:host(.line:hover) ion-item,:host(.rounded:hover) ion-item{--background:var(--fiv-background-hover, var(--ion-color-light))}}.left{left:0}.right{right:0}ion-item{--border-style:none}fiv-icon{--fiv-padding-end:8px}:host(.router-item-disabled){pointer-events:none}"]
                    }] }
        ];
        /** @nocollapse */
        FivRouterItem.ctorParameters = function () { return [
            { type: router.Router },
            { type: FivExpandable, decorators: [{ type: core.Optional }, { type: core.Host }] }
        ]; };
        FivRouterItem.propDecorators = {
            fivIcon: [{ type: core.ViewChild, args: ['fivIcon', { static: false },] }],
            active: [{ type: core.Input }],
            color: [{ type: core.Input }],
            detail: [{ type: core.Input }],
            detailIcon: [{ type: core.Input }],
            disabled: [{ type: core.Input }],
            icon: [{ type: core.Input }],
            lines: [{ type: core.Input }],
            matchChildUrl: [{ type: core.Input }],
            navigate: [{ type: core.Input }],
            pageUrl: [{ type: core.Input }],
            position: [{ type: core.Input }],
            shape: [{ type: core.Input }],
            text: [{ type: core.Input }],
            onclick: [{ type: core.HostListener, args: ['click',] }],
            classes: [{ type: core.HostBinding, args: ['class',] }],
            activeClass: [{ type: core.HostBinding, args: ['class.active',] }],
            disabledClass: [{ type: core.HostBinding, args: ['class.router-item-disabled',] }]
        };
        return FivRouterItem;
    }());
    if (false) {
        /** @type {?} */
        FivRouterItem.prototype.fivIcon;
        /** @type {?} */
        FivRouterItem.prototype.active;
        /** @type {?} */
        FivRouterItem.prototype.color;
        /** @type {?} */
        FivRouterItem.prototype.detail;
        /** @type {?} */
        FivRouterItem.prototype.detailIcon;
        /** @type {?} */
        FivRouterItem.prototype.disabled;
        /** @type {?} */
        FivRouterItem.prototype.icon;
        /** @type {?} */
        FivRouterItem.prototype.lines;
        /** @type {?} */
        FivRouterItem.prototype.matchChildUrl;
        /** @type {?} */
        FivRouterItem.prototype.navigate;
        /** @type {?} */
        FivRouterItem.prototype.pageUrl;
        /**
         * The position of the active state.
         * Default value is: `"left"`
         * @type {?}
         */
        FivRouterItem.prototype.position;
        /**
         * The shape of the active state.
         * Possible values are: `"line"`, `"dot"` and `"rounded"`.
         * Default value is: `"line"`
         * @type {?}
         */
        FivRouterItem.prototype.shape;
        /** @type {?} */
        FivRouterItem.prototype.text;
        /** @type {?} */
        FivRouterItem.prototype.router;
        /**
         * @type {?}
         * @private
         */
        FivRouterItem.prototype.host;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/router-item/router-item.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivRouterItemModule = /** @class */ (function () {
        function FivRouterItemModule() {
        }
        FivRouterItemModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivRouterItem],
                        imports: [common.CommonModule, angular.IonicModule, FivExpandableModule, FivIconModule],
                        exports: [FivRouterItem]
                    },] }
        ];
        return FivRouterItemModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/stepper/step/step.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivStep = /** @class */ (function () {
        function FivStep() {
            this.isLast = false;
            this.open = false;
            this.title = '';
            this.subtitle = '';
        }
        /**
         * @return {?}
         */
        FivStep.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        FivStep.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-step',
                        template: "<ng-template>\n  <ng-content></ng-content>\n</ng-template>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        FivStep.ctorParameters = function () { return []; };
        FivStep.propDecorators = {
            index: [{ type: core.Input }],
            icon: [{ type: core.Input }],
            isLast: [{ type: core.Input }],
            open: [{ type: core.Input }],
            title: [{ type: core.Input }],
            subtitle: [{ type: core.Input }],
            content: [{ type: core.ViewChild, args: [core.TemplateRef, { static: false },] }]
        };
        return FivStep;
    }());
    if (false) {
        /** @type {?} */
        FivStep.prototype.index;
        /** @type {?} */
        FivStep.prototype.icon;
        /** @type {?} */
        FivStep.prototype.isLast;
        /** @type {?} */
        FivStep.prototype.open;
        /** @type {?} */
        FivStep.prototype.title;
        /** @type {?} */
        FivStep.prototype.subtitle;
        /** @type {?} */
        FivStep.prototype.content;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/stepper/step-header/step-header.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivStepHeader = /** @class */ (function () {
        function FivStepHeader() {
            this.iconCompleted = 'checkmark';
            this.iconState = 'normal';
        }
        /**
         * @return {?}
         */
        FivStepHeader.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @param {?} event
         * @param {?} icon
         * @return {?}
         */
        FivStepHeader.prototype.changeIconAndReveal = /**
         * @param {?} event
         * @param {?} icon
         * @return {?}
         */
        function (event, icon) {
            if (event.fromState === 'normal') {
                this.tempIcon = this.icon;
                this.icon = icon;
                this.iconState = 'normal';
            }
        };
        /**
         * @return {?}
         */
        FivStepHeader.prototype.complete = /**
         * @return {?}
         */
        function () {
            this.iconState = 'rotate';
        };
        /**
         * @return {?}
         */
        FivStepHeader.prototype.reset = /**
         * @return {?}
         */
        function () {
            this.icon = this.tempIcon;
        };
        FivStepHeader.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-step-header',
                        template: "<div class=\"number-container\">\n  <span *ngIf=\"index && !icon\" [@rotateAnim]=\"iconState\"\n    (@rotateAnim.done)=\"changeIconAndReveal($event,iconCompleted)\">{{index}}</span>\n  <ion-icon *ngIf=\"icon\" [@rotateAnim]=\"iconState\" (@rotateAnim.done)=\"changeIconAndReveal($event,iconCompleted)\"\n    [name]=\"icon\"></ion-icon>\n</div>\n<div class=\"step-content\">\n  <ng-content>\n  </ng-content>\n</div>",
                        animations: [
                            animations.trigger('rotateAnim', [
                                animations.transition('normal => rotate', [animations.animate('125ms ease-out')]),
                                animations.transition('rotate => normal', [animations.animate('125ms ease-in')]),
                                animations.state('rotate', animations.style({
                                    opacity: '0',
                                    transform: 'translate(-50%, -50%) rotateZ(45deg)'
                                })),
                                animations.state('normal', animations.style({
                                    opacity: '1',
                                    transform: 'translate(-50%, -50%) rotateZ(0deg)'
                                }))
                            ])
                        ],
                        styles: [":host{display:block;width:100%;height:72px;align-items:center;position:relative;padding-top:8px}.number-container{width:24px;height:24px;border-radius:100%;position:absolute;left:16px;background:var(--fiv-color-circle,var(--ion-color-primary));color:var(--fiv-color-circle-color,var(--ion-color-light))}.number-container *{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%) rotateZ(0)}.step-content{padding-left:56px}"]
                    }] }
        ];
        /** @nocollapse */
        FivStepHeader.ctorParameters = function () { return []; };
        FivStepHeader.propDecorators = {
            index: [{ type: core.Input }],
            icon: [{ type: core.Input }],
            iconCompleted: [{ type: core.Input }]
        };
        return FivStepHeader;
    }());
    if (false) {
        /** @type {?} */
        FivStepHeader.prototype.index;
        /** @type {?} */
        FivStepHeader.prototype.icon;
        /** @type {?} */
        FivStepHeader.prototype.iconCompleted;
        /** @type {?} */
        FivStepHeader.prototype.iconState;
        /** @type {?} */
        FivStepHeader.prototype.tempIcon;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/stepper/step-content/step-content.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivStepContent = /** @class */ (function () {
        function FivStepContent(change) {
            this.change = change;
            this.isLast = false;
            this.isOpen = false;
            this.title = '';
            this.subtitle = '';
            this.fivDidOpen = new core.EventEmitter();
            this.fivDidClose = new core.EventEmitter();
            this.fivClick = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivStepContent.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @return {?}
         */
        FivStepContent.prototype.open = /**
         * @return {?}
         */
        function () {
            this.isOpen = true;
            this.change.detectChanges();
        };
        /**
         * @return {?}
         */
        FivStepContent.prototype.close = /**
         * @return {?}
         */
        function () {
            this.isOpen = false;
            this.change.detectChanges();
        };
        /**
         * @return {?}
         */
        FivStepContent.prototype.completeAndClose = /**
         * @return {?}
         */
        function () {
            this.close();
            this.complete();
        };
        /**
         * @return {?}
         */
        FivStepContent.prototype.complete = /**
         * @return {?}
         */
        function () {
            this.header.complete();
        };
        /**
         * @return {?}
         */
        FivStepContent.prototype.reset = /**
         * @return {?}
         */
        function () {
            this.header.reset();
        };
        /**
         * @return {?}
         */
        FivStepContent.prototype.afterClose = /**
         * @return {?}
         */
        function () {
            this.fivDidClose.emit(this);
        };
        /**
         * @return {?}
         */
        FivStepContent.prototype.afterOpen = /**
         * @return {?}
         */
        function () {
            this.fivDidOpen.emit(this);
        };
        /**
         * @return {?}
         */
        FivStepContent.prototype.click = /**
         * @return {?}
         */
        function () {
            this.fivClick.emit(this);
        };
        FivStepContent.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-step-content',
                        template: "<div *ngIf=\"!isLast\" class=\"timeline\"></div>\n<fiv-expandable [isOpen]=\"isOpen\" (fivDidClose)=\"afterClose()\" (fivDidOpen)=\"afterOpen()\" #self>\n  <div header class=\"ion-activatable\" (click)=\"click()\">\n    <fiv-step-header #header [index]=\"index\" [icon]=\"icon\">\n      <div class=\"header-title\">{{title}}</div>\n      <div class=\"header-subtitle\">{{subtitle}}</div>\n\n      <ion-ripple-effect type=\"bounded\"></ion-ripple-effect>\n    </fiv-step-header>\n  </div>\n  <ng-container content>\n    <div class=\"step-content\">\n      <ng-content></ng-content>\n    </div>\n  </ng-container>\n</fiv-expandable>",
                        styles: [":host{display:block;width:100%;position:relative}.step-content{padding-left:44px;padding-bottom:24px}.timeline{width:1px;height:calc(100% - 32px);position:absolute;background:var(--fiv-color-timeline,var(--ion-color-medium));left:27.5px;top:36px}.ion-activatable{position:relative;overflow:hidden}.header-title{color:var(--fiv-color-title,var(--ion-color-dark))}.header-subtitle{color:var(--fiv-color-subtitle,var(--ion-color-medium));font-size:.8em}"]
                    }] }
        ];
        /** @nocollapse */
        FivStepContent.ctorParameters = function () { return [
            { type: core.ChangeDetectorRef }
        ]; };
        FivStepContent.propDecorators = {
            index: [{ type: core.Input }],
            icon: [{ type: core.Input }],
            isLast: [{ type: core.Input }],
            isOpen: [{ type: core.Input }],
            title: [{ type: core.Input }],
            subtitle: [{ type: core.Input }],
            fivDidOpen: [{ type: core.Output }],
            fivDidClose: [{ type: core.Output }],
            fivClick: [{ type: core.Output }],
            step: [{ type: core.ViewChild, args: ['self', { static: false },] }],
            header: [{ type: core.ViewChild, args: ['header', { static: false },] }]
        };
        return FivStepContent;
    }());
    if (false) {
        /** @type {?} */
        FivStepContent.prototype.index;
        /** @type {?} */
        FivStepContent.prototype.icon;
        /** @type {?} */
        FivStepContent.prototype.isLast;
        /** @type {?} */
        FivStepContent.prototype.isOpen;
        /** @type {?} */
        FivStepContent.prototype.title;
        /** @type {?} */
        FivStepContent.prototype.subtitle;
        /** @type {?} */
        FivStepContent.prototype.fivDidOpen;
        /** @type {?} */
        FivStepContent.prototype.fivDidClose;
        /** @type {?} */
        FivStepContent.prototype.fivClick;
        /** @type {?} */
        FivStepContent.prototype.step;
        /** @type {?} */
        FivStepContent.prototype.header;
        /**
         * @type {?}
         * @private
         */
        FivStepContent.prototype.change;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/stepper/stepper-horizontal/stepper-horizontal.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivStepperHorizontal = /** @class */ (function () {
        function FivStepperHorizontal() {
            this.fivSelect = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivStepperHorizontal.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            this.slides.lockSwipes(true);
        };
        /**
         * @return {?}
         */
        FivStepperHorizontal.prototype.close = /**
         * @return {?}
         */
        function () {
            this.slides.slideTo(0);
        };
        /**
         * @param {?} index
         * @return {?}
         */
        FivStepperHorizontal.prototype.open = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            this.slides.lockSwipes(false);
            this.slides.slideTo(index);
            this.slides.lockSwipes(true);
        };
        FivStepperHorizontal.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-stepper-horizontal',
                        template: "<ion-grid fixed>\n  <ion-row>\n    <ion-col *ngFor=\"let content of contents.toArray(); let i = index; let f = first; let l = last;\"\n      [size]=\"12 / contents.length\">\n      <div class=\"ion-activatable\" (click)=\"fivSelect.emit(i)\">\n        <span *ngIf=\"!f\" class=\"line left\"></span>\n        <div class=\"number-container\">\n          <span *ngIf=\"!content.icon\">{{i +  1}}</span>\n          <ion-icon *ngIf=\"content.icon\" [name]=\"content.icon\"></ion-icon>\n        </div>\n\n        <ion-ripple-effect type=\"bounded\"></ion-ripple-effect>\n        <span *ngIf=\"!l\" class=\"line right\"></span>\n      </div>\n    </ion-col>\n  </ion-row>\n  <ion-row>\n    <ion-col *ngFor=\"let content of contents.toArray(); let i = index; let f = first; let l = last;\"\n      [size]=\"12 / contents.length\">\n      <div class=\"ion-activatable\" (click)=\"fivSelect.emit(i)\">\n        <div class=\"horizontal-content\">\n          <div class=\"header-title\">{{content.title}}</div>\n          <div class=\"header-subtitle\">{{content.subtitle}}</div>\n        </div>\n      </div>\n      <ion-ripple-effect type=\"bounded\"></ion-ripple-effect>\n    </ion-col>\n  </ion-row>\n</ion-grid>\n\n<ion-slides #slides pager=\"false\">\n  <ion-slide *ngFor=\"let content of contents; let i = index\">\n    <ng-container [ngTemplateOutlet]=\"content.content\"></ng-container>\n  </ion-slide>\n</ion-slides>",
                        animations: [
                            animations.trigger('rotateAnim', [
                                animations.transition('normal => rotate', [animations.animate('125ms ease-out')]),
                                animations.transition('rotate => normal', [animations.animate('125ms ease-in')]),
                                animations.state('rotate', animations.style({
                                    opacity: '0',
                                    transform: 'translate(-50%, -50%) rotateZ(45deg)'
                                })),
                                animations.state('normal', animations.style({
                                    opacity: '1',
                                    transform: 'translate(-50%, -50%) rotateZ(0deg)'
                                }))
                            ])
                        ],
                        styles: [".number-container{width:24px;height:24px;border-radius:100%;position:relative;left:50%;transform:translateX(-50%);background:var(--fiv-color-circle,var(--ion-color-primary));color:var(--fiv-color-circle-color,var(--ion-color-light))}.number-container *{position:absolute;left:50%;top:50%;transform:translate(-50%,-50%) rotateZ(0)}ion-col{text-align:center;padding:0}.line{width:calc(50% - 20px);height:1px;position:absolute;background:var(--fiv-color-timeline,var(--ion-color-medium));top:50%;transform:translateY(-50%)}.left{left:0}.right{right:0}.header-title{color:var(--fiv-color-title,var(--ion-color-dark))}.header-subtitle{color:var(--fiv-color-subtitle,var(--ion-color-medium));font-size:.8em}"]
                    }] }
        ];
        /** @nocollapse */
        FivStepperHorizontal.ctorParameters = function () { return []; };
        FivStepperHorizontal.propDecorators = {
            contents: [{ type: core.Input }],
            slides: [{ type: core.ViewChild, args: ['slides', { static: true },] }],
            fivSelect: [{ type: core.Output }]
        };
        return FivStepperHorizontal;
    }());
    if (false) {
        /** @type {?} */
        FivStepperHorizontal.prototype.contents;
        /** @type {?} */
        FivStepperHorizontal.prototype.slides;
        /** @type {?} */
        FivStepperHorizontal.prototype.fivSelect;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/stepper/stepper.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivStepper = /** @class */ (function () {
        function FivStepper() {
            this.mode = 'vertical';
            this.fivClick = new core.EventEmitter();
            this.fivClose = new core.EventEmitter();
            this.currentIndex = 0;
        }
        /**
         * @return {?}
         */
        FivStepper.prototype.ngOnInit = /**
         * @return {?}
         */
        function () { };
        /**
         * @param {?} index
         * @return {?}
         */
        FivStepper.prototype.open = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            if (this.mode === 'horizontal') {
                this.currentIndex = index;
                this.horizontal.open(index);
            }
            else {
                if (this.steps.toArray()[index]) {
                    if (this.steps.toArray()[index].isOpen) {
                        this.close(index);
                    }
                    else {
                        this.currentIndex = index;
                        this.steps.toArray()[index].open();
                    }
                }
                else {
                }
            }
        };
        /**
         * @return {?}
         */
        FivStepper.prototype.openFirst = /**
         * @return {?}
         */
        function () {
            this.open(0);
        };
        /**
         * @return {?}
         */
        FivStepper.prototype.openLast = /**
         * @return {?}
         */
        function () {
            this.open(this.steps.toArray().length - 1);
        };
        /**
         * @param {?} index
         * @param {?=} param
         * @return {?}
         */
        FivStepper.prototype.close = /**
         * @param {?} index
         * @param {?=} param
         * @return {?}
         */
        function (index, param) {
            this.param = param;
            if (this.mode === 'horizontal') {
                this.currentIndex = 0;
                this.horizontal.close();
            }
            else {
                this.currentIndex = -1;
                this.steps.toArray()[index].close();
            }
        };
        /**
         * @return {?}
         */
        FivStepper.prototype.closeFirst = /**
         * @return {?}
         */
        function () {
            this.close(0);
        };
        /**
         * @return {?}
         */
        FivStepper.prototype.closeLast = /**
         * @return {?}
         */
        function () {
            this.close(this.steps.toArray().length - 1);
        };
        /**
         * @param {?} index
         * @return {?}
         */
        FivStepper.prototype.select = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            if (index >= 0 && index < this.contents.length) {
                if (this.mode === 'vertical') {
                    this.closeAll();
                }
                this.open(index);
            }
        };
        /**
         * @return {?}
         */
        FivStepper.prototype.closeAll = /**
         * @return {?}
         */
        function () {
            if (this.mode === 'horizontal') {
                this.currentIndex = 0;
                this.horizontal.close();
            }
            else {
                this.steps.forEach((/**
                 * @param {?} step
                 * @return {?}
                 */
                function (step) {
                    step.close();
                }));
            }
        };
        /**
         * @return {?}
         */
        FivStepper.prototype.next = /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var next = this.currentIndex < this.steps.length ? this.currentIndex + 1 : -1;
            this.select(next);
        };
        /**
         * @return {?}
         */
        FivStepper.prototype.previous = /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var next = this.currentIndex > 0 ? this.currentIndex + -1 : -1;
            this.select(next);
        };
        /**
         * @param {?} index
         * @return {?}
         */
        FivStepper.prototype.completeStep = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            if (this.mode === 'horizontal') {
                // not yet impletented
            }
            else {
                this.steps.toArray()[index].complete();
            }
        };
        /**
         * @param {?} index
         * @return {?}
         */
        FivStepper.prototype.completeAndCloseStep = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            if (this.mode === 'horizontal') {
                // not yet impletented
            }
            else {
                this.steps.toArray()[index].completeAndClose();
            }
        };
        /**
         * @param {?} index
         * @return {?}
         */
        FivStepper.prototype.reset = /**
         * @param {?} index
         * @return {?}
         */
        function (index) {
            if (this.mode === 'horizontal') {
                // not yet impletented
            }
            else {
                this.steps.toArray()[index].reset();
            }
        };
        FivStepper.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-stepper',
                        template: "<ion-list *ngIf=\"mode === 'vertical'\">\n  <fiv-step-content (fivDidClose)=\"fivClose.emit({index: i, param: param}); param = null;\" (fivClick)=\"fivClick.emit(i)\" *ngFor=\"let content of contents; let i = index; let l = last;\" [icon]=\"content.icon\" [index]=\"i + 1\"\n    [isLast]=\"l\" [title]=\"content.title\" [subtitle]=\"content.subtitle\" [isOpen]=\"content.open\">\n    <ng-container [ngTemplateOutlet]=\"content.content\"></ng-container>\n  </fiv-step-content>\n</ion-list>\n<div *ngIf=\"mode === 'horizontal'\">\n  <fiv-stepper-horizontal (fivSelect)=\"select($event)\" [contents]=\"contents\"></fiv-stepper-horizontal>\n</div>",
                        styles: [":host{display:block;width:100%}"]
                    }] }
        ];
        /** @nocollapse */
        FivStepper.ctorParameters = function () { return []; };
        FivStepper.propDecorators = {
            contents: [{ type: core.ContentChildren, args: [FivStep,] }],
            steps: [{ type: core.ViewChildren, args: [FivStepContent,] }],
            horizontal: [{ type: core.ViewChild, args: [FivStepperHorizontal, { static: false },] }],
            mode: [{ type: core.Input }],
            fivClick: [{ type: core.Output }],
            fivClose: [{ type: core.Output }]
        };
        return FivStepper;
    }());
    if (false) {
        /** @type {?} */
        FivStepper.prototype.contents;
        /** @type {?} */
        FivStepper.prototype.steps;
        /** @type {?} */
        FivStepper.prototype.horizontal;
        /** @type {?} */
        FivStepper.prototype.mode;
        /** @type {?} */
        FivStepper.prototype.fivClick;
        /** @type {?} */
        FivStepper.prototype.fivClose;
        /** @type {?} */
        FivStepper.prototype.currentIndex;
        /** @type {?} */
        FivStepper.prototype.param;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/stepper/stepper.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivStepperModule = /** @class */ (function () {
        function FivStepperModule() {
        }
        FivStepperModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [
                            FivStepper,
                            FivStepContent,
                            FivStepperHorizontal,
                            FivStep,
                            FivStepHeader
                        ],
                        imports: [common.CommonModule, angular.IonicModule, FivExpandableModule],
                        exports: [
                            FivStepper,
                            FivStepContent,
                            FivStepperHorizontal,
                            FivStep,
                            FivStepHeader
                        ]
                    },] }
        ];
        return FivStepperModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/searchbar/searchbar.component.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivSearchbar = /** @class */ (function () {
        function FivSearchbar(renderer) {
            this.renderer = renderer;
            this.searching = false;
            this.titleVisible = true;
            this.closeButtonVisible = false;
            this.smallWidth = 120;
            this.searchIcon = 'search';
            this.closeIcon = 'close';
            this._small = false;
            this.fivInputChange = new core.EventEmitter();
            this.fivClose = new core.EventEmitter();
            this.open = new core.EventEmitter();
            this.state = 'normal';
        }
        Object.defineProperty(FivSearchbar.prototype, "small", {
            get: /**
             * @return {?}
             */
            function () {
                return this._small;
            },
            set: /**
             * @param {?} s
             * @return {?}
             */
            function (s) {
                if (s && !this._small) {
                    this.shrink();
                }
                else if (!s && this._small) {
                    this.grow();
                }
                this._small = s;
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivSearchbar.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            this.state = this._small ? 'small' : 'normal';
        };
        /**
         * @return {?}
         */
        FivSearchbar.prototype.shrink = /**
         * @return {?}
         */
        function () {
            this.state = 'small';
        };
        /**
         * @return {?}
         */
        FivSearchbar.prototype.grow = /**
         * @return {?}
         */
        function () {
            this.state = 'normal';
        };
        /**
         * @return {?}
         */
        FivSearchbar.prototype.openSearchbar = /**
         * @return {?}
         */
        function () {
            if (this._small) {
                this.state = 'normal';
            }
            this._open();
        };
        /**
         * @return {?}
         */
        FivSearchbar.prototype.toggleSearchbar = /**
         * @return {?}
         */
        function () {
            if (this.searching) {
                this.closeSearchbar();
            }
            else {
                this.openSearchbar();
            }
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivSearchbar.prototype.searchBarStateChange = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState === 'normal' && event.toState === 'small') {
            }
            if (event.fromState === 'small' && event.toState === 'normal') {
            }
        };
        /**
         * @private
         * @return {?}
         */
        FivSearchbar.prototype._open = /**
         * @private
         * @return {?}
         */
        function () {
            this.searching = true;
            this.titleVisible = false;
            this.open.emit();
        };
        /**
         * @return {?}
         */
        FivSearchbar.prototype.closeSearchbar = /**
         * @return {?}
         */
        function () {
            if (this.small) {
                this.state = 'small';
            }
            this.searching = false;
            this.fivClose.emit();
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivSearchbar.prototype.searchAnimDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState !== 'void') {
                this.closeButtonVisible = true;
            }
        };
        /**
         * @param {?} event
         * @return {?}
         */
        FivSearchbar.prototype.closeAnimDone = /**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (event.fromState !== 'void') {
                this.searching = false;
            }
        };
        /**
         * @param {?} event
         * @param {?} input
         * @return {?}
         */
        FivSearchbar.prototype.seachbarAnimDone = /**
         * @param {?} event
         * @param {?} input
         * @return {?}
         */
        function (event, input) {
            if (event.fromState !== 'void') {
                this.titleVisible = true;
            }
            else {
                input.setFocus();
            }
        };
        FivSearchbar.decorators = [
            { type: core.Component, args: [{
                        selector: 'fiv-searchbar',
                        template: "<ion-toolbar [@searchbarAnim]=\"{value:state, params: {width: smallWidth}}\"\n  (@searchbarAnim.done)=\"searchBarStateChange($event)\" [ngClass]=\"{'small': state === 'small'}\">\n  <ion-buttons slot=\"start\">\n    <ng-content select=\"[start]\"></ng-content>\n\n  </ion-buttons>\n  <ion-title [@titleAnim] *ngIf=\"titleVisible && state !== 'small'\">{{title}}</ion-title>\n  <ion-input (ionChange)=\"fivInputChange.emit($event)\" [placeholder]=\"!titleVisible ? placeholder : ''\" autofocus #input\n    class=\"searchbarbar\" [@titleAnim] (@titleAnim.done)=\"seachbarAnimDone($event,input)\" *ngIf=\"searching\">\n  </ion-input>\n\n  <ion-buttons slot=\"end\">\n    <ion-button (click)=\"toggleSearchbar()\">\n      <fiv-icon slot=\"icon-only\" [name]=\"searching ? closeIcon : searchIcon\"></fiv-icon>\n    </ion-button>\n    <ng-content select=\"[end]\"></ng-content>\n  </ion-buttons>\n</ion-toolbar>",
                        animations: [
                            animations.trigger('searchbarAnim', [
                                animations.transition('small => normal', [animations.animate('125ms ease-out')]),
                                animations.transition('normal => small', [animations.animate('95ms ease-in')]),
                                animations.state('small', animations.style({ width: '{{width}}px' }), {
                                    params: { width: 120 }
                                }),
                                animations.state('normal', animations.style({ width: '100%' }))
                            ]),
                            animations.trigger('titleAnim', [
                                animations.transition('void => *', [
                                    animations.style({ opacity: '0', transform: 'translateY(-20%)' }),
                                    animations.animate('175ms ease-out', animations.style({ opacity: '1', transform: 'translateY(0)' }))
                                ])
                            ])
                        ],
                        styles: [":host{position:relative;display:block;width:100%;--fiv-toolbar-background:var(--ion-color-light)}ion-toolbar{box-shadow:0 1px 4px rgba(0,0,0,.25);transition:border-bottom-right-radius 85ms;margin-top:env(safe-area-inset-top);--background:var(--fiv-toolbar-background)}ion-toolbar.small{border-bottom-right-radius:12px}.searchbarbar{float:right}"]
                    }] }
        ];
        /** @nocollapse */
        FivSearchbar.ctorParameters = function () { return [
            { type: core.Renderer2 }
        ]; };
        FivSearchbar.propDecorators = {
            title: [{ type: core.Input }],
            placeholder: [{ type: core.Input }],
            smallWidth: [{ type: core.Input }],
            searchIcon: [{ type: core.Input }],
            closeIcon: [{ type: core.Input }],
            small: [{ type: core.Input }],
            fivInputChange: [{ type: core.Output }],
            fivClose: [{ type: core.Output }],
            open: [{ type: core.Output }]
        };
        return FivSearchbar;
    }());
    if (false) {
        /** @type {?} */
        FivSearchbar.prototype.searching;
        /** @type {?} */
        FivSearchbar.prototype.titleVisible;
        /** @type {?} */
        FivSearchbar.prototype.closeButtonVisible;
        /** @type {?} */
        FivSearchbar.prototype.title;
        /** @type {?} */
        FivSearchbar.prototype.placeholder;
        /** @type {?} */
        FivSearchbar.prototype.smallWidth;
        /** @type {?} */
        FivSearchbar.prototype.searchIcon;
        /** @type {?} */
        FivSearchbar.prototype.closeIcon;
        /** @type {?} */
        FivSearchbar.prototype._small;
        /** @type {?} */
        FivSearchbar.prototype.fivInputChange;
        /** @type {?} */
        FivSearchbar.prototype.fivClose;
        /** @type {?} */
        FivSearchbar.prototype.open;
        /** @type {?} */
        FivSearchbar.prototype.state;
        /** @type {?} */
        FivSearchbar.prototype.renderer;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/searchbar/searchbar.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivSearchbarModule = /** @class */ (function () {
        function FivSearchbarModule() {
        }
        FivSearchbarModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivSearchbar],
                        imports: [common.CommonModule, angular.IonicModule, FivIconModule],
                        exports: [FivSearchbar]
                    },] }
        ];
        return FivSearchbarModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/lazy-image/lazy-image.directive.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivLazyImage = /** @class */ (function () {
        function FivLazyImage(fivImage, image) {
            this.fivImage = fivImage;
            this.image = image;
            this.virtual = false;
            this.inViewport = false;
            this.willShow = new core.EventEmitter();
            this.willHide = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        FivLazyImage.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var io = new IntersectionObserver((/**
             * @param {?} entries
             * @param {?} observer
             * @return {?}
             */
            function (entries, observer) {
                entries.forEach((/**
                 * @param {?} entry
                 * @return {?}
                 */
                function (entry) {
                    if (entry.isIntersecting) {
                        if (!_this.inViewport) {
                            _this.handleIntersection();
                            if (!_this.virtual) {
                                io.disconnect();
                            }
                        }
                    }
                    else {
                        if (_this.inViewport) {
                            _this.inViewport = false;
                            if (_this.fivImage) {
                                _this.willHide.emit(_this.fivImage);
                            }
                            else if (_this.image) {
                                _this.willHide.emit(_this.image.nativeElement);
                            }
                        }
                    }
                }));
            }));
            io['POLL_INTERVAL'] = 100;
            if (this.fivImage) {
                io.observe(this.fivImage.thumbnail.nativeElement);
            }
            else if (this.image) {
                io.observe(this.image.nativeElement);
            }
        };
        /**
         * @return {?}
         */
        FivLazyImage.prototype.handleIntersection = /**
         * @return {?}
         */
        function () {
            this.inViewport = true;
            if (this.fivLazyImage) {
                if (this.fivImage) {
                    this.fivImage.src = this.fivLazyImage;
                    this.willShow.emit(this.fivImage);
                }
                else if (this.image) {
                    this.image.nativeElement.src = this.fivLazyImage;
                    this.willShow.emit(this.image.nativeElement);
                }
            }
            else {
                if (this.fivImage) {
                    this.willShow.emit(this.fivImage);
                }
                else if (this.image) {
                    this.willShow.emit(this.image.nativeElement);
                }
            }
        };
        FivLazyImage.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivLazyImage]'
                    },] }
        ];
        /** @nocollapse */
        FivLazyImage.ctorParameters = function () { return [
            { type: FivGalleryImage, decorators: [{ type: core.Host }, { type: core.Self }, { type: core.Optional }] },
            { type: core.ElementRef, decorators: [{ type: core.Host }, { type: core.Self }, { type: core.Optional }] }
        ]; };
        FivLazyImage.propDecorators = {
            fivLazyImage: [{ type: core.Input }],
            virtual: [{ type: core.Input }],
            willShow: [{ type: core.Output }],
            willHide: [{ type: core.Output }]
        };
        return FivLazyImage;
    }());
    if (false) {
        /** @type {?} */
        FivLazyImage.prototype.fivLazyImage;
        /** @type {?} */
        FivLazyImage.prototype.virtual;
        /** @type {?} */
        FivLazyImage.prototype.inViewport;
        /** @type {?} */
        FivLazyImage.prototype.willShow;
        /** @type {?} */
        FivLazyImage.prototype.willHide;
        /** @type {?} */
        FivLazyImage.prototype.fivImage;
        /** @type {?} */
        FivLazyImage.prototype.image;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/lazy-image/lazy-image.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivLazyImageModule = /** @class */ (function () {
        function FivLazyImageModule() {
        }
        FivLazyImageModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivLazyImage],
                        imports: [common.CommonModule],
                        exports: [FivLazyImage]
                    },] }
        ];
        return FivLazyImageModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/permissions/permissions.directive.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivPermissions = /** @class */ (function () {
        function FivPermissions(viewContainer, templateRef) {
            this.viewContainer = viewContainer;
            this.templateRef = templateRef;
            this.allowedPermissions = [];
            this.uPermissions = [];
        }
        Object.defineProperty(FivPermissions.prototype, "fivPermissionsUserPermissions", {
            set: /**
             * @param {?} userPermissions
             * @return {?}
             */
            function (userPermissions) {
                this.uPermissions = userPermissions || [];
                this.updateView();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(FivPermissions.prototype, "fivPermissions", {
            set: /**
             * @param {?} allowed
             * @return {?}
             */
            function (allowed) {
                this.allowedPermissions = allowed || [];
                this.updateView();
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        FivPermissions.prototype.checkPermission = /**
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var show = false;
            this.uPermissions.forEach((/**
             * @param {?} role
             * @return {?}
             */
            function (role) {
                if (_this.allowedPermissions.find((/**
                 * @param {?} a
                 * @return {?}
                 */
                function (a) { return a.toUpperCase() === role.toUpperCase(); }))) {
                    show = true;
                }
            }));
            return show;
        };
        /**
         * @return {?}
         */
        FivPermissions.prototype.updateView = /**
         * @return {?}
         */
        function () {
            if (this.checkPermission()) {
                this.viewContainer.createEmbeddedView(this.templateRef);
            }
            else {
                this.viewContainer.clear();
            }
        };
        FivPermissions.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivPermissions]'
                    },] }
        ];
        /** @nocollapse */
        FivPermissions.ctorParameters = function () { return [
            { type: core.ViewContainerRef },
            { type: core.TemplateRef }
        ]; };
        FivPermissions.propDecorators = {
            fivPermissionsUserPermissions: [{ type: core.Input }],
            fivPermissions: [{ type: core.Input }]
        };
        return FivPermissions;
    }());
    if (false) {
        /** @type {?} */
        FivPermissions.prototype.allowedPermissions;
        /** @type {?} */
        FivPermissions.prototype.uPermissions;
        /**
         * @type {?}
         * @private
         */
        FivPermissions.prototype.viewContainer;
        /**
         * @type {?}
         * @private
         */
        FivPermissions.prototype.templateRef;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/permissions/permissions.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivPermissionsModule = /** @class */ (function () {
        function FivPermissionsModule() {
        }
        FivPermissionsModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivPermissions],
                        imports: [common.CommonModule],
                        exports: [FivPermissions]
                    },] }
        ];
        return FivPermissionsModule;
    }());

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/viewport/viewport.directive.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivViewport = /** @class */ (function () {
        function FivViewport(elementRef) {
            this.elementRef = elementRef;
            this.fivAppear = new core.EventEmitter();
            this.fivDisappear = new core.EventEmitter();
            this.visible = false;
        }
        /**
         * @return {?}
         */
        FivViewport.prototype.ngOnInit = /**
         * @return {?}
         */
        function () {
            var _this = this;
            this.io = new IntersectionObserver((/**
             * @param {?} entries
             * @param {?} observer
             * @return {?}
             */
            function (entries, observer) {
                entries.forEach((/**
                 * @param {?} entry
                 * @return {?}
                 */
                function (entry) {
                    if (entry.isIntersecting) {
                        _this.handleIntersection();
                    }
                    else {
                        _this.handleNonIntersection();
                    }
                }));
            }));
            this.io['POLL_INTERVAL'] = 100;
            this.io.observe(this.elementRef.nativeElement);
        };
        /**
         * @return {?}
         */
        FivViewport.prototype.handleNonIntersection = /**
         * @return {?}
         */
        function () {
            if (this.visible) {
                this.fivDisappear.emit(this);
            }
            this.visible = false;
        };
        /**
         * @return {?}
         */
        FivViewport.prototype.handleIntersection = /**
         * @return {?}
         */
        function () {
            if (!this.visible) {
                this.fivAppear.emit(this);
            }
            this.visible = true;
        };
        /**
         * @return {?}
         */
        FivViewport.prototype.ngOnDestroy = /**
         * @return {?}
         */
        function () {
            this.io.disconnect();
        };
        /**
         * @return {?}
         */
        FivViewport.prototype.isVisible = /**
         * @return {?}
         */
        function () {
            return this.visible;
        };
        FivViewport.decorators = [
            { type: core.Directive, args: [{
                        selector: '[fivViewport]',
                        exportAs: 'viewport'
                    },] }
        ];
        /** @nocollapse */
        FivViewport.ctorParameters = function () { return [
            { type: core.ElementRef }
        ]; };
        FivViewport.propDecorators = {
            fivAppear: [{ type: core.Output }],
            fivDisappear: [{ type: core.Output }]
        };
        return FivViewport;
    }());
    if (false) {
        /** @type {?} */
        FivViewport.prototype.fivAppear;
        /** @type {?} */
        FivViewport.prototype.fivDisappear;
        /**
         * @type {?}
         * @private
         */
        FivViewport.prototype.visible;
        /**
         * @type {?}
         * @private
         */
        FivViewport.prototype.io;
        /**
         * @type {?}
         * @private
         */
        FivViewport.prototype.elementRef;
    }

    /**
     * @fileoverview added by tsickle
     * Generated from: lib/viewport/viewport.module.ts
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var FivViewportModule = /** @class */ (function () {
        function FivViewportModule() {
        }
        FivViewportModule.decorators = [
            { type: core.NgModule, args: [{
                        declarations: [FivViewport],
                        imports: [common.CommonModule],
                        exports: [FivViewport]
                    },] }
        ];
        return FivViewportModule;
    }());

    exports.CUSTOM_EDITIABLE_LABEL_CONTROL_VALUE_ACCESSOR = CUSTOM_EDITIABLE_LABEL_CONTROL_VALUE_ACCESSOR;
    exports.CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR = CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR;
    exports.DrawerState = DrawerState;
    exports.FabState = FabState;
    exports.FivAppBar = FivAppBar;
    exports.FivAppBarFabDirective = FivAppBarFabDirective;
    exports.FivAppBarModule = FivAppBarModule;
    exports.FivAppBarTab = FivAppBarTab;
    exports.FivBackButton = FivBackButton;
    exports.FivBackButtonModule = FivBackButtonModule;
    exports.FivBottomSheet = FivBottomSheet;
    exports.FivBottomSheetContent = FivBottomSheetContent;
    exports.FivBottomSheetModule = FivBottomSheetModule;
    exports.FivCenter = FivCenter;
    exports.FivCenterModule = FivCenterModule;
    exports.FivCollapsableMenu = FivCollapsableMenu;
    exports.FivCollapsableMenuButton = FivCollapsableMenuButton;
    exports.FivCollapsableModule = FivCollapsableModule;
    exports.FivDialog = FivDialog;
    exports.FivDialogModule = FivDialogModule;
    exports.FivDialogService = FivDialogService;
    exports.FivEditableLabel = FivEditableLabel;
    exports.FivEditableLabelModule = FivEditableLabelModule;
    exports.FivExpandable = FivExpandable;
    exports.FivExpandableIndicator = FivExpandableIndicator;
    exports.FivExpandableModule = FivExpandableModule;
    exports.FivFab = FivFab;
    exports.FivFabModule = FivFabModule;
    exports.FivFeature = FivFeature;
    exports.FivFeatureDiscovery = FivFeatureDiscovery;
    exports.FivFeatureDiscoveryModule = FivFeatureDiscoveryModule;
    exports.FivGallery = FivGallery;
    exports.FivGalleryImage = FivGalleryImage;
    exports.FivGalleryModule = FivGalleryModule;
    exports.FivGalleryToolbar = FivGalleryToolbar;
    exports.FivGalleryToolbarContent = FivGalleryToolbarContent;
    exports.FivIcon = FivIcon;
    exports.FivIconModule = FivIconModule;
    exports.FivIfModule = FivIfModule;
    exports.FivIfPlatform = FivIfPlatform;
    exports.FivLazyImage = FivLazyImage;
    exports.FivLazyImageModule = FivLazyImageModule;
    exports.FivLoadingProgressBar = FivLoadingProgressBar;
    exports.FivLoadingProgressBarModule = FivLoadingProgressBarModule;
    exports.FivLoadingService = FivLoadingService;
    exports.FivNetworkStatus = FivNetworkStatus;
    exports.FivNetworkStatusModule = FivNetworkStatusModule;
    exports.FivOverlay = FivOverlay;
    exports.FivOverlayContent = FivOverlayContent;
    exports.FivOverlayModule = FivOverlayModule;
    exports.FivOverlayService = FivOverlayService;
    exports.FivPasswordInput = FivPasswordInput;
    exports.FivPasswordInputModule = FivPasswordInputModule;
    exports.FivPermissions = FivPermissions;
    exports.FivPermissionsModule = FivPermissionsModule;
    exports.FivPopover = FivPopover;
    exports.FivPopoverElementDirective = FivPopoverElementDirective;
    exports.FivPopoverModule = FivPopoverModule;
    exports.FivPull = FivPull;
    exports.FivPullModule = FivPullModule;
    exports.FivRefresher = FivRefresher;
    exports.FivRefresherContent = FivRefresherContent;
    exports.FivRefresherModule = FivRefresherModule;
    exports.FivRouterItem = FivRouterItem;
    exports.FivRouterItemModule = FivRouterItemModule;
    exports.FivRoutingStateService = FivRoutingStateService;
    exports.FivSearchbar = FivSearchbar;
    exports.FivSearchbarModule = FivSearchbarModule;
    exports.FivSpinner = FivSpinner;
    exports.FivSpinnerModule = FivSpinnerModule;
    exports.FivStep = FivStep;
    exports.FivStepContent = FivStepContent;
    exports.FivStepHeader = FivStepHeader;
    exports.FivStepper = FivStepper;
    exports.FivStepperHorizontal = FivStepperHorizontal;
    exports.FivStepperModule = FivStepperModule;
    exports.FivViewport = FivViewport;
    exports.FivViewportModule = FivViewportModule;
    exports.ImageService = ImageService;
    exports.Position = Position;
    exports.isNavigateable = isNavigateable;
    exports.ɵa = fade;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=fivethree-core.umd.js.map
