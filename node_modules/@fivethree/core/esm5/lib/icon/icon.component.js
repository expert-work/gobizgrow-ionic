/**
 * @fileoverview added by tsickle
 * Generated from: lib/icon/icon.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, ChangeDetectionStrategy, Output, EventEmitter, HostBinding } from '@angular/core';
import { trigger, transition, animate, state, style } from '@angular/animations';
var FivIcon = /** @class */ (function () {
    function FivIcon() {
        this._badge = 0;
        this.state = 'normal';
        this.off = false;
        this.animationDisabled = false;
        this.transitionDone = new EventEmitter();
        this.indicatorState = 'scale';
        this.badgeState = 'scale';
    }
    Object.defineProperty(FivIcon.prototype, "name", {
        get: /**
         * @return {?}
         */
        function () {
            return this._name;
        },
        set: /**
         * @param {?} name
         * @return {?}
         */
        function (name) {
            if (this._name) {
                this.transform(name);
            }
            else {
                this._name = name;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FivIcon.prototype, "badge", {
        get: /**
         * @return {?}
         */
        function () {
            return this._badge;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.transformIndicator(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FivIcon.prototype, "dot", {
        get: /**
         * @return {?}
         */
        function () {
            return this._dot;
        },
        set: /**
         * @param {?} dot
         * @return {?}
         */
        function (dot) {
            this._dot = dot;
            if (dot) {
                this.indicatorState = 'normal';
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FivIcon.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} name
     * @return {?}
     */
    FivIcon.prototype.transform = /**
     * @param {?} name
     * @return {?}
     */
    function (name) {
        this.temp = name;
        this.state = 'rotate';
    };
    /**
     * @param {?} value
     * @return {?}
     */
    FivIcon.prototype.transformIndicator = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (this.dot) {
            this._badge = value;
            return;
        }
        if (value === 0) {
            this._badge = value;
            this.badgeState = 'scale';
        }
        else {
            if (this.badgeState === 'scale') {
                this.badgeState = 'normal';
                this._badge = value;
            }
            else {
                this.tempValue = value;
                this.badgeState = 'scale';
            }
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FivIcon.prototype.rotateAnimDone = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event.fromState === 'normal' && event.toState === 'rotate') {
            this._name = this.temp;
            this.state = 'normal';
        }
        if (event.fromState === 'rotate' && event.toState === 'normal') {
            this.transitionDone.emit(this._name);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FivIcon.prototype.incrementDone = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event.fromState === 'normal' && event.toState === 'scale') {
            if (this.tempValue > 0) {
                this.badgeState = 'normal';
                this._badge = this.tempValue;
            }
            else {
                this._badge = this.tempValue;
            }
        }
    };
    FivIcon.decorators = [
        { type: Component, args: [{
                    selector: 'fiv-icon',
                    template: "<ion-icon [slot]=\"slot\" class=\"icon\" [@rotateAnim]=\"state\" (@rotateAnim.done)=\"rotateAnimDone($event)\" [name]=\"_name\"\n    [color]=\"color\"></ion-icon>\n<span [@scaleAnim]=\"indicatorState\" *ngIf=\"dot\" class=\"indicator-dot\"></span>\n<span class=\"off-background\" *ngIf=\"off\"></span>\n<span class=\"off\" *ngIf=\"off\"></span>\n<span *ngIf=\"smallIcon && badge == 0 && !dot\" class=\"indicator-small-icon\">\n    <ion-icon [color]=\"color\" slot=\"icon-only\" [name]=\"smallIcon\"></ion-icon>\n</span>\n<span *ngIf=\"badge > 0 && !dot\" [@scaleAnim]=\"badgeState\" (@scaleAnim.done)=\"incrementDone($event)\"\n    class=\"indicator-badge\">\n    <span *ngIf=\"badge <= 9\">{{badge}}</span>\n    <span *ngIf=\"badge > 9\">9+</span>\n</span>",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    animations: [
                        trigger('rotateAnim', [
                            transition('normal => rotate', [animate('125ms ease-out')]),
                            transition('rotate => normal', [animate('125ms ease-in')]),
                            state('rotate', style({ opacity: '0', transform: 'scale(0) rotateZ(45deg)' })),
                            state('normal', style({ opacity: '1', transform: 'scale(1) rotateZ(0deg)' }))
                        ]),
                        trigger('scaleAnim', [
                            transition('void => normal', [
                                style({ opacity: '0', transform: 'scale(0)' }),
                                animate('125ms ease-out', style({ opacity: '1', transform: 'scale(1)' }))
                            ]),
                            transition('normal => scale', [animate('125ms ease-out')]),
                            transition('scale => normal', [animate('125ms ease-in')]),
                            state('scale', style({ opacity: '0', transform: 'scale(0)' })),
                            state('normal', style({ opacity: '1', transform: 'scale(1)' }))
                        ])
                    ],
                    styles: [":host{--fiv-padding-end:0;--fiv-padding-start:0;--fiv-position-top:-2px;--fiv-position-right:-6px;--fiv-icon-height:28px;--fiv-icon-width:28px;--fiv-small-icon-height:18px;--fiv-small-icon-width:18px;--fiv-small-icon-font-size:0.8em;--fiv-badge-height:18px;--fiv-badge-width:18px;--fiv-badge-font-size:0.6em;--fiv-dot-height:18px;--fiv-dot-width:18px;position:relative;display:inline-block}.icon{margin:0;font-size:1.8em;color:var(--fiv-icon-color,var(--ion-color-dark));padding-right:var(--fiv-padding-end);padding-left:var(--fiv-padding-start);height:var(--fiv-icon-height);width:var(--fiv-icon-width)}.indicator-badge{position:absolute;top:var(--fiv-position-top);right:var(--fiv-position-right);height:var(--fiv-badge-height);width:var(--fiv-badge-width);background-color:var(--fiv-badge-background-color,var(--ion-color-primary));color:var(--fiv-badge-color,var(--ion-color-light));border-radius:14px;z-index:13}.indicator-badge *{position:absolute;transform:translateX(-50%) translateY(-50%);left:50%;top:50%;font-size:var(--fiv-badge-font-size)}.indicator-dot{position:absolute;top:var(--fiv-position-top);right:var(--fiv-position-right);height:var(--fiv-dot-height);width:var(--fiv-dot-width);background-color:var(--fiv-dot-background-color,var(--ion-color-primary));border-radius:100%;z-index:11}.indicator-small-icon{position:absolute;top:var(--fiv-position-top);right:var(--fiv-position-right);height:var(--fiv-small-icon-height);width:var(--fiv-small-icon-width);background-color:var(--fiv-small-icon-background-color,var(--ion-color-primary));color:var(--fiv-small-icon-color,var(--ion-color-light));border-radius:14px;z-index:13}.indicator-small-icon *{position:absolute;transform:translateX(-50%) translateY(-50%);left:50%;top:50%;font-size:var(--fiv-small-icon-font-size)}.off{width:120%;height:2px;background:var(--fiv-off-color,var(--fiv-icon-color,var(--ion-color-dark)));position:absolute;left:0;transform:rotateZ(45deg) translateY(10px) translateX(6px)}.off-background{width:120%;height:2px;background:#000;position:absolute;background-color:var(--fiv-off-background-color,var(--ion-color-light));left:2px;transform:rotateZ(45deg) translateY(10px) translateX(6px)}"]
                }] }
    ];
    /** @nocollapse */
    FivIcon.ctorParameters = function () { return []; };
    FivIcon.propDecorators = {
        color: [{ type: Input }],
        slot: [{ type: Input }],
        smallIcon: [{ type: Input }],
        off: [{ type: Input }],
        animationDisabled: [{ type: Input }, { type: HostBinding, args: ['@.disabled',] }],
        transitionDone: [{ type: Output }],
        name: [{ type: Input }],
        badge: [{ type: Input }],
        dot: [{ type: Input }]
    };
    return FivIcon;
}());
export { FivIcon };
if (false) {
    /** @type {?} */
    FivIcon.prototype._name;
    /** @type {?} */
    FivIcon.prototype._badge;
    /** @type {?} */
    FivIcon.prototype._dot;
    /** @type {?} */
    FivIcon.prototype.tempValue;
    /** @type {?} */
    FivIcon.prototype.state;
    /** @type {?} */
    FivIcon.prototype.temp;
    /** @type {?} */
    FivIcon.prototype.color;
    /** @type {?} */
    FivIcon.prototype.slot;
    /** @type {?} */
    FivIcon.prototype.smallIcon;
    /** @type {?} */
    FivIcon.prototype.off;
    /** @type {?} */
    FivIcon.prototype.animationDisabled;
    /** @type {?} */
    FivIcon.prototype.transitionDone;
    /** @type {?} */
    FivIcon.prototype.indicatorState;
    /** @type {?} */
    FivIcon.prototype.badgeState;
}
//# sourceMappingURL=data:application/json;base64,