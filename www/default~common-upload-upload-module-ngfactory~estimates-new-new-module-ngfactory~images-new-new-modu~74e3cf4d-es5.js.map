{"version":3,"sources":["webpack:///src/app/images/new/new-routing.module.ts","webpack:///src/app/images/new/new.module.ts","webpack:///src/app/images/new/new.page.html","webpack:///src/app/images/new/new.page.ts","webpack:///src/app/services/apis.service.ts","webpack:///src/app/services/toast.service.ts"],"names":["routes","path","component","NewPageRoutingModule","NewPageModule","Camera","NewPage","router","menu","authService","apisService","storageService","toastService","navParams","modalController","actionSheetController","route","platform","images","vehicles_json_data","imagePickerOptions","maximumImagesCount","quality","loading","userData$","subscribe","res","displayUserData","getImages","buttons","text","icon","handler","addImage","Photos","is","push","fileInput","nativeElement","click","create","header","actionSheet","present","source","getPhoto","allowEditing","resultType","Base64","image","blobData","b64toBlob","base64String","format","imageName","uploadImage","auth_token","newImage","console","log","isError","presentToast","dismiss","data","event","eventObj","target","file","files","uploadImageFile","index","deleteImage","_id","splice","ApisService","httpService","http","imageUploadUrl","apiUrl","get","name","ext","formData","FormData","append","post","split","pop","id","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","blob","Blob","type","fileUrl","myArray","result","reduce","unique","o","some","obj","sort","a","b","x","characters","charactersLength","charAt","Math","floor","random","postData","ToastService","toastController","infoMessage","message","duration","toast"],"mappings":"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","file":"default~common-upload-upload-module-ngfactory~estimates-new-new-module-ngfactory~images-new-new-modu~74e3cf4d-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewPage } from './new.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewPageRoutingModule } from './new-routing.module';\n\nimport { NewPage } from './new.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NewPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [NewPage]\n})\nexport class NewPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button  (click)=\"close()\">\n        <span ion-text color=\"primary\" showWhen=\"ios\"></span>\n        <ion-icon name=\"close\" showWhen=\"android,windows\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>New Image</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content style=\"\nflex: 5;\ndisplay: flex;\nalign-items: center;\ntext-align: center;\njustify-content: center;\n flex-direction: column;\">\n     \n  <ion-spinner  *ngIf=\"loading\" class=\"loading\" name=\"crescent\" color=\"primary\"></ion-spinner>\n  <input\n  type=\"file\"\n  #fileInput\n  (change)=\"uploadFile($event)\"\n  hidden=\"true\"\n  accept=\"image/*\"\n/>\n\n  <ion-icon name=\"add\"  *ngIf=\"!loading\" style=\"\n   position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 70px;\n    height: 70px;\n    display: block;\n    color: white !important;\n    background: #ff0062;\n    border-radius: 50%;\" (click)=\"selectImageSource()\"  ></ion-icon>\n\n  \n</ion-content> ","import { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\n import { Validators, FormGroup, FormControl } from '@angular/forms';\n import { Router,ActivatedRoute } from '@angular/router';\n\nimport { Plugins, CameraResultType, CameraSource } from '@capacitor/core';\nimport { Platform,ActionSheetController ,NavParams,NavController,ModalController} from '@ionic/angular';\n\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service'\nimport { ApisService ,ApiImage} from '../../services/apis.service'\n\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\n\nconst { Camera } = Plugins;\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.page.html',\n  styleUrls: ['./new.page.scss'],\n})\nexport class NewPage implements OnInit {\n  images: ApiImage[] = [];\n  @ViewChild('fileInput', { static: false }) fileInput: ElementRef;\n \n  form: FormGroup;\n  desabled: boolean;\n  loading:boolean\n  displayUserData: any; \n  vehicles_json_data=[];\n  imagePickerOptions = {\n    maximumImagesCount: 1,\n    quality: 50\n  };\n \n\n \n\n  constructor(\n    public router: Router,\n    public menu: MenuController,\n    private authService: AuthService,\n    private apisService:ApisService,\n     private storageService: StorageService,\n    private toastService: ToastService,\n    navParams: NavParams,\n    public modalController: ModalController,\n\n\n    public actionSheetController: ActionSheetController, \n       private route: ActivatedRoute,\n     private platform: Platform,\n  ) {\n     this.loading=false\n    \n  }\n \n  ngOnInit(){\n    this.authService.userData$.subscribe((res:any) => {\n      this.displayUserData=res\n      })\n   }\n\n\n   loadImages() {\n    this.apisService.getImages().subscribe(images => {\n      this.images = images;\n    });\n  }\n \n  async selectImageSource() {\n    const buttons = [\n      {\n        text: 'Take Photo',\n        icon: 'camera',\n        handler: () => {\n          this.addImage(CameraSource.Camera);\n        }\n      },\n      {\n        text: 'Choose From Photos Photo',\n        icon: 'image',\n        handler: () => {\n          this.addImage(CameraSource.Photos);\n        }\n      }\n    ];\n \n    // Only allow file selection inside a browser\n    if (!this.platform.is('hybrid')) {\n      buttons.push({\n        text: 'Choose a File',\n        icon: 'attach',\n        handler: () => {\n          this.fileInput.nativeElement.click();\n        }\n      });\n    }\n \n    const actionSheet = await this.actionSheetController.create({\n      header: 'Select Image Source',\n      buttons\n    });\n    await actionSheet.present();\n  }\n \n  async addImage(source: CameraSource) {\n    const image = await Camera.getPhoto({\n      //Quality\n      quality: 60,\n      allowEditing: true,\n      resultType: CameraResultType.Base64,\n      source\n    });\n    \n    const blobData = this.apisService.b64toBlob(image.base64String, `image/${image.format}`);\n    const imageName = 'Give me a name';\n    this.loading=true;\n    this.apisService.uploadImage(blobData, imageName, image.format, this.displayUserData.auth_token).subscribe((newImage: any) => {\n      console.log(newImage)\n      this.loading=false;\n       if(!newImage.isError){\n        this.toastService.presentToast('Successfully added');\n        this.modalController.dismiss(newImage.data);\n       }else{\n        this.toastService.presentToast('Somthing went wrong');\n       }\n    });\n  }\n \n  // Used for browser direct file upload\n  uploadFile(event: EventTarget) {\n    const eventObj: MSInputMethodContext = event as MSInputMethodContext;\n    const target: HTMLInputElement = eventObj.target as HTMLInputElement;\n    const file: File = target.files[0];\n    this.loading=true;\n    this.apisService.uploadImageFile(file,this.displayUserData.auth_token).subscribe((newImage: any) => {\n      console.log(newImage)\n      this.loading=false;\n       if(!newImage.isError){\n        this.toastService.presentToast('Successfully added');\n        this.modalController.dismiss(newImage.data);\n       }else{\n        this.toastService.presentToast('Somthing went wrong');\n       }\n    });\n  }\n \n  deleteImage(image: ApiImage, index) {\n    this.apisService.deleteImage(image._id).subscribe(res => {\n      this.images.splice(index, 1);\n    });\n  }\n\n\n\n  //Image Upload End\n\n   close()\n   {\n     this.modalController.dismiss([]);\n   }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpService } from './http.service';\nimport { HttpClient } from '@angular/common/http';\nimport { StorageService } from './storage.service';\nimport { environment } from '../../environments/environment';\n\nexport interface ApiImage {\n  _id: string;\n  name: string;\n  createdAt: Date;\n  url: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApisService {\n\n  constructor(\n    private httpService: HttpService,\n    private http: HttpClient,\n    private storageService: StorageService,\n    private router: Router\n  ) { }\n\n\n\n\n\n  // Image Upload Starts\n\n  imageUploadUrl = environment.apiUrl+'uploads';\n\n  getImages() {\n    return this.http.get<ApiImage[]>(`${this.imageUploadUrl}/image`);\n  }\n \n  uploadImage(blobData, name, ext,auth_token:any) {\n    const formData = new FormData();\n    formData.append('file', blobData, `myimage.${ext}`);\n    formData.append('name', name);\n    formData.append('auth_token', auth_token);\n\n    return this.http.post(`${this.imageUploadUrl}`, formData);\n  }\n \n  uploadImageFile(file: File, auth_token:any) {\n    const ext = file.name.split('.').pop();\n    const formData = new FormData();\n    formData.append('file', file, `myimage.${ext}`);\n    formData.append('name', file.name);\n    formData.append('auth_token', auth_token);\n\n    return this.http.post(`${this.imageUploadUrl}`, formData);\n  }\n \n  \n  deleteImage(id) {\n    return this.http.delete(`${this.imageUploadUrl}/image/${id}`);\n  }\n\n  b64toBlob(b64Data, contentType = '', sliceSize = 512) {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n \n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n \n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n \n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n \n    const blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n  }\n  // Image Upload End\n\n\n\n  getImageUrl(file:any){\n    return environment.fileUrl+file;\n  }\n  getThumbImageUrl(file:any){\n    return environment.fileUrl+'thumb/'+file;\n  }\n\n  sortArray(myArray:any) {\n    var result = myArray.reduce((unique, o) => {\n      if(!unique.some(obj => obj.id === o.id)) {\n        unique.push(o);\n      }\n      return unique;\n    },[]);\n   \n    return result.sort(function(a, b) {\n        return b.id-a.id ;\n    });\n}\n\nisDefined(x:any) {\n  if (x == null) {\n      return false;\n  }\n  if (x === null) {\n      return false;\n  }\n  if (typeof x === 'undefined') {\n      return false;\n  }\n  return true;\n}\n\n makeid(length:Number) {\n  var result           = '';\n  var characters       = 'abcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n\n\nsignupComplete(postData: any): Observable<any> {\n  return this.httpService.post('signup-complete',postData);\n}\n\n\n //Customers\n\ndashboard(postData: any): Observable<any> {\n  return this.httpService.post('dashboard',postData);\n}\n\ncustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/all',postData);\n}\n\ninvoices(postData: any): Observable<any> {\n  return this.httpService.post('invoices/all',postData);\n}\n\nnextInvoice(postData: any): Observable<any> {\n  return this.httpService.post('invoices/next',postData);\n\n}\n\n\nnextEstimate(postData: any): Observable<any> {\n  return this.httpService.post('estimates/next',postData);\n\n}\n\nitems(postData: any): Observable<any> {\n  return this.httpService.post('items/all',postData);\n}\ncategories(postData: any): Observable<any> {\n  return this.httpService.post('categories/all',postData);\n}\n\npayments(postData: any): Observable<any> {\n  return this.httpService.post('payments/all',postData);\n}\n\nexpenses(postData: any): Observable<any> {\n  return this.httpService.post('expenses/all',postData);\n}\n\ntaxes(postData: any): Observable<any> {\n  return this.httpService.post('taxes/all',postData);\n}\nimages(postData: any): Observable<any> {\n  return this.httpService.post('images/all',postData);\n}\n\ndeleteCustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/delete',postData);\n}\n\ncustomerAdd(postData: any): Observable<any> {\n  return this.httpService.post('customers/add',postData);\n}\ncustomerEdit(auth_token:any,postData: any): Observable<any> {\n  return this.httpService.post('customers/edit/'+auth_token,postData);\n}\n\ncategoryAdd(postData: any): Observable<any> {\n  return this.httpService.post('categories/add',postData);\n}\nitemAdd(postData: any): Observable<any> {\n  return this.httpService.post('items/add',postData);\n}\n\n\ntaxAdd(postData: any): Observable<any> {\n  return this.httpService.post('tax/add',postData);\n}\n\n\ninvoiceAdd(postData: any): Observable<any> {\n  return this.httpService.post('invoices/add',postData);\n}\n\ninvoiceUpdate(postData: any): Observable<any> {\n  return this.httpService.post('invoices/edit',postData);\n}\n\n\n\nestimateAdd(postData: any): Observable<any> {\n  return this.httpService.post('invoices/add',postData);\n}\n\nestimateUpdate(postData: any): Observable<any> {\n  return this.httpService.post('invoices/edit',postData);\n}\n\n //Invoices\n //Items\n //Payments\n //Expenses\n //Items Categories\n //Expenses Categories\n //Taxes\n //Payment Merhods\n\n\n\n\n // get Industries industries\n  industries(postData: any): Observable<any> {\n    return this.httpService.post('industries',postData);\n  }\n  // get All Estimates\n  estimates(postData: any): Observable<any> {\n    return this.httpService.post('estimates/all',postData);\n  }\n\n  \n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(public toastController: ToastController) { }\n  \n  async presentToast(infoMessage: string) {\n     const toast = await this.toastController.create({\n       message:infoMessage,\n       duration:3000\n     });\n     toast.present();\n\n  }\n}\n"]}