/**
 * @fileoverview added by tsickle
 * Generated from: lib/popover/popover.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { animIn, animOut } from './popover.animations';
import { DomSanitizer } from '@angular/platform-browser';
import { Component, ViewChild, Input, ViewEncapsulation, Host, Optional, ElementRef } from '@angular/core';
import { FivOverlay } from '../overlay/overlay.component';
import { Platform, IonContent } from '@ionic/angular';
import { fromEvent, Subject, merge, from } from 'rxjs';
import { tap, takeUntil, map, throttleTime, filter, flatMap } from 'rxjs/operators';
import { NavigationStart, Router } from '@angular/router';
import { after } from '@fivethree/ngx-rxjs-animations';
var FivPopover = /** @class */ (function () {
    function FivPopover(platform, content, dom, router) {
        var _this = this;
        this.platform = platform;
        this.content = content;
        this.dom = dom;
        this.router = router;
        this.arrow = false;
        this.arrowWidth = 24;
        this.arrowHeight = this.arrowWidth / 1.6;
        this.arrowPosition = 'auto';
        this.backdrop = true;
        this.overlaysTarget = true;
        this.closeOnNavigation = true;
        this.scrollToTarget = false;
        this.scrollSpeed = 100;
        this.position = 'auto';
        this.classes = [];
        this.viewportOnly = true;
        this.hidden = false;
        this.onDestroy$ = new Subject();
        this.onClose$ = new Subject();
        this.inDuration = 200;
        this.outDuration = 80;
        this.animationIn = (/**
         * @param {?} element
         * @return {?}
         */
        function (element) {
            return animIn(element, _this._position, _this.inDuration);
        });
        this.animationOut = (/**
         * @param {?} element
         * @return {?}
         */
        function (element) {
            return animOut(element, _this.outDuration);
        });
    }
    Object.defineProperty(FivPopover.prototype, "styles", {
        get: /**
         * @return {?}
         */
        function () {
            if (!this._position) {
                return;
            }
            return this.dom.bypassSecurityTrustStyle(" width: " + (this.width ? this.width + 'px' : 'auto') + "; \n        height: " + (this.height ? this.height + 'px' : 'auto') + "; \n        left: " + this.getContainerLeft() + "px; \n        top: " + this.getContainerTop() + "px;");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FivPopover.prototype, "triangle", {
        get: /**
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var isHorizontal = ['left', 'right'].some((/**
             * @param {?} s
             * @return {?}
             */
            function (s) { return s === _this.position; }));
            if (isHorizontal) {
                return this.arrowHeight + ",0 0," + this.arrowWidth / 2 + " " + this.arrowHeight + "," + this.arrowWidth;
            }
            return "0," + this.arrowHeight + " " + this.arrowWidth / 2 + ",0 " + this.arrowWidth + "," + this.arrowHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FivPopover.prototype, "svgStyles", {
        get: /**
         * @return {?}
         */
        function () {
            var _this = this;
            if (!this._position) {
                return;
            }
            /** @type {?} */
            var isHorizontal = ['left', 'right'].some((/**
             * @param {?} s
             * @return {?}
             */
            function (s) { return s === _this.position; }));
            /** @type {?} */
            var rotate = (this.position === 'auto' && this._position.vertical === 'bottom') ||
                this.position === 'left';
            return this.dom.bypassSecurityTrustStyle("height: " + (isHorizontal ? this.arrowWidth : this.arrowHeight) + "px; \n      width: " + (isHorizontal ? this.arrowHeight : this.arrowWidth) + "px; \n      top: " + this.getArrowTop() + "px; \n      left: " + this.getArrowLeft() + "px;\n      transform: rotateZ(" + (rotate ? 180 : 0) + "deg);");
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FivPopover.prototype, "animationStyles", {
        get: /**
         * @return {?}
         */
        function () {
            if (!this._position) {
                return;
            }
            return this.dom.bypassSecurityTrustStyle("height: " + this.arrowHeight + "px; \n      width: " + this.arrowWidth + "px; \n      top: " + this.getArrowTop() + "px; \n      left: " + this.getArrowLeft() + "px;\n      transform: rotateZ(" + (this._position.vertical === 'bottom' ? 180 : 0) + "deg);");
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FivPopover.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.router.events
            .pipe(filter((/**
         * @param {?} event
         * @return {?}
         */
        function (event) { return event instanceof NavigationStart; })), filter((/**
         * @return {?}
         */
        function () { return _this.closeOnNavigation && _this.overlay.open; })), tap((/**
         * @return {?}
         */
        function () { return _this.close(); })), takeUntil(this.onDestroy$))
            .subscribe();
    };
    /**
     * @return {?}
     */
    FivPopover.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    FivPopover.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.onDestroy$.next();
    };
    /**
     * @return {?}
     */
    FivPopover.prototype.close = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.animationOut(this.animationContainer)
            .pipe(after((/**
         * @return {?}
         */
        function () {
            _this.overlay.hide();
            _this.onClose$.next();
        })))
            .subscribe();
    };
    /**
     * @private
     * @param {?} target
     * @return {?}
     */
    FivPopover.prototype.getPositionOfTarget = /**
     * @private
     * @param {?} target
     * @return {?}
     */
    function (target) {
        /** @type {?} */
        var rect = target.getBoundingClientRect();
        return this.calculcatePositioning(rect.top, rect.left, rect.bottom, rect.right, rect.height, rect.width);
    };
    /**
     * @param {?} target
     * @return {?}
     */
    FivPopover.prototype.open = /**
     * @param {?} target
     * @return {?}
     */
    function (target) {
        /** @type {?} */
        var element;
        if (target instanceof MouseEvent) {
            element = (/** @type {?} */ (target.target));
        }
        else if (target instanceof ElementRef) {
            element = (/** @type {?} */ (target.nativeElement));
        }
        else {
            return;
        }
        this.openTarget(element);
    };
    /**
     * @param {?} target
     * @return {?}
     */
    FivPopover.prototype.openTarget = /**
     * @param {?} target
     * @return {?}
     */
    function (target) {
        /** @type {?} */
        var position = this.getPositionOfTarget(target);
        this.openAtPosition(target, position);
        this.watchResize(target);
        this.watchScroll(target);
    };
    /**
     * @private
     * @param {?} target
     * @return {?}
     */
    FivPopover.prototype.watchResize = /**
     * @private
     * @param {?} target
     * @return {?}
     */
    function (target) {
        var _this = this;
        if (!this.viewportOnly) {
            return;
        }
        fromEvent(window, 'resize')
            .pipe(flatMap((/**
         * @return {?}
         */
        function () { return _this.filterInViewport(target); })), throttleTime(50), map((/**
         * @return {?}
         */
        function () { return _this.getPositionOfTarget(target); })), tap((/**
         * @param {?} pos
         * @return {?}
         */
        function (pos) { return (_this._position = pos); })), takeUntil(this.onDestroy$))
            .subscribe();
    };
    /**
     * @private
     * @param {?} target
     * @return {?}
     */
    FivPopover.prototype.watchScroll = /**
     * @private
     * @param {?} target
     * @return {?}
     */
    function (target) {
        var _this = this;
        if (!this.viewportOnly) {
            return;
        }
        if (this.content && !this.backdrop) {
            this.content.scrollEvents = true;
            merge(fromEvent(window, 'mousewheel'), fromEvent(window, 'touchmove'), this.content.ionScroll)
                .pipe(flatMap((/**
             * @return {?}
             */
            function () { return _this.filterInViewport(target); })), map((/**
             * @return {?}
             */
            function () { return _this.getPositionOfTarget(target); })), tap((/**
             * @param {?} pos
             * @return {?}
             */
            function (pos) { return (_this._position = pos); })), takeUntil(this.onDestroy$))
                .subscribe();
        }
    };
    /**
     * @private
     * @param {?} target
     * @return {?}
     */
    FivPopover.prototype.filterInViewport = /**
     * @private
     * @param {?} target
     * @return {?}
     */
    function (target) {
        var _this = this;
        return from(this.inViewport(target.getBoundingClientRect())).pipe(tap((/**
         * @param {?} inViewport
         * @return {?}
         */
        function (inViewport) {
            return !inViewport ? (_this.hidden = true) : (_this.hidden = false);
        })), filter((/**
         * @param {?} inViewPort
         * @return {?}
         */
        function (inViewPort) { return _this.overlay.open && inViewPort; })));
    };
    /**
     * @private
     * @param {?} target
     * @param {?} position
     * @return {?}
     */
    FivPopover.prototype.openAtPosition = /**
     * @private
     * @param {?} target
     * @param {?} position
     * @return {?}
     */
    function (target, position) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.scrollToPosition(target, position)];
                    case 1:
                        _a.sent();
                        this._position = position;
                        this.overlay.show();
                        return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @private
     * @param {?} target
     * @param {?} position
     * @return {?}
     */
    FivPopover.prototype.scrollToPosition = /**
     * @private
     * @param {?} target
     * @param {?} position
     * @return {?}
     */
    function (target, position) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var isInViewport;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!(this.content && this.scrollToTarget)) return [3 /*break*/, 3];
                        return [4 /*yield*/, this.inViewport(target.getBoundingClientRect())];
                    case 1:
                        isInViewport = _a.sent();
                        if (isInViewport) {
                            return [2 /*return*/];
                        }
                        return [4 /*yield*/, this.content.scrollToPoint(position.left, position.top, this.scrollSpeed)];
                    case 2:
                        _a.sent();
                        _a.label = 3;
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    /**
     * @param {?} position
     * @return {?}
     */
    FivPopover.prototype.inViewport = /**
     * @param {?} position
     * @return {?}
     */
    function (position) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var height, width;
            return tslib_1.__generator(this, function (_a) {
                height = this.platform.height();
                width = this.platform.width();
                return [2 /*return*/, (position.top <= height &&
                        position.bottom >= 0 &&
                        position.left < width &&
                        position.right > 0)];
            });
        });
    };
    /**
     * @private
     * @param {?} top
     * @param {?} left
     * @param {?} bottom
     * @param {?} right
     * @param {?} targetHeight
     * @param {?} targetWidth
     * @return {?}
     */
    FivPopover.prototype.calculcatePositioning = /**
     * @private
     * @param {?} top
     * @param {?} left
     * @param {?} bottom
     * @param {?} right
     * @param {?} targetHeight
     * @param {?} targetWidth
     * @return {?}
     */
    function (top, left, bottom, right, targetHeight, targetWidth) {
        // calculates the position of the popover without considering arrow and overlay offset
        /** @type {?} */
        var width = this.platform.width();
        /** @type {?} */
        var height = this.platform.height();
        /** @type {?} */
        var _left = this.position === 'right' ||
            (width / 2 > left && this.position !== 'left');
        /** @type {?} */
        var _right = this.position === 'left' ||
            (width / 2 <= left && this.position !== 'right');
        /** @type {?} */
        var _top = this.position === 'below' ||
            (height / 2 > top && this.position !== 'above');
        /** @type {?} */
        var _bottom = this.position === 'above' ||
            (height / 2 <= top && this.position !== 'below');
        // transform origin
        /** @type {?} */
        var horizontal = 'left';
        /** @type {?} */
        var vertical = 'top';
        if (_left && _top) {
            // top left
            horizontal = 'left';
            vertical = 'top';
        }
        else if (_right && _bottom) {
            // bottom right
            left = right - this.width;
            top = bottom - this.height;
            horizontal = 'right';
            vertical = 'bottom';
        }
        else if (_right && _top) {
            // top right
            left = right - this.width;
            horizontal = 'right';
            vertical = 'top';
        }
        else if (_left && _bottom) {
            // bottom left
            top = bottom - this.height;
            horizontal = 'left';
            vertical = 'bottom';
        }
        return {
            top: top,
            left: left,
            bottom: bottom,
            right: right,
            targetHeight: targetHeight,
            targetWidth: targetWidth,
            horizontal: horizontal,
            vertical: vertical
        };
    };
    /**
     * @private
     * @return {?}
     */
    FivPopover.prototype.getArrowTop = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var isVert = ['auto', 'below', 'above'].some((/**
         * @param {?} s
         * @return {?}
         */
        function (s) { return s === _this.position; }));
        if (isVert) {
            return this._position.vertical === 'top'
                ? -1 * this.arrowHeight
                : this.height;
        }
        if (this.arrowPosition === 'center') {
            return this.height / 2 - this.arrowWidth / 2;
        }
        return this._position.vertical === 'top'
            ? this._position.targetHeight / 2 - this.arrowHeight / 2
            : this.height - this.arrowHeight / 2 - this._position.targetHeight / 2;
    };
    /**
     * @private
     * @return {?}
     */
    FivPopover.prototype.getArrowLeft = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var isHorizontal = ['left', 'right'].some((/**
         * @param {?} s
         * @return {?}
         */
        function (s) { return s === _this.position; }));
        if (isHorizontal) {
            return this._position.horizontal === 'left'
                ? -1 * this.arrowHeight
                : this.width;
        }
        if (this.arrowPosition === 'center') {
            return this.width / 2 - this.arrowHeight / 2;
        }
        return this._position.horizontal === 'left'
            ? this._position.targetWidth / 2 - this.arrowWidth / 2
            : this.width - this.arrowWidth / 2 - this._position.targetWidth / 2;
    };
    /**
     * @private
     * @return {?}
     */
    FivPopover.prototype.getContainerTop = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var isVert = ['auto', 'below', 'above'].some((/**
         * @param {?} s
         * @return {?}
         */
        function (s) { return s === _this.position; }));
        /** @type {?} */
        var isTop = this._position.vertical === 'top';
        /** @type {?} */
        var offset = 0;
        if (this.arrow && isTop) {
            offset -= this.getVerticalArrowOffset();
        }
        else if (this.arrow && !isTop) {
            offset += this.getVerticalArrowOffset();
        }
        if (!isVert) {
            return this._position.top + offset;
        }
        if (!this.overlaysTarget && isTop) {
            offset += this._position.targetHeight;
        }
        else if (!this.overlaysTarget && !isTop) {
            offset -= this._position.targetHeight;
        }
        if (this.arrow && isTop) {
            offset += this.arrowHeight;
        }
        else if (this.arrow && !isTop) {
            offset -= this.arrowHeight;
        }
        return this._position.top + offset;
    };
    /**
     * @private
     * @return {?}
     */
    FivPopover.prototype.getVerticalArrowOffset = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var offset = 0;
        /** @type {?} */
        var isHorizontal = ['left', 'right'].some((/**
         * @param {?} s
         * @return {?}
         */
        function (s) { return s === _this.position; }));
        if (this.arrowPosition === 'center' && isHorizontal) {
            offset += this.height / 2 - this._position.targetHeight / 2;
        }
        return offset;
    };
    /**
     * @private
     * @return {?}
     */
    FivPopover.prototype.getHorizontalArrowOffset = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var offset = 0;
        /** @type {?} */
        var isVertical = ['above', 'auto', 'below'].some((/**
         * @param {?} s
         * @return {?}
         */
        function (s) { return s === _this.position; }));
        if (this.arrowPosition === 'center' && isVertical) {
            offset += this.width / 2 - this._position.targetWidth / 2;
        }
        return offset;
    };
    /**
     * @private
     * @return {?}
     */
    FivPopover.prototype.getContainerLeft = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var isHorizontal = ['left', 'right'].some((/**
         * @param {?} s
         * @return {?}
         */
        function (s) { return s === _this.position; }));
        /** @type {?} */
        var isLeft = this._position.horizontal === 'left';
        /** @type {?} */
        var offset = 0;
        if (this.arrow && isLeft) {
            offset -= this.getHorizontalArrowOffset();
        }
        else if (this.arrow && !isLeft) {
            offset += this.getHorizontalArrowOffset();
        }
        if (!isHorizontal) {
            return this._position.left + offset;
        }
        if (!this.overlaysTarget && isLeft) {
            offset += this._position.targetWidth;
        }
        else if (!this.overlaysTarget && !isLeft) {
            offset -= this._position.targetWidth;
        }
        if (this.arrow && isLeft) {
            offset += this.arrowHeight;
        }
        else if (this.arrow && !isLeft) {
            offset -= this.arrowHeight;
        }
        return this._position.left + offset;
    };
    FivPopover.decorators = [
        { type: Component, args: [{
                    selector: 'fiv-popover',
                    template: "<fiv-overlay>\n  <div *ngIf=\"backdrop && !hidden\" [ngClass]=\"classes\" class=\"fiv-popover-backdrop\" (click)=\"close()\">\n  </div>\n  <div *ngIf=\"!hidden\" [ngClass]=\"classes\" class=\"popover-container\" [style]=\"styles\">\n    <div #animation *ngIf=\"overlay?.open\" class=\"animation-container\" anim [anim.in]=\"animationIn\">\n      <ng-content>\n      </ng-content>\n      <svg *ngIf=\"arrow && !overlaysTarget\" class=\"arrow\" [style]=\"svgStyles\">\n        <polygon [attr.points]=\"triangle\" />\n      </svg>\n    </div>\n\n  </div>\n\n</fiv-overlay>",
                    encapsulation: ViewEncapsulation.None,
                    styles: [":host{--fiv-popover-backdrop-color:rgba(0, 0, 0, 0.2)}.popover-container{position:absolute;display:block}.animation-container{height:100%;position:relative}svg.arrow{position:absolute;fill:var(--ion-item-background)}.fiv-popover-backdrop{position:absolute;display:block;width:100vw;height:100vh;background:var(--fiv-popover-backdrop-color)}"]
                }] }
    ];
    /** @nocollapse */
    FivPopover.ctorParameters = function () { return [
        { type: Platform },
        { type: IonContent, decorators: [{ type: Host }, { type: Optional }] },
        { type: DomSanitizer },
        { type: Router }
    ]; };
    FivPopover.propDecorators = {
        overlay: [{ type: ViewChild, args: [FivOverlay, { static: true },] }],
        animationContainer: [{ type: ViewChild, args: ['animation', { static: false },] }],
        width: [{ type: Input }],
        height: [{ type: Input }],
        arrow: [{ type: Input }],
        arrowWidth: [{ type: Input }],
        arrowHeight: [{ type: Input }],
        arrowPosition: [{ type: Input }],
        backdrop: [{ type: Input }],
        overlaysTarget: [{ type: Input }],
        closeOnNavigation: [{ type: Input }],
        scrollToTarget: [{ type: Input }],
        scrollSpeed: [{ type: Input }],
        position: [{ type: Input }],
        classes: [{ type: Input }],
        viewportOnly: [{ type: Input }],
        inDuration: [{ type: Input }],
        outDuration: [{ type: Input }],
        animationIn: [{ type: Input }],
        animationOut: [{ type: Input }]
    };
    return FivPopover;
}());
export { FivPopover };
if (false) {
    /** @type {?} */
    FivPopover.prototype.overlay;
    /** @type {?} */
    FivPopover.prototype.animationContainer;
    /** @type {?} */
    FivPopover.prototype.width;
    /** @type {?} */
    FivPopover.prototype.height;
    /** @type {?} */
    FivPopover.prototype.arrow;
    /** @type {?} */
    FivPopover.prototype.arrowWidth;
    /** @type {?} */
    FivPopover.prototype.arrowHeight;
    /** @type {?} */
    FivPopover.prototype.arrowPosition;
    /** @type {?} */
    FivPopover.prototype.backdrop;
    /** @type {?} */
    FivPopover.prototype.overlaysTarget;
    /** @type {?} */
    FivPopover.prototype.closeOnNavigation;
    /** @type {?} */
    FivPopover.prototype.scrollToTarget;
    /** @type {?} */
    FivPopover.prototype.scrollSpeed;
    /** @type {?} */
    FivPopover.prototype.position;
    /** @type {?} */
    FivPopover.prototype.classes;
    /** @type {?} */
    FivPopover.prototype.viewportOnly;
    /** @type {?} */
    FivPopover.prototype._position;
    /** @type {?} */
    FivPopover.prototype.hidden;
    /** @type {?} */
    FivPopover.prototype.onDestroy$;
    /** @type {?} */
    FivPopover.prototype.onClose$;
    /** @type {?} */
    FivPopover.prototype.inDuration;
    /** @type {?} */
    FivPopover.prototype.outDuration;
    /** @type {?} */
    FivPopover.prototype.animationIn;
    /** @type {?} */
    FivPopover.prototype.animationOut;
    /**
     * @type {?}
     * @private
     */
    FivPopover.prototype.platform;
    /**
     * @type {?}
     * @private
     */
    FivPopover.prototype.content;
    /**
     * @type {?}
     * @private
     */
    FivPopover.prototype.dom;
    /**
     * @type {?}
     * @private
     */
    FivPopover.prototype.router;
}
//# sourceMappingURL=data:application/json;base64,