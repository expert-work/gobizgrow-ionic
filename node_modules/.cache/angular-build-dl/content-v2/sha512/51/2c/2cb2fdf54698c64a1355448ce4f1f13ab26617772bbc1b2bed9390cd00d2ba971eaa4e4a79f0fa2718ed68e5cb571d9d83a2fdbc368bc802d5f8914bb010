{"version":3,"sources":["webpack:///src/app/taxes/new/new-routing.module.ts","webpack:///src/app/taxes/new/new.module.ts","webpack:///src/app/taxes/new/new.page.html","webpack:///src/app/taxes/new/new.page.ts"],"names":["routes","path","component","NewPageRoutingModule","NewPageModule","NewPage","router","menu","authService","apisService","storageService","toastService","navParams","modalController","vehicles_json_data","validation_messages","type","message","form","compose","required","userData$","subscribe","res","displayUserData","console","log","desabled","FormData","append","value","name","description","percent","auth_token","taxAdd","result","presentToast","dismiss","data","error","status"],"mappings":"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","file":"default~estimates-new-new-module-ngfactory~invoices-new-new-module-ngfactory~jobs-new-new-module-ngf~59d7d46a-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewPage } from './new.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewPageRoutingModule } from './new-routing.module';\n\nimport { NewPage } from './new.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NewPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [NewPage]\n})\nexport class NewPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button  (click)=\"close()\">\n        <span ion-text color=\"primary\" showWhen=\"ios\"></span>\n        <ion-icon name=\"close\" showWhen=\"android,windows\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>New Tax</ion-title>\n    <ion-button slot=\"end\" class=\"button button-clear button-positive\"   style=\"color: white;\"   [disabled]=\"!form.valid || desabled\"  (click)=\"saveForm()\">  \n      <ion-icon name=\"share\"></ion-icon>\n    </ion-button>\n\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content>\n     \n\n\n <div  class=\"dispplay-content-center\">\n   <form [formGroup]=\"form\" (ngSubmit)=\"saveForm()\" class=\"forms\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"Name\" formControlName=\"name\" clearInput autocapitalize=\"off\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.name\">\n          <div class=\"error-message\" *ngIf=\"form.get('name').hasError(validation.type) && (form.get('name').dirty || form.get('name').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n      <ion-item class=\"input-item\">\n        <ion-input type=\"number\" placeholder=\"Percent\" formControlName=\"percent\" clearInput autocapitalize=\"off\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.percent\">\n          <div class=\"error-message\" *ngIf=\"form.get('percent').hasError(validation.type) && (form.get('percent').dirty || form.get('percent').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n\n      <ion-item class=\"input-item\">\n        <ion-textarea type=\"text\" placeholder=\"Description... \" formControlName=\"description\" clearInput autocapitalize=\"off\" ></ion-textarea> \n      </ion-item>\n    </ion-list>\n\n\n    \n\n    <div class=\"padding20\"></div>\n\n    <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\"   [disabled]=\"!form.valid || desabled\">Save Now</ion-button>\n    <div class=\"padding20\"></div>\n  </form>\n</div> \n</ion-content> ","import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service'\nimport { ApisService } from '../../services/apis.service'\n\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.page.html',\n  styleUrls: ['./new.page.scss'],\n})\nexport class NewPage implements OnInit {\n\n \n  form: FormGroup;\n  desabled: boolean;\n  displayUserData: any; \n  vehicles_json_data=[];\n\n  validation_messages = {\n    'name': [\n      { type: 'required', message: 'Name is required.' },\n      ],\n      'percent': [\n        { type: 'required', message: 'Name is required.' },\n        ]\n  };\n\n \n\n  constructor(\n    public router: Router,\n    public menu: MenuController,\n    private authService: AuthService,\n    private apisService:ApisService,\n     private storageService: StorageService,\n    private toastService: ToastService,\n    navParams: NavParams,\n    public modalController: ModalController\n  ) {\n\n    this.form = new FormGroup({\n      'name': new FormControl('', Validators.compose([\n         Validators.required\n      ])),\n      'percent': new FormControl('', Validators.compose([\n        Validators.required\n      ])),\n     'description': new FormControl(''),\n     });\n  }\n \n  ngOnInit(){\n    this.authService.userData$.subscribe((res:any) => {\n      this.displayUserData=res\n      })\n   }\n\n   saveForm(): void {\n    console.log('do Log In');\n     this.desabled=true;\n     let form = new FormData();\n      form.append('name', this.form.value.name);\n      form.append('description', this.form.value.description);\n      form.append('percent', this.form.value.percent);\n      form.append('auth_token',this.displayUserData.auth_token);\n      \n     \n    this.apisService.taxAdd(form).subscribe((result: any) => {\n      this.desabled=false;\n                this.toastService.presentToast('Successfully added');\n                 this.modalController.dismiss(result.data);\n            },\n            (error: any)=>{\n              this.desabled=false;\n              if(error.status==0){\n                this.toastService.presentToast('Connection failed');\n              }\n              if(error.status==401){\n                this.toastService.presentToast('Authentcation failed');\n              }\n            }  \n     )\n   }\n   close()\n   {\n     this.modalController.dismiss([]);\n   }\n\n}\n"]}