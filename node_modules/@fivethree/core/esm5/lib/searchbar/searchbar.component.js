/**
 * @fileoverview added by tsickle
 * Generated from: lib/searchbar/searchbar.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, Renderer2 } from '@angular/core';
import { trigger, transition, style, animate, state } from '@angular/animations';
var FivSearchbar = /** @class */ (function () {
    function FivSearchbar(renderer) {
        this.renderer = renderer;
        this.searching = false;
        this.titleVisible = true;
        this.closeButtonVisible = false;
        this.smallWidth = 120;
        this.searchIcon = 'search';
        this.closeIcon = 'close';
        this._small = false;
        this.fivInputChange = new EventEmitter();
        this.fivClose = new EventEmitter();
        this.open = new EventEmitter();
        this.state = 'normal';
    }
    Object.defineProperty(FivSearchbar.prototype, "small", {
        get: /**
         * @return {?}
         */
        function () {
            return this._small;
        },
        set: /**
         * @param {?} s
         * @return {?}
         */
        function (s) {
            if (s && !this._small) {
                this.shrink();
            }
            else if (!s && this._small) {
                this.grow();
            }
            this._small = s;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FivSearchbar.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.state = this._small ? 'small' : 'normal';
    };
    /**
     * @return {?}
     */
    FivSearchbar.prototype.shrink = /**
     * @return {?}
     */
    function () {
        this.state = 'small';
    };
    /**
     * @return {?}
     */
    FivSearchbar.prototype.grow = /**
     * @return {?}
     */
    function () {
        this.state = 'normal';
    };
    /**
     * @return {?}
     */
    FivSearchbar.prototype.openSearchbar = /**
     * @return {?}
     */
    function () {
        if (this._small) {
            this.state = 'normal';
        }
        this._open();
    };
    /**
     * @return {?}
     */
    FivSearchbar.prototype.toggleSearchbar = /**
     * @return {?}
     */
    function () {
        if (this.searching) {
            this.closeSearchbar();
        }
        else {
            this.openSearchbar();
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FivSearchbar.prototype.searchBarStateChange = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event.fromState === 'normal' && event.toState === 'small') {
        }
        if (event.fromState === 'small' && event.toState === 'normal') {
        }
    };
    /**
     * @private
     * @return {?}
     */
    FivSearchbar.prototype._open = /**
     * @private
     * @return {?}
     */
    function () {
        this.searching = true;
        this.titleVisible = false;
        this.open.emit();
    };
    /**
     * @return {?}
     */
    FivSearchbar.prototype.closeSearchbar = /**
     * @return {?}
     */
    function () {
        if (this.small) {
            this.state = 'small';
        }
        this.searching = false;
        this.fivClose.emit();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FivSearchbar.prototype.searchAnimDone = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event.fromState !== 'void') {
            this.closeButtonVisible = true;
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    FivSearchbar.prototype.closeAnimDone = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event.fromState !== 'void') {
            this.searching = false;
        }
    };
    /**
     * @param {?} event
     * @param {?} input
     * @return {?}
     */
    FivSearchbar.prototype.seachbarAnimDone = /**
     * @param {?} event
     * @param {?} input
     * @return {?}
     */
    function (event, input) {
        if (event.fromState !== 'void') {
            this.titleVisible = true;
        }
        else {
            input.setFocus();
        }
    };
    FivSearchbar.decorators = [
        { type: Component, args: [{
                    selector: 'fiv-searchbar',
                    template: "<ion-toolbar [@searchbarAnim]=\"{value:state, params: {width: smallWidth}}\"\n  (@searchbarAnim.done)=\"searchBarStateChange($event)\" [ngClass]=\"{'small': state === 'small'}\">\n  <ion-buttons slot=\"start\">\n    <ng-content select=\"[start]\"></ng-content>\n\n  </ion-buttons>\n  <ion-title [@titleAnim] *ngIf=\"titleVisible && state !== 'small'\">{{title}}</ion-title>\n  <ion-input (ionChange)=\"fivInputChange.emit($event)\" [placeholder]=\"!titleVisible ? placeholder : ''\" autofocus #input\n    class=\"searchbarbar\" [@titleAnim] (@titleAnim.done)=\"seachbarAnimDone($event,input)\" *ngIf=\"searching\">\n  </ion-input>\n\n  <ion-buttons slot=\"end\">\n    <ion-button (click)=\"toggleSearchbar()\">\n      <fiv-icon slot=\"icon-only\" [name]=\"searching ? closeIcon : searchIcon\"></fiv-icon>\n    </ion-button>\n    <ng-content select=\"[end]\"></ng-content>\n  </ion-buttons>\n</ion-toolbar>",
                    animations: [
                        trigger('searchbarAnim', [
                            transition('small => normal', [animate('125ms ease-out')]),
                            transition('normal => small', [animate('95ms ease-in')]),
                            state('small', style({ width: '{{width}}px' }), {
                                params: { width: 120 }
                            }),
                            state('normal', style({ width: '100%' }))
                        ]),
                        trigger('titleAnim', [
                            transition('void => *', [
                                style({ opacity: '0', transform: 'translateY(-20%)' }),
                                animate('175ms ease-out', style({ opacity: '1', transform: 'translateY(0)' }))
                            ])
                        ])
                    ],
                    styles: [":host{position:relative;display:block;width:100%;--fiv-toolbar-background:var(--ion-color-light)}ion-toolbar{box-shadow:0 1px 4px rgba(0,0,0,.25);transition:border-bottom-right-radius 85ms;margin-top:env(safe-area-inset-top);--background:var(--fiv-toolbar-background)}ion-toolbar.small{border-bottom-right-radius:12px}.searchbarbar{float:right}"]
                }] }
    ];
    /** @nocollapse */
    FivSearchbar.ctorParameters = function () { return [
        { type: Renderer2 }
    ]; };
    FivSearchbar.propDecorators = {
        title: [{ type: Input }],
        placeholder: [{ type: Input }],
        smallWidth: [{ type: Input }],
        searchIcon: [{ type: Input }],
        closeIcon: [{ type: Input }],
        small: [{ type: Input }],
        fivInputChange: [{ type: Output }],
        fivClose: [{ type: Output }],
        open: [{ type: Output }]
    };
    return FivSearchbar;
}());
export { FivSearchbar };
if (false) {
    /** @type {?} */
    FivSearchbar.prototype.searching;
    /** @type {?} */
    FivSearchbar.prototype.titleVisible;
    /** @type {?} */
    FivSearchbar.prototype.closeButtonVisible;
    /** @type {?} */
    FivSearchbar.prototype.title;
    /** @type {?} */
    FivSearchbar.prototype.placeholder;
    /** @type {?} */
    FivSearchbar.prototype.smallWidth;
    /** @type {?} */
    FivSearchbar.prototype.searchIcon;
    /** @type {?} */
    FivSearchbar.prototype.closeIcon;
    /** @type {?} */
    FivSearchbar.prototype._small;
    /** @type {?} */
    FivSearchbar.prototype.fivInputChange;
    /** @type {?} */
    FivSearchbar.prototype.fivClose;
    /** @type {?} */
    FivSearchbar.prototype.open;
    /** @type {?} */
    FivSearchbar.prototype.state;
    /** @type {?} */
    FivSearchbar.prototype.renderer;
}
//# sourceMappingURL=data:application/json;base64,