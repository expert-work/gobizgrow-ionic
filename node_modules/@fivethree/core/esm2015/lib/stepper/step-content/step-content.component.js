/**
 * @fileoverview added by tsickle
 * Generated from: lib/stepper/step-content/step-content.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, ViewChild, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';
import { FivStepHeader } from '../step-header/step-header.component';
import { FivExpandable } from '../../expandable/expandable.component';
export class FivStepContent {
    /**
     * @param {?} change
     */
    constructor(change) {
        this.change = change;
        this.isLast = false;
        this.isOpen = false;
        this.title = '';
        this.subtitle = '';
        this.fivDidOpen = new EventEmitter();
        this.fivDidClose = new EventEmitter();
        this.fivClick = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    open() {
        this.isOpen = true;
        this.change.detectChanges();
    }
    /**
     * @return {?}
     */
    close() {
        this.isOpen = false;
        this.change.detectChanges();
    }
    /**
     * @return {?}
     */
    completeAndClose() {
        this.close();
        this.complete();
    }
    /**
     * @return {?}
     */
    complete() {
        this.header.complete();
    }
    /**
     * @return {?}
     */
    reset() {
        this.header.reset();
    }
    /**
     * @return {?}
     */
    afterClose() {
        this.fivDidClose.emit(this);
    }
    /**
     * @return {?}
     */
    afterOpen() {
        this.fivDidOpen.emit(this);
    }
    /**
     * @return {?}
     */
    click() {
        this.fivClick.emit(this);
    }
}
FivStepContent.decorators = [
    { type: Component, args: [{
                selector: 'fiv-step-content',
                template: "<div *ngIf=\"!isLast\" class=\"timeline\"></div>\n<fiv-expandable [isOpen]=\"isOpen\" (fivDidClose)=\"afterClose()\" (fivDidOpen)=\"afterOpen()\" #self>\n  <div header class=\"ion-activatable\" (click)=\"click()\">\n    <fiv-step-header #header [index]=\"index\" [icon]=\"icon\">\n      <div class=\"header-title\">{{title}}</div>\n      <div class=\"header-subtitle\">{{subtitle}}</div>\n\n      <ion-ripple-effect type=\"bounded\"></ion-ripple-effect>\n    </fiv-step-header>\n  </div>\n  <ng-container content>\n    <div class=\"step-content\">\n      <ng-content></ng-content>\n    </div>\n  </ng-container>\n</fiv-expandable>",
                styles: [":host{display:block;width:100%;position:relative}.step-content{padding-left:44px;padding-bottom:24px}.timeline{width:1px;height:calc(100% - 32px);position:absolute;background:var(--fiv-color-timeline,var(--ion-color-medium));left:27.5px;top:36px}.ion-activatable{position:relative;overflow:hidden}.header-title{color:var(--fiv-color-title,var(--ion-color-dark))}.header-subtitle{color:var(--fiv-color-subtitle,var(--ion-color-medium));font-size:.8em}"]
            }] }
];
/** @nocollapse */
FivStepContent.ctorParameters = () => [
    { type: ChangeDetectorRef }
];
FivStepContent.propDecorators = {
    index: [{ type: Input }],
    icon: [{ type: Input }],
    isLast: [{ type: Input }],
    isOpen: [{ type: Input }],
    title: [{ type: Input }],
    subtitle: [{ type: Input }],
    fivDidOpen: [{ type: Output }],
    fivDidClose: [{ type: Output }],
    fivClick: [{ type: Output }],
    step: [{ type: ViewChild, args: ['self', { static: false },] }],
    header: [{ type: ViewChild, args: ['header', { static: false },] }]
};
if (false) {
    /** @type {?} */
    FivStepContent.prototype.index;
    /** @type {?} */
    FivStepContent.prototype.icon;
    /** @type {?} */
    FivStepContent.prototype.isLast;
    /** @type {?} */
    FivStepContent.prototype.isOpen;
    /** @type {?} */
    FivStepContent.prototype.title;
    /** @type {?} */
    FivStepContent.prototype.subtitle;
    /** @type {?} */
    FivStepContent.prototype.fivDidOpen;
    /** @type {?} */
    FivStepContent.prototype.fivDidClose;
    /** @type {?} */
    FivStepContent.prototype.fivClick;
    /** @type {?} */
    FivStepContent.prototype.step;
    /** @type {?} */
    FivStepContent.prototype.header;
    /**
     * @type {?}
     * @private
     */
    FivStepContent.prototype.change;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcC1jb250ZW50LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmaXZldGhyZWUvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9zdGVwcGVyL3N0ZXAtY29udGVudC9zdGVwLWNvbnRlbnQuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUNMLFNBQVMsRUFFVCxTQUFTLEVBQ1QsS0FBSyxFQUNMLE1BQU0sRUFDTixZQUFZLEVBQ1osaUJBQWlCLEVBQ2xCLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUNyRSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFPdEUsTUFBTSxPQUFPLGNBQWM7Ozs7SUFjekIsWUFBb0IsTUFBeUI7UUFBekIsV0FBTSxHQUFOLE1BQU0sQ0FBbUI7UUFYcEMsV0FBTSxHQUFHLEtBQUssQ0FBQztRQUNmLFdBQU0sR0FBRyxLQUFLLENBQUM7UUFDZixVQUFLLEdBQUcsRUFBRSxDQUFDO1FBQ1gsYUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNiLGVBQVUsR0FBaUMsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUM5RCxnQkFBVyxHQUFpQyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQy9ELGFBQVEsR0FBaUMsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUt0QixDQUFDOzs7O0lBRWpELFFBQVEsS0FBSSxDQUFDOzs7O0lBRWIsSUFBSTtRQUNGLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBQ25CLElBQUksQ0FBQyxNQUFNLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDOUIsQ0FBQzs7OztJQUVELEtBQUs7UUFDSCxJQUFJLENBQUMsTUFBTSxHQUFHLEtBQUssQ0FBQztRQUNwQixJQUFJLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBQzlCLENBQUM7Ozs7SUFFRCxnQkFBZ0I7UUFDZCxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDYixJQUFJLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDbEIsQ0FBQzs7OztJQUVELFFBQVE7UUFDTixJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3pCLENBQUM7Ozs7SUFFRCxLQUFLO1FBQ0gsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUN0QixDQUFDOzs7O0lBRUQsVUFBVTtRQUNSLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzlCLENBQUM7Ozs7SUFFRCxTQUFTO1FBQ1AsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7OztJQUVELEtBQUs7UUFDSCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMzQixDQUFDOzs7WUF4REYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxrQkFBa0I7Z0JBQzVCLGtvQkFBNEM7O2FBRTdDOzs7O1lBVEMsaUJBQWlCOzs7b0JBV2hCLEtBQUs7bUJBQ0wsS0FBSztxQkFDTCxLQUFLO3FCQUNMLEtBQUs7b0JBQ0wsS0FBSzt1QkFDTCxLQUFLO3lCQUNMLE1BQU07MEJBQ04sTUFBTTt1QkFDTixNQUFNO21CQUVOLFNBQVMsU0FBQyxNQUFNLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFO3FCQUNuQyxTQUFTLFNBQUMsUUFBUSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRTs7OztJQVh0QywrQkFBdUI7O0lBQ3ZCLDhCQUFzQjs7SUFDdEIsZ0NBQXdCOztJQUN4QixnQ0FBd0I7O0lBQ3hCLCtCQUFvQjs7SUFDcEIsa0NBQXVCOztJQUN2QixvQ0FBd0U7O0lBQ3hFLHFDQUF5RTs7SUFDekUsa0NBQXNFOztJQUV0RSw4QkFBMEQ7O0lBQzFELGdDQUE4RDs7Ozs7SUFFbEQsZ0NBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgQ29tcG9uZW50LFxuICBPbkluaXQsXG4gIFZpZXdDaGlsZCxcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgRXZlbnRFbWl0dGVyLFxuICBDaGFuZ2VEZXRlY3RvclJlZlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZpdlN0ZXBIZWFkZXIgfSBmcm9tICcuLi9zdGVwLWhlYWRlci9zdGVwLWhlYWRlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgRml2RXhwYW5kYWJsZSB9IGZyb20gJy4uLy4uL2V4cGFuZGFibGUvZXhwYW5kYWJsZS5jb21wb25lbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdmaXYtc3RlcC1jb250ZW50JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3N0ZXAtY29udGVudC5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3N0ZXAtY29udGVudC5jb21wb25lbnQuc2NzcyddXG59KVxuZXhwb3J0IGNsYXNzIEZpdlN0ZXBDb250ZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQElucHV0KCkgaW5kZXg6IG51bWJlcjtcbiAgQElucHV0KCkgaWNvbjogc3RyaW5nO1xuICBASW5wdXQoKSBpc0xhc3QgPSBmYWxzZTtcbiAgQElucHV0KCkgaXNPcGVuID0gZmFsc2U7XG4gIEBJbnB1dCgpIHRpdGxlID0gJyc7XG4gIEBJbnB1dCgpIHN1YnRpdGxlID0gJyc7XG4gIEBPdXRwdXQoKSBmaXZEaWRPcGVuOiBFdmVudEVtaXR0ZXI8Rml2U3RlcENvbnRlbnQ+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBAT3V0cHV0KCkgZml2RGlkQ2xvc2U6IEV2ZW50RW1pdHRlcjxGaXZTdGVwQ29udGVudD4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gIEBPdXRwdXQoKSBmaXZDbGljazogRXZlbnRFbWl0dGVyPEZpdlN0ZXBDb250ZW50PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICBAVmlld0NoaWxkKCdzZWxmJywgeyBzdGF0aWM6IGZhbHNlIH0pIHN0ZXA6IEZpdkV4cGFuZGFibGU7XG4gIEBWaWV3Q2hpbGQoJ2hlYWRlcicsIHsgc3RhdGljOiBmYWxzZSB9KSBoZWFkZXI6IEZpdlN0ZXBIZWFkZXI7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBjaGFuZ2U6IENoYW5nZURldGVjdG9yUmVmKSB7fVxuXG4gIG5nT25Jbml0KCkge31cblxuICBvcGVuKCkge1xuICAgIHRoaXMuaXNPcGVuID0gdHJ1ZTtcbiAgICB0aGlzLmNoYW5nZS5kZXRlY3RDaGFuZ2VzKCk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICB0aGlzLmlzT3BlbiA9IGZhbHNlO1xuICAgIHRoaXMuY2hhbmdlLmRldGVjdENoYW5nZXMoKTtcbiAgfVxuXG4gIGNvbXBsZXRlQW5kQ2xvc2UoKSB7XG4gICAgdGhpcy5jbG9zZSgpO1xuICAgIHRoaXMuY29tcGxldGUoKTtcbiAgfVxuXG4gIGNvbXBsZXRlKCkge1xuICAgIHRoaXMuaGVhZGVyLmNvbXBsZXRlKCk7XG4gIH1cblxuICByZXNldCgpIHtcbiAgICB0aGlzLmhlYWRlci5yZXNldCgpO1xuICB9XG5cbiAgYWZ0ZXJDbG9zZSgpIHtcbiAgICB0aGlzLmZpdkRpZENsb3NlLmVtaXQodGhpcyk7XG4gIH1cblxuICBhZnRlck9wZW4oKSB7XG4gICAgdGhpcy5maXZEaWRPcGVuLmVtaXQodGhpcyk7XG4gIH1cblxuICBjbGljaygpIHtcbiAgICB0aGlzLmZpdkNsaWNrLmVtaXQodGhpcyk7XG4gIH1cbn1cbiJdfQ==