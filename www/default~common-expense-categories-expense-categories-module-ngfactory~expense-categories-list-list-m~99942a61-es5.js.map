{"version":3,"sources":["webpack:///src/app/expense-categories/new/new.page.ts","webpack:///src/app/services/apis.service.ts","webpack:///src/app/services/toast.service.ts"],"names":["NewPage","router","menu","authService","apisService","storageService","toastService","navParams","modalController","vehicles_json_data","validation_messages","type","message","form","compose","required","userData$","subscribe","res","displayUserData","console","log","desabled","FormData","append","value","name","description","auth_token","expenseCategoryAdd","result","presentToast","dismiss","data","error","status","ApisService","httpService","http","imageUploadUrl","apiUrl","get","blobData","ext","formData","post","file","split","pop","id","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","push","blob","Blob","fileUrl","myArray","reduce","unique","o","some","obj","sort","a","b","x","characters","charactersLength","charAt","Math","floor","random","postData","ToastService","toastController","infoMessage","create","duration","toast","present"],"mappings":"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","file":"default~common-expense-categories-expense-categories-module-ngfactory~expense-categories-list-list-m~99942a61-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service'\nimport { ApisService } from '../../services/apis.service'\n\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.page.html',\n  styleUrls: ['./new.page.scss'],\n})\nexport class NewPage implements OnInit {\n\n  form: FormGroup;\n  desabled: boolean;\n  displayUserData: any; \n  vehicles_json_data=[];\n\n  validation_messages = {\n    'name': [\n      { type: 'required', message: 'Name is required.' },\n      ]\n  };\n\n \n\n  constructor(\n    public router: Router,\n    public menu: MenuController,\n    private authService: AuthService,\n    private apisService:ApisService,\n     private storageService: StorageService,\n    private toastService: ToastService,\n    navParams: NavParams,\n    public modalController: ModalController\n  ) {\n\n    this.form = new FormGroup({\n      'name': new FormControl('', Validators.compose([\n         Validators.required\n      ])),\n     'description': new FormControl(''),\n     });\n  }\n \n  ngOnInit(){\n    this.authService.userData$.subscribe((res:any) => {\n      this.displayUserData=res\n      })\n   }\n\n   saveForm(): void {\n    console.log('do Log In');\n     this.desabled=true;\n     let form = new FormData();\n      form.append('name', this.form.value.name);\n      form.append('description', this.form.value.description);\n      form.append('auth_token',this.displayUserData.auth_token);\n \n     \n    this.apisService.expenseCategoryAdd(form).subscribe((result: any) => {\n      this.desabled=false;\n                this.toastService.presentToast('Successfully added');\n                 this.modalController.dismiss(result.data);\n            },\n            (error: any)=>{\n              this.desabled=false;\n              if(error.status==0){\n                this.toastService.presentToast('Connection failed');\n              }\n              if(error.status==401){\n                this.toastService.presentToast('Authentcation failed');\n              }\n            }  \n     )\n   }\n   close()\n   {\n     this.modalController.dismiss([]);\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpService } from './http.service';\nimport { HttpClient } from '@angular/common/http';\nimport { StorageService } from './storage.service';\nimport { environment } from '../../environments/environment';\n\nexport interface ApiImage {\n  _id: string;\n  name: string;\n  createdAt: Date;\n  url: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApisService {\n\n  constructor(\n    private httpService: HttpService,\n    private http: HttpClient,\n    private storageService: StorageService,\n    private router: Router\n  ) { }\n\n\n\n\n\n  // Image Upload Starts\n\n  imageUploadUrl = environment.apiUrl+'uploads';\n\n  getImages() {\n    return this.http.get<ApiImage[]>(`${this.imageUploadUrl}/image`);\n  }\n \n  uploadImage(blobData, name, ext,auth_token:any) {\n    const formData = new FormData();\n    formData.append('file', blobData, `myimage.${ext}`);\n    formData.append('name', name);\n    formData.append('auth_token', auth_token);\n\n    return this.http.post(`${this.imageUploadUrl}`, formData);\n  }\n \n  uploadImageFile(file: File, auth_token:any) {\n    const ext = file.name.split('.').pop();\n    const formData = new FormData();\n    formData.append('file', file, `myimage.${ext}`);\n    formData.append('name', file.name);\n    formData.append('auth_token', auth_token);\n\n    return this.http.post(`${this.imageUploadUrl}`, formData);\n  }\n \n  \n  deleteImage(id) {\n    return this.http.delete(`${this.imageUploadUrl}/image/${id}`);\n  }\n\n  b64toBlob(b64Data, contentType = '', sliceSize = 512) {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n \n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n \n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n \n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n \n    const blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n  }\n  // Image Upload End\n\n\n\n  getImageUrl(file:any){\n    return environment.fileUrl+file;\n  }\n  getThumbImageUrl(file:any){\n    return environment.fileUrl+'thumb/'+file;\n  }\n\n  sortArray(myArray:any) {\n    var result = myArray.reduce((unique, o) => {\n      if(!unique.some(obj => obj.id === o.id)) {\n        unique.push(o);\n      }\n      return unique;\n    },[]);\n   \n    return result.sort(function(a, b) {\n        return b.id-a.id ;\n    });\n}\n\nisDefined(x:any) {\n  if (x == null) {\n      return false;\n  }\n  if (x === null) {\n      return false;\n  }\n  if (typeof x === 'undefined') {\n      return false;\n  }\n  return true;\n}\n\n makeid(length:Number) {\n  var result           = '';\n  var characters       = 'abcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n\n\nsignupComplete(postData: any): Observable<any> {\n  return this.httpService.post('signup-complete',postData);\n}\n\n\n //Customers\n\ndashboard(postData: any): Observable<any> {\n  return this.httpService.post('dashboard',postData);\n}\n\ncustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/all',postData);\n}\n\ninvoices(postData: any): Observable<any> {\n  return this.httpService.post('invoices/all',postData);\n}\n\nnextInvoice(postData: any): Observable<any> {\n  return this.httpService.post('invoices/next',postData);\n\n}\n\n\nnextEstimate(postData: any): Observable<any> {\n  return this.httpService.post('estimates/next',postData);\n\n}\nnextJob(postData: any): Observable<any> {\n  return this.httpService.post('jobs/next',postData);\n\n}\n\n\n\nitems(postData: any): Observable<any> {\n  return this.httpService.post('items/all',postData);\n}\ncategories(postData: any): Observable<any> {\n  return this.httpService.post('categories/all',postData);\n}\n\npayments(postData: any): Observable<any> {\n  return this.httpService.post('payments/all',postData);\n}\n\nexpenses(postData: any): Observable<any> {\n  return this.httpService.post('expenses/all',postData);\n}\n\njobs(postData: any): Observable<any> {\n  return this.httpService.post('jobs/all',postData);\n}\nexpenseCategories(postData: any): Observable<any> {\n  return this.httpService.post('expenses-categories/all',postData);\n}\n\n\ntaxes(postData: any): Observable<any> {\n  return this.httpService.post('taxes/all',postData);\n}\nimages(postData: any): Observable<any> {\n  return this.httpService.post('images/all',postData);\n}\n\ndeleteCustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/delete',postData);\n}\n\ncustomerAdd(postData: any): Observable<any> {\n  return this.httpService.post('customers/add',postData);\n}\ncustomerEdit(auth_token:any,postData: any): Observable<any> {\n  return this.httpService.post('customers/edit/'+auth_token,postData);\n}\n\ncategoryAdd(postData: any): Observable<any> {\n  return this.httpService.post('categories/add',postData);\n}\n\ncategoryUpdate(postData: any): Observable<any> {\n  return this.httpService.post('categories/edit',postData);\n}\n\nitemAdd(postData: any): Observable<any> {\n  return this.httpService.post('items/add',postData);\n}\nitemUpdate(postData: any): Observable<any> {\n  return this.httpService.post('items/edit',postData);\n}\n\n\ntaxAdd(postData: any): Observable<any> {\n  return this.httpService.post('tax/add',postData);\n}\ntaxUpdate(postData: any): Observable<any> {\n  return this.httpService.post('tax/edit',postData);\n}\n\ninvoiceAdd(postData: any): Observable<any> {\n  return this.httpService.post('invoices/add',postData);\n}\n\ninvoiceUpdate(postData: any): Observable<any> {\n  return this.httpService.post('invoices/edit',postData);\n}\n\n\n\nestimateAdd(postData: any): Observable<any> {\n  return this.httpService.post('estimates/add',postData);\n}\n\nestimateUpdate(postData: any): Observable<any> {\n  return this.httpService.post('estimates/edit',postData);\n}\n\n\njobAdd(postData: any): Observable<any> {\n  return this.httpService.post('jobs/add',postData);\n}\n\njobUpdate(postData: any): Observable<any> {\n  return this.httpService.post('jobs/edit',postData);\n}\n\nexpensesAdd(postData: any): Observable<any> {\n  return this.httpService.post('expenses/add',postData);\n\n}\n\nexpensesUpdate(postData: any): Observable<any> {\n  return this.httpService.post('expenses/edit',postData);\n\n}\n\n //Invoices\n //Items\n //Payments\n //Expenses\n //Items Categories\n //Expenses Categories\n //Taxes\n //Payment Merhods\n\n \n expenseCategoryUpdate(postData: any): Observable<any> {\n  return this.httpService.post('expenses-categories/edit',postData);\n}\n\nexpenseCategoryAdd(postData: any): Observable<any> {\n  return this.httpService.post('expenses-categories/add',postData);\n\n}\n\n // get Industries industries\n  industries(postData: any): Observable<any> {\n    return this.httpService.post('industries',postData);\n  }\n  // get All Estimates\n  estimates(postData: any): Observable<any> {\n    return this.httpService.post('estimates/all',postData);\n  }\n\n  \n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(public toastController: ToastController) { }\n  \n  async presentToast(infoMessage: string) {\n     const toast = await this.toastController.create({\n       message:infoMessage,\n       duration:3000\n     });\n     toast.present();\n\n  }\n}\n"]}