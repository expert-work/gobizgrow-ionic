{"version":3,"sources":["webpack:///src/app/customers/edit/edit-routing.module.ts","webpack:///src/app/customers/edit/edit.module.ts","webpack:///src/app/customers/edit/edit.page.html","webpack:///src/app/customers/edit/edit.page.ts","webpack:///src/app/customers/vehicle/vehicle.page.ts","webpack:///src/app/services/apis.service.ts","webpack:///src/app/services/toast.service.ts"],"names":["routes","path","component","EditPageRoutingModule","EditPageModule","EditPage","router","menu","authService","apisService","storageService","toastService","navParams","modalController","vehicles_json_data","validation_messages","type","message","data","get","console","log","vehicles","form","id","email","compose","required","pattern","name","phone","street_address","city","state","zip_code","customer_notes","userData$","subscribe","res","displayUserData","desabled","FormData","append","value","JSON","stringify","customerEdit","auth_token","result","presentToast","dismiss","error","status","makeid","make","model","year","color","mileage","notes","create","componentProps","backdropDismiss","modal","onDidDismiss","then","isDefined","push","sortArray","present","tempArray","map","item","VehiclePage","ApisService","httpService","myArray","reduce","unique","o","some","obj","sort","a","b","x","length","characters","charactersLength","i","charAt","Math","floor","random","postData","post","ToastService","toastController","infoMessage","duration","toast"],"mappings":"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","file":"default~customers-edit-edit-module-ngfactory~customers-list-list-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditPage } from './edit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditPageRoutingModule } from './edit-routing.module';\n\nimport { EditPage } from './edit.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [EditPage]\n})\nexport class EditPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button  (click)=\"close()\">\n        <span ion-text color=\"primary\" showWhen=\"ios\"></span>\n        <ion-icon name=\"close\" showWhen=\"android,windows\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>Edit Customer</ion-title>\n    <ion-button slot=\"end\" class=\"button button-clear button-positive\"   style=\"color: white;\"   [disabled]=\"!form.valid || desabled\"  (click)=\"saveForm()\">  \n      <ion-icon name=\"share\"></ion-icon>\n    </ion-button>\n\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content>\n     \n\n\n <div  class=\"dispplay-content-center\">\n      \n  \n   <form [formGroup]=\"form\" (ngSubmit)=\"saveForm()\" class=\"forms\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n      <ion-item class=\"input-item\">\n        <ion-input type=\"email\" placeholder=\"Email\" formControlName=\"email\" clearInput autocapitalize=\"off\" inputmode=\"email\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.email\">\n          <div class=\"error-message\" *ngIf=\"form.get('email').hasError(validation.type) && (form.get('email').dirty || form.get('email').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"Name\" formControlName=\"name\" clearInput autocapitalize=\"off\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.name\">\n          <div class=\"error-message\" *ngIf=\"form.get('name').hasError(validation.type) && (form.get('name').dirty || form.get('name').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n\n      <ion-item class=\"input-item\">\n        <ion-input type=\"phone\" placeholder=\"Phone\" formControlName=\"phone\" clearInput autocapitalize=\"off\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.phone\">\n          <div class=\"error-message\" *ngIf=\"form.get('phone').hasError(validation.type) && (form.get('phone').dirty || form.get('phone').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"Street Address\" formControlName=\"street_address\" clearInput autocapitalize=\"off\" ></ion-input>\n      </ion-item>\n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"City\" formControlName=\"city\" clearInput autocapitalize=\"off\" ></ion-input>\n      </ion-item>\n      \n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"State\" formControlName=\"state\" clearInput autocapitalize=\"off\" ></ion-input>\n      </ion-item>\n\n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"Zip Code\" formControlName=\"zip_code\" clearInput autocapitalize=\"off\" ></ion-input>\n      </ion-item>\n\n      <ion-item class=\"input-item\">\n        <ion-textarea type=\"text\" placeholder=\"Customer Notes\" formControlName=\"customer_notes\" clearInput autocapitalize=\"off\" ></ion-textarea>\n\n      </ion-item>\n    </ion-list>\n\n    <ion-list>  \n      <ion-item  lines=\"none\" *ngFor=\"let vehicle of vehicles_json_data\"  style=\"margin: 10px 0px;border: 1px solid rgba(0, 0, 0, 0.08);\">\n            <ion-label (click)=\"openModal(x)\">\n              <h3>{{vehicle.make}} {{vehicle.model}} {{vehicle.year}}</h3>\n            </ion-label>\n            <ion-icon name=\"close\" color=\"danger\"  (click)=\"deleteVehicle(vehicle.id)\" slot=\"end\"></ion-icon>\n            <ion-icon name=\"create\" color=\"success\"  slot=\"end\" (click)=\"editVehicleModal(vehicle)\"></ion-icon>\n      </ion-item>\n    </ion-list>\n\n    \n    <ion-button slot=\"end\" class=\"button button-clear button-positive\" (click)=\"openVehicleModal()\" >  \n      <ion-icon name=\"add\"></ion-icon> Vehicle\n    </ion-button>\n    \n\n    <div class=\"padding20\"></div>\n\n    <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\"   [disabled]=\"!form.valid || desabled\">Save Now</ion-button>\n    <div class=\"padding20\"></div>\n  </form>\n</div> \n</ion-content> ","import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service'\nimport { ApisService } from '../../services/apis.service'\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\nimport { VehiclePage} from '../vehicle/vehicle.page'\n\n\n\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.page.html',\n  styleUrls: ['./edit.page.scss'],\n})\nexport class EditPage implements OnInit {\n  \n  data:any\n\n  form: FormGroup;\n  desabled: boolean;\n  displayUserData: any; \n  vehicles_json_data=[];\n\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Enter a valid email.' }\n    ],\n    'name': [\n      { type: 'required', message: 'Name is required.' },\n      { type: 'minlength', message: 'Password must be at least 2 characters long.' }\n    ],\n    'phone': [\n      { type: 'required', message: 'Phone is required.' },\n     ]\n  };\n\n \n\n  constructor(\n    public router: Router,\n    public menu: MenuController,\n    private authService: AuthService,\n    private apisService:ApisService,\n     private storageService: StorageService,\n    private toastService: ToastService,\n    navParams: NavParams,\n    public modalController: ModalController\n  ) {\n    this.data=navParams.get('data');\n    console.log(this.data);\n    this.vehicles_json_data=this.data.vehicles;\n     this.form = new FormGroup({\n      'id': new FormControl(this.data.id),\n      'email': new FormControl(this.data.email, Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      'name': new FormControl(this.data.name, Validators.compose([\n         Validators.required\n      ])),\n      'phone': new FormControl(this.data.phone, Validators.compose([\n        Validators.required\n     ])),\n     'street_address': new FormControl(this.data.street_address),\n     'city': new FormControl(this.data.city),\n     'state': new FormControl(this.data.state),\n     'zip_code': new FormControl(this.data.zip_code),\n     'customer_notes': new FormControl(this.data.customer_notes),\n \n    });\n  }\n \n  ngOnInit(){\n    this.authService.userData$.subscribe((res:any) => {\n      this.displayUserData=res\n      })\n   }\n\n\n  saveForm(): void {\n    console.log('do Log In');\n     this.desabled=true;\n     let form = new FormData();\n     form.append('id', this.form.value.id);\n     form.append('email', this.form.value.email);\n     form.append('name', this.form.value.name);\n     form.append('phone', this.form.value.phone);\n     form.append('street_address', this.form.value.street_address);\n     form.append('city', this.form.value.city);\n     form.append('state', this.form.value.state);\n     form.append('zip_code', this.form.value.zip_code);\n     form.append('customer_notes', this.form.value.customer_notes);\n     form.append('vehicles_json_data', JSON.stringify(this.vehicles_json_data));\n     \n    this.apisService.customerEdit(this.data.auth_token ,form).subscribe((result: any) => {\n      this.desabled=false;\n                this.toastService.presentToast('Successfully updated');\n                console.log(result.data);\n                this.modalController.dismiss(result.data);\n            },\n            (error: any)=>{\n              this.desabled=false;\n              if(error.status==0){\n                this.toastService.presentToast('Connection failed');\n              }\n              if(error.status==401){\n                this.toastService.presentToast('Authentcation failed');\n              }\n            }  \n     )\n   }\n\n \n\n  async openVehicleModal() {\n    let data={\n      id:this.apisService.makeid(10),\n      make:'',\n      model:'',\n      year:'',\n      color:'',\n      mileage:'',\n      notes:'',\n    }\n    const modal = await this.modalController.create({\n      component: VehiclePage,\n       componentProps: { data: data },\n       backdropDismiss:false\n    });\n    modal.onDidDismiss().then(data=>{\n        if(this.apisService.isDefined(data.data.id)){\n          this.vehicles_json_data.push(data.data)\n          this.vehicles_json_data=this.apisService.sortArray(this.vehicles_json_data);\n       }\n   \n   \n    })\n    return await modal.present();\n  }\n\n  \n  async editVehicleModal(data) {\n    const modal = await this.modalController.create({\n      component: VehiclePage,\n       componentProps: { data: data },\n       backdropDismiss:false\n    });\n    modal.onDidDismiss().then(data=>{\n        if(this.apisService.isDefined(data.data.id)){\n          let tempArray=[];\n          this.vehicles_json_data.map(function (item) {\n            if(item.id ==data.data.id){ tempArray.push(data.data);  } else {tempArray.push(item); }\n          });\n          this.vehicles_json_data=tempArray;\n       }\n    })\n    return await modal.present();\n  }\n  \n  deleteVehicle(id : Number){\n    let tempArray=[];\n    this.vehicles_json_data.map(function (item) {\n      if(item.id !=id){ tempArray.push(item);  }\n    });\n    this.vehicles_json_data=tempArray;\n  }\n\n  close()\n  {\n    this.modalController.dismiss([]);\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { MenuController } from '@ionic/angular';\n\n\n@Component({\n  selector: 'app-vehicle',\n  templateUrl: './vehicle.page.html',\n  styleUrls: ['./vehicle.page.scss'],\n})\n\n\nexport class VehiclePage  {\n  form: FormGroup;\n  desabled: boolean;\n  data:any;\n  \n\n\n  validation_messages = {\n    'make': [\n      { type: 'required', message: 'Make is required.' },\n     ],\n    'model': [\n      { type: 'required', message: 'Model is required.' },\n     ],\n    'year': [\n      { type: 'required', message: 'Year is required.' },\n     ]\n      \n  };\n\n\n\n\n\n\n  constructor(\n    private modalController: ModalController,\n    private navParams: NavParams\n  ) {\n    this.data=navParams.get('data')\n\n    console.log(this.data);\n    this.form = new FormGroup({\n      'id': new FormControl(this.data.id),\n      'make': new FormControl(this.data.make, Validators.compose([\n        Validators.required,\n       ])),\n       'model': new FormControl(this.data.model, Validators.compose([\n        Validators.required,\n       ])),\n       'year': new FormControl(this.data.year, Validators.compose([\n        Validators.required,\n       ])),\n     'color': new FormControl(this.data.color),\n     'mileage': new FormControl(this.data.mileage),\n     'notes': new FormControl(this.data.notes),\n    });\n  }\n\n\n\n  // id:this.apisService.makeid(10),\n  //     make:'test',\n  //     model:'',\n  //     year:'',\n  //     color:'',\n  //     mileage:'',\n  //     notes:'',\n\n\n  saveForm(){\n    let data={\n      id:this.form.value.id,\n      make:this.form.value.make,\n      model:this.form.value.model,\n      year:this.form.value.year,\n      color:this.form.value.color,\n      mileage:this.form.value.mileage,\n      notes:this.form.value.notes,\n    }\n    this.modalController.dismiss(data);\n\n  }\n\n  close()\n  {\n    this.modalController.dismiss([]);\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpService } from './http.service';\nimport { StorageService } from './storage.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApisService {\n\n  constructor(\n    private httpService: HttpService,\n    private storageService: StorageService,\n    private router: Router\n  ) { }\n\n\n\n  sortArray(myArray:any) {\n    var result = myArray.reduce((unique, o) => {\n      if(!unique.some(obj => obj.id === o.id)) {\n        unique.push(o);\n      }\n      return unique;\n    },[]);\n   \n    return result.sort(function(a, b) {\n        return b.id-a.id ;\n    });\n}\n\nisDefined(x:any) {\n  if (x == null) {\n      return false;\n  }\n  if (x === null) {\n      return false;\n  }\n  if (typeof x === 'undefined') {\n      return false;\n  }\n  return true;\n}\n\n makeid(length:Number) {\n  var result           = '';\n  var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n\n\nsignupComplete(postData: any): Observable<any> {\n  return this.httpService.post('signup-complete',postData);\n}\n\n\n //Customers\n\ndashboard(postData: any): Observable<any> {\n  return this.httpService.post('dashboard',postData);\n}\n\ncustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/all',postData);\n}\n\ninvoices(postData: any): Observable<any> {\n  return this.httpService.post('invoices/all',postData);\n}\n\nitems(postData: any): Observable<any> {\n  return this.httpService.post('items/all',postData);\n}\n\npayments(postData: any): Observable<any> {\n  return this.httpService.post('payments/all',postData);\n}\n\nexpenses(postData: any): Observable<any> {\n  return this.httpService.post('expenses/all',postData);\n}\n\n\n\ndeleteCustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/delete',postData);\n}\n\ncustomerAdd(postData: any): Observable<any> {\n  return this.httpService.post('customers/add',postData);\n}\ncustomerEdit(auth_token:any,postData: any): Observable<any> {\n  return this.httpService.post('customers/edit/'+auth_token,postData);\n}\n\n \n\n //Invoices\n //Items\n //Payments\n //Expenses\n //Items Categories\n //Expenses Categories\n //Taxes\n //Payment Merhods\n\n\n\n\n // get Industries industries\n  industries(postData: any): Observable<any> {\n    return this.httpService.post('industries',postData);\n  }\n  // get All Estimates\n  estimates(postData: any): Observable<any> {\n    return this.httpService.post('estimates/all',postData);\n  }\n\n  \n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(public toastController: ToastController) { }\n  \n  async presentToast(infoMessage: string) {\n     const toast = await this.toastController.create({\n       message:infoMessage,\n       duration:3000\n     });\n     toast.present();\n\n  }\n}\n"]}