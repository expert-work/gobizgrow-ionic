{"version":3,"sources":["webpack:///src/app/language/language.service.ts","webpack:///src/app/shell/data-store.ts","webpack:///src/app/user/profile/user-profile.module.ts","webpack:///src/app/user/profile/user-profile.page.html","webpack:///src/app/user/profile/user-profile.page.ts","webpack:///src/app/user/profile/user-profile.resolver.ts","webpack:///src/app/utils/resolver-helper.ts"],"names":["LanguageService","languages","Array","push","name","code","ShellModel","isShell","DataStore","shellModel","networkDelay","settings","timeline","dataSourceObservable","dataSourceWithShellObservable","AppendShell","subscribe","dataValue","next","asObservable","dataObservable","delayObservable","pipe","delayValue","Object","assign","routes","path","component","resolve","data","UserProfilePageModule","UserProfilePage","route","translate","languageService","alertController","available_languages","subscriptions","resolvedRouteData","extractData","state","profile","getTranslations","onLangChange","error","unsubscribe","getTranslation","currentLang","translations","getLanguages","map","item","type","label","value","checked","create","header","SELECT_LANGUAGE","inputs","cssClass","buttons","text","CANCEL","role","handler","OK","use","alert","present","UserProfileResolver","userService","dataSource","getProfileDataSource","dataStore","getProfileStore","ResolverHelper","source","constructor"],"mappings":"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","file":"user-profile-user-profile-module-ngfactory-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { LanguageModel } from './language.model';\n\n@Injectable()\nexport class LanguageService {\n  languages: Array<LanguageModel> = new Array<LanguageModel>();\n\n   constructor() {\n     this.languages.push(\n      { name: 'English', code: 'en' },\n      { name: 'Spanish', code: 'es' },\n      { name: 'French', code: 'fr' }\n     );\n   }\n\n   getLanguages() {\n     return this.languages;\n   }\n\n }\n","import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\nimport { delay, map, startWith } from 'rxjs/operators';\n\nimport { AppShellConfig } from './config/app-shell.config';\n\nexport class ShellModel {\n  isShell = false;\n}\n\nexport class DataStore<T> {\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\n  // However, in production you should set this delay to 0 in the assets/config/app-shell.config.prod.json file.\n  // tslint:disable-next-line:max-line-length\n  private networkDelay = (AppShellConfig.settings && AppShellConfig.settings.networkDelay) ? AppShellConfig.settings.networkDelay : 0;\n\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\n\n  constructor(private shellModel: T) { }\n\n  // Static function with generics\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\n    const delayObservable = of(true).pipe(\n      delay(networkDelay)\n    );\n\n    // Assign shell flag accordingly\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n    return combineLatest([\n      delayObservable,\n      dataObservable\n    ]).pipe(\n      // Dismiss unnecessary delayValue\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\n      // Set the shell model as the initial value\n      startWith(Object.assign(shellModel, {isShell: true}))\n    );\n  }\n\n  load(dataSourceObservable: Observable<T>): void {\n    const dataSourceWithShellObservable = DataStore.AppendShell(dataSourceObservable, this.shellModel, this.networkDelay);\n\n    dataSourceWithShellObservable\n    .subscribe((dataValue: T & ShellModel) => {\n      this.timeline.next(dataValue);\n    });\n  }\n\n  public get state(): Observable<T & ShellModel> {\n    return this.timeline.asObservable();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserService } from '../user.service';\nimport { UserProfilePage } from './user-profile.page';\nimport { UserProfileResolver } from './user-profile.resolver';\nimport { ComponentsModule } from '../../components/components.module';\nimport { LanguageService } from '../../language/language.service';\nimport { TranslateModule } from '@ngx-translate/core';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserProfilePage,\n    resolve: {\n      data: UserProfileResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    TranslateModule,\n    ComponentsModule,\n    RouterModule.forChild(routes),\n    HttpClientModule\n  ],\n  declarations: [UserProfilePage],\n  providers: [\n    UserProfileResolver,\n    UserService,\n    LanguageService\n  ]\n})\nexport class UserProfilePageModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"user-profile-content\">\n  <ion-row class=\"user-details-section\">\n    <ion-col class=\"user-image-wrapper\">\n      <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n        <app-image-shell class=\"user-image\" animation=\"spinner\" [src]=\"profile.userImage\"></app-image-shell>\n      </app-aspect-ratio>\n    </ion-col>\n    <ion-col class=\"user-info-wrapper\">\n      <ion-row class=\"user-data-row\">\n        <ion-col size=\"9\">\n          <h3 class=\"user-name\">\n            <app-text-shell [data]=\"profile.name\"></app-text-shell>\n          </h3>\n          <h5 class=\"user-title\">\n            <app-text-shell [data]=\"profile.job\"></app-text-shell>\n          </h5>\n        </ion-col>\n        <ion-col class=\"membership-col\">\n          <span class=\"user-membership\">\n            <app-text-shell [data]=\"profile.membership\"></app-text-shell>\n          </span>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"actions-row\">\n        <ion-col class=\"main-actions\">\n          <ion-button class=\"call-to-action-btn\" size=\"small\" color=\"primary\">{{ 'FOLLOW' | translate }}</ion-button>\n          <ion-button class=\"call-to-action-btn\" size=\"small\" color=\"medium\">{{ 'MESSAGE' | translate }}</ion-button>\n        </ion-col>\n        <ion-col class=\"secondary-actions\">\n          <ion-button class=\"more-btn\" size=\"small\" fill=\"clear\" color=\"medium\" (click)=\"openLanguageChooser()\">\n            <ion-icon slot=\"icon-only\" ios=\"ellipsis-horizontal\" md=\"ellipsis-vertical\"></ion-icon>\n          </ion-button>\n        </ion-col>\n      </ion-row>\n    </ion-col>\n  </ion-row>\n  <ion-row class=\"user-stats-section\">\n    <ion-col class=\"user-stats-wrapper\" size=\"4\">\n      <span class=\"stat-value\">\n        <app-text-shell [data]=\"profile.likes\"></app-text-shell>\n      </span>\n      <span class=\"stat-name\">{{ 'LIKES' | translate }}</span>\n    </ion-col>\n    <ion-col class=\"user-stats-wrapper\" size=\"4\">\n      <span class=\"stat-value\">\n        <app-text-shell [data]=\"profile.followers\"></app-text-shell>\n      </span>\n      <span class=\"stat-name\">{{ 'FOLLOWERS' | translate }}</span>\n    </ion-col>\n    <ion-col class=\"user-stats-wrapper\" size=\"4\">\n      <span class=\"stat-value\">\n        <app-text-shell [data]=\"profile.following\"></app-text-shell>\n      </span>\n      <span class=\"stat-name\">{{ 'FOLLOWING' | translate }}</span>\n    </ion-col>\n  </ion-row>\n  <div class=\"user-about-section\">\n    <h3 class=\"details-section-title\">{{ 'ABOUT' | translate }}</h3>\n    <p class=\"user-description\">\n      <app-text-shell animation=\"bouncing\" lines=\"4\" [data]=\"profile.about\"></app-text-shell>\n    </p>\n  </div>\n  <div class=\"user-friends-section\">\n    <ion-row class=\"heading-row\">\n      <h3 class=\"details-section-title\">{{ 'FRIENDS' | translate }}</h3>\n      <a class=\"heading-call-to-action\" [routerLink]=\"['/app/user/friends']\">{{ 'SEE_ALL' | translate }}</a>\n    </ion-row>\n    <ion-row class=\"friends-row\">\n      <ion-col class=\"friend-item\" size=\"2\" *ngFor=\"let friend of profile.friends\">\n        <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n          <app-image-shell class=\"friend-picture\" [src]=\"friend.image\"></app-image-shell>\n        </app-aspect-ratio>\n        <span class=\"friend-name\">\n          <app-text-shell [data]=\"friend.name\"></app-text-shell>\n        </span>\n      </ion-col>\n    </ion-row>\n  </div>\n\n  <div class=\"user-photos-section\">\n    <ion-row class=\"heading-row\">\n      <h3 class=\"details-section-title\">{{ 'PHOTOS' | translate }}</h3>\n      <a class=\"heading-call-to-action\">{{ 'SEE_ALL' | translate }}</a>\n    </ion-row>\n    <ion-row class=\"pictures-row\">\n      <ion-col class=\"picture-item\" size=\"2\" *ngFor=\"let photo of profile.photos\">\n        <app-image-shell [display]=\"'cover'\" [src]=\"photo.image\" class=\"user-photo-image\">\n          <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n          </app-aspect-ratio>\n        </app-image-shell>\n      </ion-col>\n    </ion-row>\n  </div>\n</ion-content>\n","import { Component, OnInit, HostBinding, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { UserProfileModel } from './user-profile.model';\nimport { AlertController } from '@ionic/angular';\n\nimport { LanguageService } from '../../language/language.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.page.html',\n  styleUrls: [\n    './styles/user-profile.page.scss',\n    './styles/user-profile.shell.scss',\n    './styles/user-profile.ios.scss',\n    './styles/user-profile.md.scss'\n  ],\n})\nexport class UserProfilePage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  profile: UserProfileModel;\n  available_languages = [];\n  translations;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.profile && this.profile.isShell) ? true : false;\n  }\n\n  constructor(\n    private route: ActivatedRoute,\n    public translate: TranslateService,\n    public languageService: LanguageService,\n    public alertController: AlertController\n  ) { }\n\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<UserProfileModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<UserProfileModel>(resolvedRouteData.data, UserProfileModel)\n        .subscribe(\n          (state) => {\n            this.profile = state;\n\n            // get translations for this page to use in the Language Chooser Alert\n            this.getTranslations();\n\n            this.translate.onLangChange.subscribe(() => {\n              this.getTranslations();\n            });\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n\n  getTranslations() {\n    // get translations for this page to use in the Language Chooser Alert\n    this.translate.getTranslation(this.translate.currentLang)\n    .subscribe((translations) => {\n      this.translations = translations;\n    });\n  }\n\n  async openLanguageChooser() {\n    this.available_languages = this.languageService.getLanguages()\n    .map(item =>\n      ({\n        name: item.name,\n        type: 'radio',\n        label: item.name,\n        value: item.code,\n        checked: item.code === this.translate.currentLang\n      })\n    );\n\n    const alert = await this.alertController.create({\n      header: this.translations.SELECT_LANGUAGE,\n      inputs: this.available_languages,\n      cssClass: 'language-alert',\n      buttons: [\n        {\n          text: this.translations.CANCEL,\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: () => {}\n        }, {\n          text: this.translations.OK,\n          handler: (data) => {\n            if (data) {\n              this.translate.use(data);\n            }\n          }\n        }\n      ]\n    });\n    await alert.present();\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { UserService } from '../user.service';\nimport { UserProfileModel } from './user-profile.model';\n\n@Injectable()\nexport class UserProfileResolver implements Resolve<DataStore<UserProfileModel>> {\n\n  constructor(private userService: UserService) { }\n\n  resolve(): DataStore<UserProfileModel> {\n    const dataSource: Observable<UserProfileModel> = this.userService.getProfileDataSource();\n    const dataStore: DataStore<UserProfileModel> = this.userService.getProfileStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { DataStore } from '../shell/data-store';\nimport { Observable, of } from 'rxjs';\n\nexport interface IResolvedRouteData<T> {\n  data: T | DataStore<T>;\n}\n\nexport class ResolverHelper<T> {\n  // More info on function overloads here: https://www.typescriptlang.org/docs/handbook/functions.html#overloads\n  public static extractData<T>(source: (T | DataStore<T>), constructor: (new(...args: any[]) => T)): Observable<T> {\n    if (source instanceof DataStore) {\n      return source.state;\n    } else if (source instanceof constructor) {\n      // The right side of instanceof should be an expression evaluating to a constructor function (ie. a class), not a type\n      // That's why we included an extra parameter which acts as a constructor function for type T\n      // (see: https://github.com/microsoft/TypeScript/issues/5236)\n      return of(source);\n    }\n  }\n}\n"]}