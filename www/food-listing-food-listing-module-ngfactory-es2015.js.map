{"version":3,"sources":["./src/app/food/listing/food-listing.module.ts","./src/app/food/listing/food-listing.page.html","./src/app/food/listing/food-listing.page.ts","./src/app/food/listing/food-listing.resolver.ts"],"names":[],"mappings":"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","file":"food-listing-food-listing-module-ngfactory-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\nimport { PipesModule } from '../../pipes/pipes.module';\n\nimport { FoodService } from '../food.service';\nimport { FoodListingPage } from './food-listing.page';\nimport { FoodListingResolver } from './food-listing.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FoodListingPage,\n    resolve: {\n      data: FoodListingResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    PipesModule,\n    HttpClientModule\n  ],\n  declarations: [\n    FoodListingPage\n  ],\n  providers: [\n    FoodListingResolver,\n    FoodService\n  ]\n})\nexport class FoodListingPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Food Listing</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"food-listing-content\">\n  <ng-container *ngIf=\"listing?.items\">\n    <div class=\"listing-item\" *ngFor=\"let item of listing.items\">\n      <div class=\"cover-wrapper\">\n        <a class=\"cover-anchor\" [routerLink]=\"['/app/categories/food/', item.slug]\">\n          <app-image-shell class=\"cover-image add-overlay\" animation=\"spinner\" [display]=\"'cover'\" [src]=\"item.image\">\n            <app-aspect-ratio [ratio]=\"{w:35, h:15}\">\n              <div class=\"cover-icon-wrapper\">\n                <app-aspect-ratio [ratio]=\"{w: 20, h: 7}\">\n                  <app-image-shell class=\"item-icon\" [src]=\"item.icon\"></app-image-shell>\n                </app-aspect-ratio>\n              </div>\n            </app-aspect-ratio>\n          </app-image-shell>\n        </a>\n      </div>\n      <ion-row class=\"info-row\">\n        <ion-col class=\"description-col\">\n          <ion-row class=\"description-wrapper\">\n            <h3 class=\"item-name\">\n              <a class=\"name-anchor\" [routerLink]=\"['/app/categories/food/', item.slug]\">\n                <app-text-shell [data]=\"item.name\"></app-text-shell>\n              </a>\n            </h3>\n            <p class=\"item-address\">\n              <app-text-shell [data]=\"item.address\"></app-text-shell>\n            </p>\n            <ion-row class=\"item-tags\">\n              <ion-col class=\"tag-wrapper\" *ngFor=\"let tag of item.tags\">\n                <span class=\"item-tag\">\n                  <app-text-shell [data]=\"tag\"></app-text-shell>\n                </span>\n              </ion-col>\n            </ion-row>\n          </ion-row>\n        </ion-col>\n        <ion-col class=\"stats-col\" size=\"2\">\n          <span class=\"item-rating\" [attr.ratingBase]=\"item.rating | floor\">\n            <app-text-shell [data]=\"item.rating\"></app-text-shell>\n          </span>\n          <div class=\"item-price-range\">\n            <span class=\"price\" *ngFor=\"let price of [].constructor(item.priceRange)\">$</span>\n            <span class=\"no-price\" *ngFor=\"let price of [].constructor(5 - (item.priceRange || 1))\">$</span>\n          </div>\n        </ion-col>\n      </ion-row>\n      <ion-row class=\"pictures-row\">\n        <ion-col class=\"picture-wrapper\" size=\"2\" *ngFor=\"let picture of item.pictures.slice(0, 5); let i = index\">\n          <app-aspect-ratio [ratio]=\"{w: 1, h: 1}\">\n            <app-image-shell class=\"picture-image\" [src]=\"picture\" [alt]=\"'food image'\"></app-image-shell>\n          </app-aspect-ratio>\n          <a class=\"has-more-pictures\" [routerLink]=\"['/app/categories/food/', item.slug]\" *ngIf=\"i == 4 && item.pictures.length > 5\">\n            <span class=\"pictures-count\">{{ item.pictures.length - 5 }}</span>\n          </a>\n        </ion-col>\n      </ion-row>\n    </div>\n  </ng-container>\n</ion-content>\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { IResolvedRouteData, ResolverHelper } from '../../utils/resolver-helper';\nimport { FoodListingModel } from './food-listing.model';\n\n@Component({\n  selector: 'app-food-listing',\n  templateUrl: './food-listing.page.html',\n  styleUrls: [\n    './styles/food-listing.page.scss',\n    './styles/food-listing.shell.scss'\n  ]\n})\nexport class FoodListingPage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n\n  listing: FoodListingModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.listing && this.listing.isShell) ? true : false;\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<FoodListingModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<FoodListingModel>(resolvedRouteData.data, FoodListingModel)\n        .subscribe(\n          (state) => {\n            this.listing = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    // console.log('TravelListingPage [ionViewWillLeave]');\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { FoodService } from '../food.service';\nimport { FoodListingModel } from './food-listing.model';\n\n@Injectable()\nexport class FoodListingResolver implements Resolve<DataStore<FoodListingModel>> {\n\n  constructor(private foodService: FoodService) {}\n\n  resolve(): DataStore<FoodListingModel> {\n    const dataSource: Observable<FoodListingModel> = this.foodService.getListingDataSource();\n    const dataStore: DataStore<FoodListingModel> = this.foodService.getListingStore(dataSource);\n\n    return dataStore;\n  }\n}\n"],"sourceRoot":"webpack:///"}