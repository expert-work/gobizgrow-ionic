{"version":3,"sources":["webpack:///src/app/expense-categories/edit/edit-routing.module.ts","webpack:///src/app/expense-categories/edit/edit.module.ts","webpack:///src/app/expense-categories/edit/edit.page.html","webpack:///src/app/expense-categories/edit/edit.page.ts","webpack:///src/app/expense-categories/list/list-routing.module.ts","webpack:///src/app/expense-categories/list/list.module.ts","webpack:///src/app/expense-categories/list/list.page.html","webpack:///src/app/expense-categories/list/list.page.ts","webpack:///src/app/expense-categories/new/new-routing.module.ts","webpack:///src/app/expense-categories/new/new.module.ts","webpack:///src/app/expense-categories/new/new.page.html","webpack:///src/app/expense-categories/new/new.page.ts","webpack:///src/app/services/apis.service.ts","webpack:///src/app/services/toast.service.ts"],"names":["routes","path","component","EditPageRoutingModule","EditPageModule","EditPage","router","menu","authService","apisService","storageService","toastService","navParams","modalController","vehicles_json_data","validation_messages","type","message","data","get","form","name","compose","required","description","userData$","subscribe","res","displayUserData","console","log","desabled","FormData","append","value","auth_token","expenseCategoryUpdate","result","presentToast","dismiss","error","status","ListPageRoutingModule","ListPageModule","ListPage","items","x","page","last_page","numTimesLeft","loading","q","undefined","loadItems","event","setTimeout","target","complete","toString","expenseCategories","total","push","sortArray","self","map","item","evt","srcElement","create","backdropDismiss","modal","onDidDismiss","then","isDefined","id","present","componentProps","tempArray","i","length","isSelected","masterSelected","getCheckedItemList","every","checkedList","JSON","stringify","NewPageRoutingModule","NewPageModule","NewPage","expenseCategoryAdd","ApisService","httpService","http","imageUploadUrl","apiUrl","blobData","ext","formData","post","file","split","pop","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","slice","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","blob","Blob","fileUrl","myArray","reduce","unique","o","some","obj","sort","a","b","characters","charactersLength","charAt","Math","floor","random","postData","ToastService","toastController","infoMessage","duration","toast"],"mappings":"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","file":"expense-categories-list-list-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditPage } from './edit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditPageRoutingModule } from './edit-routing.module';\n\nimport { EditPage } from './edit.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [EditPage]\n})\nexport class EditPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button  (click)=\"close()\">\n        <span ion-text color=\"primary\" showWhen=\"ios\"></span>\n        <ion-icon name=\"close\" showWhen=\"android,windows\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>Update Category</ion-title>\n    <ion-button slot=\"end\" class=\"button button-clear button-positive\"   style=\"color: white;\"   [disabled]=\"!form.valid || desabled\"  (click)=\"saveForm()\">  \n      <ion-icon name=\"share\"></ion-icon>\n    </ion-button>\n\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content>\n     \n\n\n <div  class=\"dispplay-content-center\">\n   <form [formGroup]=\"form\" (ngSubmit)=\"saveForm()\" class=\"forms\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"Name\" formControlName=\"name\" clearInput autocapitalize=\"off\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.name\">\n          <div class=\"error-message\" *ngIf=\"form.get('name').hasError(validation.type) && (form.get('name').dirty || form.get('name').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n      <ion-item class=\"input-item\">\n        <ion-textarea type=\"text\" placeholder=\"Description... \" formControlName=\"description\" clearInput autocapitalize=\"off\" ></ion-textarea>\n\n      </ion-item>\n    </ion-list>\n\n    <div class=\"padding20\"></div>\n\n    <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\"   [disabled]=\"!form.valid || desabled\">Save Now</ion-button>\n    <div class=\"padding20\"></div>\n  </form>\n</div> \n</ion-content> ","import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service'\nimport { ApisService } from '../../services/apis.service'\n\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.page.html',\n  styleUrls: ['./edit.page.scss'],\n})\nexport class EditPage implements OnInit {\n\n \n  form: FormGroup;\n  desabled: boolean;\n  displayUserData: any; \n  vehicles_json_data=[];\n  data:any\n  validation_messages = {\n    'name': [\n      { type: 'required', message: 'Name is required.' },\n      ]\n  };\n\n \n\n  constructor(\n    public router: Router,\n    public menu: MenuController,\n    private authService: AuthService,\n    private apisService:ApisService,\n     private storageService: StorageService,\n    private toastService: ToastService,\n    navParams: NavParams,\n    public modalController: ModalController\n  ) {\n    this.data=navParams.get('data');\n   \n    this.form = new FormGroup({\n      'name': new FormControl(this.data.name, Validators.compose([\n         Validators.required\n      ])),\n     'description': new FormControl(this.data.description),\n     });\n  }\n \n  ngOnInit(){\n    this.authService.userData$.subscribe((res:any) => {\n      this.displayUserData=res\n      })\n   }\n\n   saveForm(): void {\n    console.log('do Log In');\n     this.desabled=true;\n     let form = new FormData();\n      form.append('name', this.form.value.name);\n      form.append('description', this.form.value.description);\n      form.append('auth_token',this.data.auth_token);\n \n     \n    this.apisService.expenseCategoryUpdate(form).subscribe((result: any) => {\n      this.desabled=false;\n                this.toastService.presentToast('Successfully added');\n                 this.modalController.dismiss(result.data);\n            },\n            (error: any)=>{\n              this.desabled=false;\n              if(error.status==0){\n                this.toastService.presentToast('Connection failed');\n              }\n              if(error.status==401){\n                this.toastService.presentToast('Authentcation failed');\n              }\n            }  \n     )\n   }\n   close()\n   {\n     this.modalController.dismiss([]);\n   }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListPage } from './list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListPageRoutingModule } from './list-routing.module';\nimport { ComponentsModule } from '../../components/components.module';\nimport { NewPageModule} from '../new/new.module'\nimport { ListPage } from './list.page';\nimport { EditPageModule } from '../edit/edit.module'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListPageRoutingModule,\n    ComponentsModule,\n    NewPageModule,\n    EditPageModule\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-buttons slot=\"start\">\n        <ion-back-button></ion-back-button> \n      </ion-buttons>\n    </ion-buttons>\n    <ion-title>Expense Categories</ion-title>\n    <ion-buttons slot=\"end\" class=\"button button-clear button-positive\" (click)=\"newModal()\" >  \n      <ion-icon name=\"add\" class=\"add-new\"></ion-icon>\n     </ion-buttons>\n\n  </ion-toolbar>\n</ion-header>\n\n\n\n\n<ion-header>\n  <ion-toolbar style=\"    padding-top: 15px; padding-bottom: 10px;\">\n    <ion-buttons slot=\"start\" style=\"padding-left: 15px;\">\n      <ion-checkbox color=\"secondary\"    [(ngModel)]=\"masterSelected\" name=\"list_name\" value=\"m1\" (ionChange)=\"checkUncheckAll()\"></ion-checkbox>\n    </ion-buttons>\n    <ion-searchbar value={{q}} (ionInput)=\"searchBox($event)\"    style=\"    min-width: 200px !important;\"></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content class=\"deals-listing-content\">\n  <ion-spinner  *ngIf=\"loading\" class=\"loading\" name=\"crescent\" color=\"primary\"></ion-spinner>\n\n  <ng-container *ngIf=\"!loading\">\n     <div class=\"listing-item\"  [ngClass]=\"ended\"  *ngFor=\"let item of items\">\n      <ion-row class=\"middle-row\" style=\"padding-top: 20px;\">\n        <ion-col size=\"2\">\n        <ion-buttons>\n          <ion-buttons><ion-checkbox  [(ngModel)]=\"item.isSelected\" name=\"list_name\" value=\"{{item.id}}\" (change)=\"isAllSelected()\"></ion-checkbox></ion-buttons>\n        </ion-buttons>\n        </ion-col>\n\n        <ion-col class=\"info-col\" size=\"4\"> \n          <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"item.name\"></app-text-shell>\n        </ion-col>\n        <ion-col class=\"info-col\" size=\"5\">\n          <p class=\"item-description\">\n            <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"item.description\"></app-text-shell>\n          </p>\n        </ion-col>\n        <ion-col class=\"info-col\" size=\"1\"> \n          <ion-icon name=\"create-outline\" style=\"font-size: 24px;\" color=\"primary\" (click)=\"updateModal(item)\" ></ion-icon>\n        </ion-col>\n        \n      </ion-row>\n    </div>\n   </ng-container>\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\" [disabled]=\"numTimesLeft <= 0\">  \n    <ion-infinite-scroll-content  \n      loadingSpinner=\"bubbles\"  \n      loadingText=\"Loading more data...\">  \n    </ion-infinite-scroll-content>  \n  </ion-infinite-scroll>  \n</ion-content>\n\n ","import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service'\nimport { ApisService } from '../../services/apis.service'\n\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\nimport { NewPage} from '../new/new.page';\nimport { EditPage } from '../edit/edit.page';\n \n@Component({\n  selector: 'app-list',\n  templateUrl: './list.page.html',\n  styleUrls: [\n    './list.page.scss',\n    '../../style/listing.ios.scss',\n    '../../style/listing.page.scss',\n    '../../style/listing.shell.scss'\n  ],\n})\nexport class ListPage implements OnInit {\n\n  displayUserData:any;\n  categories:any;\n  masterSelected:boolean;\n  checklist:any;\n  checkedList:any;\n  loading:boolean;\n  constructor(\n    public router: Router,\n    public menu: MenuController,\n    private authService: AuthService,\n    private apisService:ApisService,\n     private storageService: StorageService,\n    private toastService: ToastService,\n     public modalController: ModalController\n  ) {\n    this.loading=true;\n   \n  }\n  q:any\n  items = [];  \n  x= 0;\n  page=1;\n  last_page=0;\n  numTimesLeft = 5;  \n   \n  ngOnInit(){\n   this.authService.userData$.subscribe((res:any) => {\n     this.displayUserData=res\n     this.q='';\n     if (this.displayUserData.auth_token !== undefined) { this.loadItems(); }\n   })\n  \n\n  }\n\n  loadData(event) {  \n   setTimeout(() => {  \n     this.loadItems();  \n     this.numTimesLeft -= 1;  \n     event.target.complete();  \n   }, 500);  \n }  \n loadItems() {  \n    let form = new FormData();\n        form.append('page',this.page.toString() );\n        form.append('q',this.q );\n        form.append('auth_token',this.displayUserData.auth_token);\n         this.apisService.expenseCategories(form).subscribe((result: any) => {\n          this.loading=false;\n            if(result.data.total){\n              this.page= this.page+1;\n              this.items.push(...result.data.data)\n              this.items=this.apisService.sortArray(this.items);\n              let self=this;\n              let items=[];\n              this.items.map(function (item) {\n                   \n                   items.push(item);\n              });\n              this.items=items;\n          \n            }else{\n\n            }\n         },\n          (error: any)=>{\n            if(error.status==0){\n              this.toastService.presentToast('Connection failed');\n            }\n            if(error.status==401){\n              this.toastService.presentToast('Authentcation failed');\n            }\n          }  \n   ) \n } \n searchBox(evt){\n   this.q= evt.srcElement.value;\n   this.page=1;\n   this.items = [];\n   this.loadItems()\n }\n\n async newModal() {\n  const modal = await this.modalController.create({\n     component: NewPage,\n     backdropDismiss:false\n  });\n  modal.onDidDismiss().then(data=>{\n     if(data.data)\n     if(this.apisService.isDefined(data.data.id)){\n        this.items.push(data.data)\n        this.items=this.apisService.sortArray(this.items);\n     }\n  })\n  return await modal.present();\n}\n\n\nasync updateModal(data:any) {\n  const modal = await this.modalController.create({\n     componentProps: { data: data },\n     component: EditPage,\n     backdropDismiss:false\n  });\n  modal.onDidDismiss().then(data=>{\n     if(data.data)\n     if(this.apisService.isDefined(data.data.id)){\n       \n       let tempArray=[];\n        this.items.map(function (item) {\n          if(item.id == data.data.id){ tempArray.push(data.data); } else {tempArray.push(item); }\n        });\n        this.items=this.apisService.sortArray(tempArray);\n     }\n  })\n  return await modal.present();\n}\n\n\n//EditPage\n\ncheckUncheckAll() {\n  for (var i = 0; i < this.items.length; i++) {\n    this.items[i].isSelected = this.masterSelected;\n  }\n  this.getCheckedItemList();\n}\n\n  isAllSelected() {\n    this.masterSelected = this.items.every(function(item:any) {\n        return item.isSelected == true;\n      })\n    this.getCheckedItemList();\n  }\n\n  getCheckedItemList(){\n    this.checkedList = [];\n    for (var i = 0; i < this.items.length; i++) {\n      if(this.items[i].isSelected)\n      this.checkedList.push(this.items[i].id);\n    }\n    this.checkedList = JSON.stringify(this.checkedList);\n    return this.checkedList;\n  }\n\n   \n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewPage } from './new.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewPageRoutingModule } from './new-routing.module';\n\nimport { NewPage } from './new.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NewPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [NewPage]\n})\nexport class NewPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button  (click)=\"close()\">\n        <span ion-text color=\"primary\" showWhen=\"ios\"></span>\n        <ion-icon name=\"close\" showWhen=\"android,windows\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>New Category</ion-title>\n    <ion-button slot=\"end\" class=\"button button-clear button-positive\"   style=\"color: white;\"   [disabled]=\"!form.valid || desabled\"  (click)=\"saveForm()\">  \n      <ion-icon name=\"share\"></ion-icon>\n    </ion-button>\n\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content>\n     \n\n\n <div  class=\"dispplay-content-center\">\n   <form [formGroup]=\"form\" (ngSubmit)=\"saveForm()\" class=\"forms\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"Name\" formControlName=\"name\" clearInput autocapitalize=\"off\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.name\">\n          <div class=\"error-message\" *ngIf=\"form.get('name').hasError(validation.type) && (form.get('name').dirty || form.get('name').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n      <ion-item class=\"input-item\">\n        <ion-textarea type=\"text\" placeholder=\"Description... \" formControlName=\"description\" clearInput autocapitalize=\"off\" ></ion-textarea>\n\n      </ion-item>\n    </ion-list>\n\n    <div class=\"padding20\"></div>\n\n    <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\"   [disabled]=\"!form.valid || desabled\">Save Now</ion-button>\n    <div class=\"padding20\"></div>\n  </form>\n</div> \n</ion-content> ","import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service'\nimport { ApisService } from '../../services/apis.service'\n\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.page.html',\n  styleUrls: ['./new.page.scss'],\n})\nexport class NewPage implements OnInit {\n\n  form: FormGroup;\n  desabled: boolean;\n  displayUserData: any; \n  vehicles_json_data=[];\n\n  validation_messages = {\n    'name': [\n      { type: 'required', message: 'Name is required.' },\n      ]\n  };\n\n \n\n  constructor(\n    public router: Router,\n    public menu: MenuController,\n    private authService: AuthService,\n    private apisService:ApisService,\n     private storageService: StorageService,\n    private toastService: ToastService,\n    navParams: NavParams,\n    public modalController: ModalController\n  ) {\n\n    this.form = new FormGroup({\n      'name': new FormControl('', Validators.compose([\n         Validators.required\n      ])),\n     'description': new FormControl(''),\n     });\n  }\n \n  ngOnInit(){\n    this.authService.userData$.subscribe((res:any) => {\n      this.displayUserData=res\n      })\n   }\n\n   saveForm(): void {\n    console.log('do Log In');\n     this.desabled=true;\n     let form = new FormData();\n      form.append('name', this.form.value.name);\n      form.append('description', this.form.value.description);\n      form.append('auth_token',this.displayUserData.auth_token);\n \n     \n    this.apisService.expenseCategoryAdd(form).subscribe((result: any) => {\n      this.desabled=false;\n                this.toastService.presentToast('Successfully added');\n                 this.modalController.dismiss(result.data);\n            },\n            (error: any)=>{\n              this.desabled=false;\n              if(error.status==0){\n                this.toastService.presentToast('Connection failed');\n              }\n              if(error.status==401){\n                this.toastService.presentToast('Authentcation failed');\n              }\n            }  \n     )\n   }\n   close()\n   {\n     this.modalController.dismiss([]);\n   }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpService } from './http.service';\nimport { HttpClient } from '@angular/common/http';\nimport { StorageService } from './storage.service';\nimport { environment } from '../../environments/environment';\n\nexport interface ApiImage {\n  _id: string;\n  name: string;\n  createdAt: Date;\n  url: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApisService {\n\n  constructor(\n    private httpService: HttpService,\n    private http: HttpClient,\n    private storageService: StorageService,\n    private router: Router\n  ) { }\n\n\n\n\n\n  // Image Upload Starts\n\n  imageUploadUrl = environment.apiUrl+'uploads';\n\n  getImages() {\n    return this.http.get<ApiImage[]>(`${this.imageUploadUrl}/image`);\n  }\n \n  uploadImage(blobData, name, ext,auth_token:any) {\n    const formData = new FormData();\n    formData.append('file', blobData, `myimage.${ext}`);\n    formData.append('name', name);\n    formData.append('auth_token', auth_token);\n\n    return this.http.post(`${this.imageUploadUrl}`, formData);\n  }\n \n  uploadImageFile(file: File, auth_token:any) {\n    const ext = file.name.split('.').pop();\n    const formData = new FormData();\n    formData.append('file', file, `myimage.${ext}`);\n    formData.append('name', file.name);\n    formData.append('auth_token', auth_token);\n\n    return this.http.post(`${this.imageUploadUrl}`, formData);\n  }\n \n  \n  deleteImage(id) {\n    return this.http.delete(`${this.imageUploadUrl}/image/${id}`);\n  }\n\n  b64toBlob(b64Data, contentType = '', sliceSize = 512) {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n \n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n \n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n \n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n \n    const blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n  }\n  // Image Upload End\n\n\n\n  getImageUrl(file:any){\n    return environment.fileUrl+file;\n  }\n  getThumbImageUrl(file:any){\n    return environment.fileUrl+'thumb/'+file;\n  }\n\n  sortArray(myArray:any) {\n    var result = myArray.reduce((unique, o) => {\n      if(!unique.some(obj => obj.id === o.id)) {\n        unique.push(o);\n      }\n      return unique;\n    },[]);\n   \n    return result.sort(function(a, b) {\n        return b.id-a.id ;\n    });\n}\n\nisDefined(x:any) {\n  if (x == null) {\n      return false;\n  }\n  if (x === null) {\n      return false;\n  }\n  if (typeof x === 'undefined') {\n      return false;\n  }\n  return true;\n}\n\n makeid(length:Number) {\n  var result           = '';\n  var characters       = 'abcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n\n\nsignupComplete(postData: any): Observable<any> {\n  return this.httpService.post('signup-complete',postData);\n}\n\n\n //Customers\n\ndashboard(postData: any): Observable<any> {\n  return this.httpService.post('dashboard',postData);\n}\n\ncustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/all',postData);\n}\n\ninvoices(postData: any): Observable<any> {\n  return this.httpService.post('invoices/all',postData);\n}\n\nnextInvoice(postData: any): Observable<any> {\n  return this.httpService.post('invoices/next',postData);\n\n}\n\n\nnextEstimate(postData: any): Observable<any> {\n  return this.httpService.post('estimates/next',postData);\n\n}\nnextJob(postData: any): Observable<any> {\n  return this.httpService.post('jobs/next',postData);\n\n}\n\n\n\nitems(postData: any): Observable<any> {\n  return this.httpService.post('items/all',postData);\n}\ncategories(postData: any): Observable<any> {\n  return this.httpService.post('categories/all',postData);\n}\n\npayments(postData: any): Observable<any> {\n  return this.httpService.post('payments/all',postData);\n}\n\nexpenses(postData: any): Observable<any> {\n  return this.httpService.post('expenses/all',postData);\n}\n\njobs(postData: any): Observable<any> {\n  return this.httpService.post('jobs/all',postData);\n}\nexpenseCategories(postData: any): Observable<any> {\n  return this.httpService.post('expenses-categories/all',postData);\n}\n\n\ntaxes(postData: any): Observable<any> {\n  return this.httpService.post('taxes/all',postData);\n}\nimages(postData: any): Observable<any> {\n  return this.httpService.post('images/all',postData);\n}\n\ndeleteCustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/delete',postData);\n}\n\ncustomerAdd(postData: any): Observable<any> {\n  return this.httpService.post('customers/add',postData);\n}\ncustomerEdit(auth_token:any,postData: any): Observable<any> {\n  return this.httpService.post('customers/edit/'+auth_token,postData);\n}\n\ncategoryAdd(postData: any): Observable<any> {\n  return this.httpService.post('categories/add',postData);\n}\n\ncategoryUpdate(postData: any): Observable<any> {\n  return this.httpService.post('categories/edit',postData);\n}\n\nitemAdd(postData: any): Observable<any> {\n  return this.httpService.post('items/add',postData);\n}\nitemUpdate(postData: any): Observable<any> {\n  return this.httpService.post('items/edit',postData);\n}\n\n\ntaxAdd(postData: any): Observable<any> {\n  return this.httpService.post('tax/add',postData);\n}\ntaxUpdate(postData: any): Observable<any> {\n  return this.httpService.post('tax/edit',postData);\n}\n\ninvoiceAdd(postData: any): Observable<any> {\n  return this.httpService.post('invoices/add',postData);\n}\n\ninvoiceUpdate(postData: any): Observable<any> {\n  return this.httpService.post('invoices/edit',postData);\n}\n\n\n\nestimateAdd(postData: any): Observable<any> {\n  return this.httpService.post('estimates/add',postData);\n}\n\nestimateUpdate(postData: any): Observable<any> {\n  return this.httpService.post('estimates/edit',postData);\n}\n\n\njobAdd(postData: any): Observable<any> {\n  return this.httpService.post('jobs/add',postData);\n}\n\njobUpdate(postData: any): Observable<any> {\n  return this.httpService.post('jobs/edit',postData);\n}\n //Invoices\n //Items\n //Payments\n //Expenses\n //Items Categories\n //Expenses Categories\n //Taxes\n //Payment Merhods\n\n \n expenseCategoryUpdate(postData: any): Observable<any> {\n  return this.httpService.post('expenses-categories/edit',postData);\n}\n\nexpenseCategoryAdd(postData: any): Observable<any> {\n  return this.httpService.post('expenses-categories/add',postData);\n\n}\n\n // get Industries industries\n  industries(postData: any): Observable<any> {\n    return this.httpService.post('industries',postData);\n  }\n  // get All Estimates\n  estimates(postData: any): Observable<any> {\n    return this.httpService.post('estimates/all',postData);\n  }\n\n  \n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(public toastController: ToastController) { }\n  \n  async presentToast(infoMessage: string) {\n     const toast = await this.toastController.create({\n       message:infoMessage,\n       duration:3000\n     });\n     toast.present();\n\n  }\n}\n"]}