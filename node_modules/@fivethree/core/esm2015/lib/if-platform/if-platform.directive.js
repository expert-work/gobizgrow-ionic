/**
 * @fileoverview added by tsickle
 * Generated from: lib/if-platform/if-platform.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, ViewContainerRef, TemplateRef } from '@angular/core';
import { Platform } from '@ionic/angular';
export class FivIfPlatform {
    /**
     * @param {?} platform
     * @param {?} viewContainer
     * @param {?} templateRef
     */
    constructor(platform, viewContainer, templateRef) {
        this.platform = platform;
        this.viewContainer = viewContainer;
        this.templateRef = templateRef;
    }
    /**
     * @param {?} platforms
     * @return {?}
     */
    set fivIf(platforms) {
        /** @type {?} */
        let show = true;
        platforms.forEach((/**
         * @param {?} p
         * @return {?}
         */
        p => {
            if (!this.platform.is(p)) {
                show = false;
            }
        }));
        if (show) {
            this.viewContainer.createEmbeddedView(this.templateRef);
        }
        else {
            this.viewContainer.clear();
        }
    }
}
FivIfPlatform.decorators = [
    { type: Directive, args: [{
                selector: '[fivIf]'
            },] }
];
/** @nocollapse */
FivIfPlatform.ctorParameters = () => [
    { type: Platform },
    { type: ViewContainerRef },
    { type: TemplateRef }
];
FivIfPlatform.propDecorators = {
    fivIf: [{ type: Input }]
};
if (false) {
    /**
     * @type {?}
     * @private
     */
    FivIfPlatform.prototype.platform;
    /**
     * @type {?}
     * @private
     */
    FivIfPlatform.prototype.viewContainer;
    /**
     * @type {?}
     * @private
     */
    FivIfPlatform.prototype.templateRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWYtcGxhdGZvcm0uZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZpdmV0aHJlZS9jb3JlLyIsInNvdXJjZXMiOlsibGliL2lmLXBsYXRmb3JtL2lmLXBsYXRmb3JtLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNoRixPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFNMUMsTUFBTSxPQUFPLGFBQWE7Ozs7OztJQUN4QixZQUNVLFFBQWtCLEVBQ2xCLGFBQStCLEVBQy9CLFdBQTZCO1FBRjdCLGFBQVEsR0FBUixRQUFRLENBQVU7UUFDbEIsa0JBQWEsR0FBYixhQUFhLENBQWtCO1FBQy9CLGdCQUFXLEdBQVgsV0FBVyxDQUFrQjtJQUNwQyxDQUFDOzs7OztJQUVKLElBQ0ksS0FBSyxDQUFDLFNBQXNCOztZQUMxQixJQUFJLEdBQUcsSUFBSTtRQUNmLFNBQVMsQ0FBQyxPQUFPOzs7O1FBQUMsQ0FBQyxDQUFDLEVBQUU7WUFDcEIsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxFQUFFO2dCQUN4QixJQUFJLEdBQUcsS0FBSyxDQUFDO2FBQ2Q7UUFDSCxDQUFDLEVBQUMsQ0FBQztRQUVILElBQUksSUFBSSxFQUFFO1lBQ1IsSUFBSSxDQUFDLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUM7U0FDekQ7YUFBTTtZQUNMLElBQUksQ0FBQyxhQUFhLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDNUI7SUFDSCxDQUFDOzs7WUF4QkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSxTQUFTO2FBQ3BCOzs7O1lBTFEsUUFBUTtZQURVLGdCQUFnQjtZQUFFLFdBQVc7OztvQkFjckQsS0FBSzs7Ozs7OztJQUxKLGlDQUEwQjs7Ozs7SUFDMUIsc0NBQXVDOzs7OztJQUN2QyxvQ0FBcUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIElucHV0LCBWaWV3Q29udGFpbmVyUmVmLCBUZW1wbGF0ZVJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUGxhdGZvcm0gfSBmcm9tICdAaW9uaWMvYW5ndWxhcic7XG5pbXBvcnQgeyBQbGF0Zm9ybXMgfSBmcm9tICdAaW9uaWMvY29yZSc7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tmaXZJZl0nXG59KVxuZXhwb3J0IGNsYXNzIEZpdklmUGxhdGZvcm0ge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHBsYXRmb3JtOiBQbGF0Zm9ybSxcbiAgICBwcml2YXRlIHZpZXdDb250YWluZXI6IFZpZXdDb250YWluZXJSZWYsXG4gICAgcHJpdmF0ZSB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55PlxuICApIHt9XG5cbiAgQElucHV0KClcbiAgc2V0IGZpdklmKHBsYXRmb3JtczogUGxhdGZvcm1zW10pIHtcbiAgICBsZXQgc2hvdyA9IHRydWU7XG4gICAgcGxhdGZvcm1zLmZvckVhY2gocCA9PiB7XG4gICAgICBpZiAoIXRoaXMucGxhdGZvcm0uaXMocCkpIHtcbiAgICAgICAgc2hvdyA9IGZhbHNlO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgaWYgKHNob3cpIHtcbiAgICAgIHRoaXMudmlld0NvbnRhaW5lci5jcmVhdGVFbWJlZGRlZFZpZXcodGhpcy50ZW1wbGF0ZVJlZik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMudmlld0NvbnRhaW5lci5jbGVhcigpO1xuICAgIH1cbiAgfVxufVxuIl19