{"version":3,"sources":["webpack:///src/app/common/categories/categories-routing.module.ts","webpack:///src/app/common/categories/categories.module.ts","webpack:///src/app/common/categories/categories.page.html","webpack:///src/app/common/categories/categories.page.ts","webpack:///src/app/items/edit/edit-routing.module.ts","webpack:///src/app/items/edit/edit.module.ts","webpack:///src/app/items/edit/edit.page.html","webpack:///src/app/items/edit/edit.page.ts","webpack:///src/app/items/list/list-routing.module.ts","webpack:///src/app/items/list/list.module.ts","webpack:///src/app/items/list/list.page.html","webpack:///src/app/items/list/list.page.ts","webpack:///src/app/items/new/new-routing.module.ts","webpack:///src/app/items/new/new.module.ts","webpack:///src/app/items/new/new.page.html","webpack:///src/app/items/new/new.page.ts"],"names":["routes","path","component","CategoriesPageRoutingModule","CategoriesPageModule","CategoriesPage","router","menu","authService","apisService","storageService","toastService","navParams","modalController","items","x","page","last_page","numTimesLeft","categories","get","userData$","subscribe","res","displayUserData","q","auth_token","undefined","loadItems","event","setTimeout","target","complete","form","FormData","append","toString","result","data","total","push","sortArray","self","map","item","category","id","isSelected","error","status","presentToast","evt","srcElement","value","create","backdropDismiss","modal","onDidDismiss","then","isDefined","present","i","length","masterSelected","getCheckedItemList","every","checkedList","JSON","stringify","isAlready","name","price","dismiss","EditPageRoutingModule","EditPageModule","EditPage","ListPageRoutingModule","ListPageModule","ListPage","actionSheetController","addMoreItems","console","log","buttons","text","role","handler","deleteItems","actionSheet","editModal","componentProps","tempArray","checkedItems","deleteCustomers","isError","tempItems","NewPageRoutingModule","NewPageModule","NewPage","validation_messages","type","message","compose","required","min","desabled","description","itemAdd"],"mappings":"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","file":"items-list-list-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CategoriesPage } from './categories.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CategoriesPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CategoriesPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../components/components.module';\n\n import {  NewPageModule } from '../../item-categories/new/new.module';\n\n\nimport { CategoriesPageRoutingModule } from './categories-routing.module';\n\nimport { CategoriesPage } from './categories.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CategoriesPageRoutingModule,\n    ComponentsModule,\n    NewPageModule\n  ],\n  declarations: [CategoriesPage]\n})\nexport class CategoriesPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button  (click)=\"close()\">\n        <span ion-text color=\"primary\" showWhen=\"ios\"></span>\n        <ion-icon name=\"close\" showWhen=\"android,windows\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>Categories</ion-title>\n    <ion-buttons slot=\"end\" class=\"button button-clear button-positive\" (click)=\"newModal()\" >  \n      <ion-icon name=\"add\" class=\"add-new\"></ion-icon>\n     </ion-buttons>\n\n  </ion-toolbar>\n</ion-header>\n\n\n\n\n<ion-header>\n  <ion-toolbar style=\"    padding-top: 15px; padding-bottom: 10px;\">\n    <ion-buttons slot=\"start\" style=\"padding-left: 15px;\">\n      <ion-checkbox color=\"secondary\"    [(ngModel)]=\"masterSelected\" name=\"list_name\" value=\"m1\" (ionChange)=\"checkUncheckAll()\"></ion-checkbox>\n    </ion-buttons>\n    <ion-searchbar value={{q}} (ionInput)=\"searchBox($event)\"    style=\"    min-width: 200px !important;\"></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content class=\"deals-listing-content\">\n  <ng-container>\n     <div class=\"listing-item\"  [ngClass]=\"ended\"  *ngFor=\"let item of items\">\n      <ion-row class=\"middle-row\" style=\"padding-top: 20px;\">\n        <ion-col size=\"2\">\n        <ion-buttons>\n          <ion-buttons><ion-checkbox  [(ngModel)]=\"item.isSelected\" name=\"list_name\" value=\"{{item.id}}\" (change)=\"isAllSelected()\"></ion-checkbox></ion-buttons>\n        </ion-buttons>\n        </ion-col>\n        <ion-col class=\"info-col\" size=\"5\"> \n          <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"item.name\"></app-text-shell>\n        </ion-col>\n        <ion-col class=\"info-col\" size=\"5\">\n          <p class=\"item-description\">\n            <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"item.description\"></app-text-shell>\n          </p>\n        </ion-col>\n      </ion-row>\n    </div>\n   </ng-container>\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\" [disabled]=\"numTimesLeft <= 0\">  \n    <ion-infinite-scroll-content  \n      loadingSpinner=\"bubbles\"  \n      loadingText=\"Loading more data...\">  \n    </ion-infinite-scroll-content>  \n  </ion-infinite-scroll>  \n</ion-content>\n\n<ion-footer class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-row>\n       <ion-col>\n        <ion-button expand=\"full\" fill=\"outline\" (click)=\"updateSelectedCategories()\">Update Selected Categories</ion-button>\n      </ion-col>\n    </ion-row>\n          \n  </ion-toolbar>\n</ion-footer>","import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service'\nimport { ApisService } from '../../services/apis.service'\n\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\nimport { NewPage} from '../../item-categories/new/new.page'\nimport { from } from 'core-js/fn/array';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.page.html',\n  styleUrls: [\n     './categories.page.scss',\n     '../../style/listing.ios.scss',\n    '../../style/listing.page.scss',\n    '../../style/listing.shell.scss'\n    ],\n})\nexport class CategoriesPage implements OnInit {\n\n  displayUserData:any;\n  categories:any;\n  masterSelected:boolean;\n  checklist:any;\n  checkedList:any;\n  constructor(\n    public router: Router,\n    public menu: MenuController,\n    private authService: AuthService,\n    private apisService:ApisService,\n     private storageService: StorageService,\n    private toastService: ToastService,\n    navParams: NavParams,\n    public modalController: ModalController\n  ) {\n    this.categories=navParams.get('data');\n     \n  }\n  q:any\n  items = [];  \n  x= 0;\n  page=1;\n  last_page=0;\n  numTimesLeft = 5;  \n   \n  ngOnInit(){\n   this.authService.userData$.subscribe((res:any) => {\n     this.displayUserData=res\n     this.q='';\n     if (this.displayUserData.auth_token !== undefined) { this.loadItems(); }\n   })\n  \n\n  }\n\n  loadData(event) {  \n   setTimeout(() => {  \n     this.loadItems();  \n     this.numTimesLeft -= 1;  \n     event.target.complete();  \n   }, 500);  \n }  \n loadItems() {  \n    let form = new FormData();\n        form.append('page',this.page.toString() );\n        form.append('q',this.q );\n        form.append('auth_token',this.displayUserData.auth_token);\n         this.apisService.categories(form).subscribe((result: any) => {\n            if(result.data.total){\n              this.page= this.page+1;\n              this.items.push(...result.data.data)\n              this.items=this.apisService.sortArray(this.items);\n              let self=this;\n              let items=[];\n              this.items.map(function (item) {\n                   self.categories.map(function (category) {\n                     if(item.id==category.id){\n                      item.isSelected=true;\n                     }\n                   });\n                   items.push(item);\n              });\n              this.items=items;\n          \n            }else{\n\n            }\n         },\n          (error: any)=>{\n            if(error.status==0){\n              this.toastService.presentToast('Connection failed');\n            }\n            if(error.status==401){\n              this.toastService.presentToast('Authentcation failed');\n            }\n          }  \n   ) \n } \n searchBox(evt){\n   this.q= evt.srcElement.value;\n   this.page=1;\n   this.items = [];\n   this.loadItems()\n }\n\n async newModal() {\n  const modal = await this.modalController.create({\n     component: NewPage,\n     backdropDismiss:false\n  });\n  modal.onDidDismiss().then(data=>{\n     if(data.data)\n     if(this.apisService.isDefined(data.data.id)){\n        this.items.push(data.data)\n        this.items=this.apisService.sortArray(this.items);\n     }\n  })\n  return await modal.present();\n}\n\ncheckUncheckAll() {\n  for (var i = 0; i < this.items.length; i++) {\n    this.items[i].isSelected = this.masterSelected;\n  }\n  this.getCheckedItemList();\n}\n\n  isAllSelected() {\n    this.masterSelected = this.items.every(function(item:any) {\n        return item.isSelected == true;\n      })\n    this.getCheckedItemList();\n  }\n\n  getCheckedItemList(){\n    this.checkedList = [];\n    for (var i = 0; i < this.items.length; i++) {\n      if(this.items[i].isSelected)\n      this.checkedList.push(this.items[i].id);\n    }\n    this.checkedList = JSON.stringify(this.checkedList);\n    return this.checkedList;\n  }\n\n  updateSelectedCategories(){\n    let categories=[];\n    let self=this;\n    this.items.map(function (item) {\n      if(item.isSelected){\n                    let isAlready=false;\n                    self.categories.map(function (category) {\n                          if(item.id==category.id){ isAlready= category; }\n                      });\n                      if(!isAlready){\n                        categories.push({\n                          id:item.id,\n                          name:item.name,\n                          price:0\n                        });\n                      }else{\n                        categories.push(isAlready);\n                      }\n                    }\n    });\n\n    this.modalController.dismiss(categories);\n\n  //  price\n  }\n   close() { this.modalController.dismiss([]);  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditPage } from './edit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditPageRoutingModule } from './edit-routing.module';\n\nimport { EditPage } from './edit.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditPageRoutingModule\n  ],\n  declarations: [EditPage]\n})\nexport class EditPageModule {}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>edit</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n</ion-content>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.page.html',\n  styleUrls: ['./edit.page.scss'],\n})\nexport class EditPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListPage } from './list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListPageRoutingModule } from './list-routing.module';\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { ListPage } from './list.page';\nimport { NewPageModule } from '../new/new.module'\nimport { EditPageModule } from '../edit/edit.module'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListPageRoutingModule,\n    ComponentsModule,\n    NewPageModule,\n    EditPageModule\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      Items\n    </ion-title>\n    <ion-buttons slot=\"end\" class=\"button button-clear button-positive\" (click)=\"newModal()\">  \n         <ion-icon name=\"add\" class=\"add-new\"></ion-icon>\n    </ion-buttons>\n\n  </ion-toolbar>\n</ion-header>\n\n<ion-header>\n  <ion-toolbar style=\"    padding-top: 15px; padding-bottom: 10px;\">\n    <ion-buttons slot=\"start\" style=\"padding-left: 15px;\">\n      <ion-checkbox color=\"secondary\" (click)=\"openMenu()\" ></ion-checkbox>\n    </ion-buttons>\n    <ion-searchbar value={{q}} (ionInput)=\"searchBox($event)\"    style=\"    min-width: 200px !important;\"></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n\n\n<ion-content class=\"deals-listing-content\">\n  <ng-container>\n    <div class=\"listing-item\"  [ngClass]=\"ended\"  *ngFor=\"let item of items\">\n      <ion-row class=\"middle-row\" style=\"padding-top: 20px;\">\n        <ion-col size=\"2\">\n        <ion-buttons><ion-checkbox  (click)=\"openMenu()\"  [(ngModel)]=\"item.isSelected\" name=\"list_name\" value=\"{{item.id}}\" (change)=\"isAllSelected()\"></ion-checkbox></ion-buttons>\n        </ion-col>\n        <ion-col class=\"info-col\" size=\"4\">\n          <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"item.name\"></app-text-shell>\n        </ion-col>\n        <ion-col class=\"info-col\" size=\"4\">\n          <p class=\"item-description\">\n            <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"item.price_format\"></app-text-shell>\n          </p>\n        </ion-col>\n        <ion-col size=\"2\">\n          <ion-icon name=\"options\" class=\"list-item-option\" (click)=\"openActionMenu(item)\"></ion-icon>\n        </ion-col>\n      </ion-row>\n    </div>\n  </ng-container>\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\" [disabled]=\"numTimesLeft <= 0\">  \n    <ion-infinite-scroll-content  \n      loadingSpinner=\"bubbles\"  \n      loadingText=\"Loading more data...\">  \n    </ion-infinite-scroll-content>  \n  </ion-infinite-scroll>  \n</ion-content>\n\n\n ","import { Component, OnInit } from '@angular/core';\nimport { ActionSheetController,ModalController } from '@ionic/angular';\nimport { ApisService } from '../../services/apis.service';\nimport { ToastService } from '../../services/toast.service';\nimport { AuthService } from '../../services/auth.service';\nimport { NewPage } from '../new/new.page'\nimport { EditPage } from '../edit/edit.page'\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.page.html',\n  styleUrls: [\n    './list.page.scss',\n    '../../style/listing.ios.scss',\n    '../../style/listing.page.scss',\n    '../../style/listing.shell.scss'\n  ],\n})\nexport class ListPage implements OnInit {\n\n\n  displayUserData: any;\n  q:any;\n  masterSelected:boolean;\n  checklist:any;\n  checkedList:any;\n\n  constructor(\n          public actionSheetController: ActionSheetController, \n          private apisService: ApisService,\n          private toastService:ToastService,\n          private authService: AuthService,\n          private modalController: ModalController\n       ) {\n              \n       }\n\n\n   items = [];  \n   x= 0;\n   page=1;\n   last_page=0;\n   numTimesLeft = 5;  \n    \n   ngOnInit(){\n    this.authService.userData$.subscribe((res:any) => {\n      this.displayUserData=res\n      this.q='';\n      if (this.displayUserData.auth_token !== undefined) { this.addMoreItems(); }\n    })\n   }\n  \n  \n  loadData(event) {  \n    setTimeout(() => {  \n      console.log('Done');  \n      this.addMoreItems();  \n      this.numTimesLeft -= 1;  \n      event.target.complete();  \n    }, 500);  \n  }  \n  addMoreItems() {  \n     let form = new FormData();\n         form.append('page',this.page.toString() );\n         form.append('q',this.q );\n         form.append('auth_token',this.displayUserData.auth_token);\n          this.apisService.items(form).subscribe((result: any) => {\n             if(result.data.total){\n               this.page= this.page+1;\n               this.items.push(...result.data.data)\n               this.items=this.apisService.sortArray(this.items);\n             }else{\n\n             }\n          },\n           (error: any)=>{\n             if(error.status==0){\n               this.toastService.presentToast('Connection failed');\n             }\n             if(error.status==401){\n               this.toastService.presentToast('Authentcation failed');\n             }\n           }  \n    ) \n  } \n  searchBox(evt){\n    this.q= evt.srcElement.value;\n    this.page=1;\n    this.items = [];\n    this.addMoreItems()\n  }\n \n  \n\n  async openMenu() {  \n    const actionSheet = await this.actionSheetController.create({  \n     // header: 'Action',  \n      buttons: [  \n       {  \n          text: 'Delete',  \n          role: 'destructive',  \n          handler: () => {  \n            this.deleteItems(); \n          }  \n        }, {  \n          text: 'Cancel',  \n          role: 'cancel',  \n          handler: () => {  \n            console.log('Cancel clicked');  \n          }  \n        }  \n      ]  \n    });  \n    await actionSheet.present();  \n  }  \n\n\n  async openActionMenu(item: any) {  \n     const actionSheet = await this.actionSheetController.create({  \n     // header: 'Action',  \n      buttons: [ \n        {  \n          text: 'Update',  \n           handler: () => {  \n             this.editModal(item);\n          }  \n        }, \n        {  \n          text: 'View',  \n           handler: () => {  \n            console.log('Destructive clicked');  \n          }  \n        } \n        , {  \n          text: 'Cancel',  \n          role: 'cancel',  \n          handler: () => {  \n            console.log('Cancel clicked');  \n          }  \n        }  \n      ]  \n    });  \n    await actionSheet.present();  \n  } \n\n \n\n  async editModal(data:any) {\n    const modal = await this.modalController.create({\n      component: EditPage,\n      componentProps: { data: data },\n      backdropDismiss:false\n    });\n    modal.onDidDismiss().then(data=>{\n       if(this.apisService.isDefined(data.data.id)){\n        let tempArray=[];\n        this.items.map(function (item) {\n          if(item.id == data.data.id){ tempArray.push(data.data); console.log(item.id+'--'+data.data.id+' EQUAL');  } else {tempArray.push(item); }\n        });\n        this.items=this.apisService.sortArray(tempArray);\n       }\n    })\n    return await modal.present();\n  }\n  \n   \n  async deleteItems(){\n        let checkedItems= this.getCheckedItemList();\n        let form = new FormData();\n         form.append('ids', checkedItems);\n         form.append('auth_token',this.displayUserData.auth_token);\n  \n        this.apisService.deleteCustomers(form).subscribe((result: any) => {\n                if(!result.isError){\n                  let tempItems = [];\n                  for (var i = 0; i < this.items.length; i++) {\n                    if(!this.items[i].isSelected)\n                    tempItems.push(this.items[i]);\n                  }\n                this.items=tempItems;\n                }\n         },\n          (error: any)=>{\n            console.log(error);\n            if(error.status==0){\n              this.toastService.presentToast('Connection failed');\n            }\n            if(error.status==401){\n              this.toastService.presentToast('Authentcation failed');\n            }\n          }  \n      ) \n  }\n  \n  \n  \n  \n  \n  async newModal() {\n    const modal = await this.modalController.create({\n       component: NewPage,\n       backdropDismiss:false\n    });\n    modal.onDidDismiss().then(data=>{\n       if(data.data)\n       if(this.apisService.isDefined(data.data.id)){\n          this.items.push(data.data)\n          this.items=this.apisService.sortArray(this.items);\n       }\n    })\n    return await modal.present();\n  }\n  \n  \n  checkUncheckAll() {\n    for (var i = 0; i < this.items.length; i++) {\n      this.items[i].isSelected = this.masterSelected;\n    }\n    this.getCheckedItemList();\n  }\n  isAllSelected() {\n    this.masterSelected = this.items.every(function(item:any) {\n        return item.isSelected == true;\n      })\n    this.getCheckedItemList();\n  }\n  \n  getCheckedItemList(){\n    this.checkedList = [];\n    for (var i = 0; i < this.items.length; i++) {\n      if(this.items[i].isSelected)\n      this.checkedList.push(this.items[i].id);\n    }\n     this.checkedList = JSON.stringify(this.checkedList);\n     return this.checkedList;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewPage } from './new.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../components/components.module';\nimport { NewPageRoutingModule } from './new-routing.module';\nimport { CategoriesPageModule } from '../../common/categories/categories.module'\nimport { NewPage } from './new.page';\n @NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    NewPageRoutingModule,\n     ComponentsModule,\n     CategoriesPageModule\n  ],\n  declarations: [NewPage]\n})\nexport class NewPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button  (click)=\"close()\">\n        <span ion-text color=\"primary\" showWhen=\"ios\"></span>\n        <ion-icon name=\"close\" showWhen=\"android,windows\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>New Item/Service</ion-title>\n    <ion-button slot=\"end\" class=\"button button-clear button-positive\"   style=\"color: white;\"   [disabled]=\"!form.valid || desabled\"  (click)=\"saveForm()\">  \n      <ion-icon name=\"share\"></ion-icon>\n    </ion-button>\n\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content>\n     \n\n\n <div  class=\"dispplay-content-center\">\n      \n  \n   <form [formGroup]=\"form\" (ngSubmit)=\"saveForm()\" class=\"forms\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n       \n     \n\n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"Name\" formControlName=\"name\" clearInput autocapitalize=\"off\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.name\">\n          <div class=\"error-message\" *ngIf=\"form.get('name').hasError(validation.type) && (form.get('name').dirty || form.get('name').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n      \n\n      <ion-item class=\"input-item\">\n        <ion-input type=\"price\" placeholder=\"Price\" formControlName=\"price\" clearInput autocapitalize=\"off\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.price\">\n          <div class=\"error-message\" *ngIf=\"form.get('price').hasError(validation.type) && (form.get('price').dirty || form.get('price').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n      <ion-item class=\"input-item\">\n        <ion-textarea type=\"text\" placeholder=\"Description...\" formControlName=\"description\" clearInput autocapitalize=\"off\" ></ion-textarea>\n\n      </ion-item>\n    </ion-list>\n\n    <ion-card *ngIf=\"categories.length\" style=\"text-align: left;\">\n      <ion-card-content >\n              <ion-row  *ngFor=\"let category of categories\"> \n                 <ion-col>\n                  <label class=\"form-label\"> {{category.name}} </label>\n                  <div class=\"input-item\">\n                    <ion-input type=\"text\" placeholder=\"Price\"  (ionInput)=\"itemCategoryPriceUpdate(category,$event)\"   autocapitalize=\"off\" ></ion-input>\n                    <ion-icon style=\"padding: 10px 0px;font-size: 18px;\" name=\"close\" color=\"danger\"  (click)=\"deleteCategory(category.id)\"></ion-icon>\n                  </div>              \n                </ion-col>\n                \n             </ion-row>\n         </ion-card-content>\n     </ion-card>\n\n    \n    <ion-button slot=\"end\" class=\"button button-clear button-positive\" (click)=\"openCategoryModal()\" >  \n      <ion-icon name=\"add\"></ion-icon> Categories\n    </ion-button>\n    \n\n    <div class=\"padding20\"></div>\n\n    <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\"   [disabled]=\"!form.valid || desabled\">Save Now</ion-button>\n    <div class=\"padding20\"></div>\n  </form>\n</div> \n</ion-content> ","import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service'\nimport { ApisService } from '../../services/apis.service'\n\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\nimport { CategoriesPage } from '../../common/categories/categories.page' \n\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.page.html',\n  styleUrls: ['./new.page.scss'],\n})\nexport class NewPage  {\n\n \n  form: FormGroup;\n  desabled: boolean;\n  displayUserData: any; \n  categories=[];\n  \n  validation_messages = {\n    'name': [\n      { type: 'required', message: 'Name is required.' },\n      { type: 'minlength', message: 'Password must be at least 2 characters long.' }\n    ],\n    'price': [\n      { type: 'required', message: 'Price is required.' },\n      { type: 'min', message: 'Price must be a valid number.' },\n     ]\n  };\n\n \n\n  constructor(\n    public router: Router,\n    public menu: MenuController,\n    private authService: AuthService,\n    private apisService:ApisService,\n     private storageService: StorageService,\n    private toastService: ToastService,\n    navParams: NavParams,\n    public modalController: ModalController\n  ) {\n\n    this.form = new FormGroup({\n      'description': new FormControl(''),\n      'name': new FormControl('', Validators.compose([\n         Validators.required\n      ])),\n      'price': new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.min(1),\n     ])),\n    });\n  }\n  \n\n  ngOnInit(){\n    this.authService.userData$.subscribe((res:any) => {\n      this.displayUserData=res\n      })\n   }\n\n\n  saveForm(): void {\n    console.log('do Log In');\n     this.desabled=true;\n     let form = new FormData();\n     form.append('description', this.form.value.description);\n     form.append('name', this.form.value.name);\n     form.append('price', this.form.value.price);\n     form.append('categories', JSON.stringify(this.categories));\n     form.append('auth_token',this.displayUserData.auth_token);\n    this.apisService.itemAdd(form).subscribe((result: any) => {\n      this.desabled=false;\n                this.toastService.presentToast('Successfully added');\n                console.log(result.data);\n                this.modalController.dismiss(result.data);\n            },\n            (error: any)=>{\n              this.desabled=false;\n              if(error.status==0){\n                this.toastService.presentToast('Connection failed');\n              }\n              if(error.status==401){\n                console.log(error.error.data);\n                this.toastService.presentToast(error.error.data);\n              }\n            }  \n     )\n   }\n\n   itemCategoryPriceUpdate(category:any,event:any){\n                 let tempArray=[];\n                 this.categories.map(function (item) {\n                      if(item.id =category.id){ item.price=event.target.value } \n                      tempArray.push(item); \n                 });\n                 this.categories=tempArray;\n   }\n\n  async openCategoryModal() {\n    const modal = await this.modalController.create({\n      component: CategoriesPage,\n       componentProps: { data: this.categories },\n       backdropDismiss:false\n    });\n    modal.onDidDismiss().then(data=>{\n        if(this.apisService.isDefined(data.data[0])){\n          this.categories=(data.data);\n          this.categories=this.apisService.sortArray(this.categories);\n       }\n    })\n    return await modal.present();\n  }\n \n\n  deleteCategory(id : Number){\n    let tempArray=[];\n    this.categories.map(function (item) {\n      if(item.id !=id){ tempArray.push(item);  }\n    });\n    this.categories=tempArray;\n  }\n\n  close()\n  {\n    this.modalController.dismiss([]);\n  }\n} \n"]}