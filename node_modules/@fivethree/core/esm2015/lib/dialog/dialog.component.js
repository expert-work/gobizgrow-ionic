/**
 * @fileoverview added by tsickle
 * Generated from: lib/dialog/dialog.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { FivLoadingProgressBar } from './../loading-progress-bar/loading-progress-bar.component';
import { EventEmitter, Output, Input, ElementRef, Renderer2 } from '@angular/core';
import { Component, ViewChild } from '@angular/core';
import { FivOverlay } from '../overlay/overlay.component';
import { trigger, transition, style, animate, state, AnimationBuilder } from '@angular/animations';
import { DomController } from '@ionic/angular';
export class FivDialog {
    /**
     * @param {?} renderer
     * @param {?} domCtrl
     * @param {?} animation
     */
    constructor(renderer, domCtrl, animation) {
        this.renderer = renderer;
        this.domCtrl = domCtrl;
        this.animation = animation;
        this.verticalAlign = 'top';
        this.horizontalAlign = 'middle';
        this.shape = 'card';
        this.priority = 20001;
        this.backdrop = true;
        this.backdropDismiss = true;
        this.pullEnabled = true;
        // animation data
        this.inDuration = 160;
        this.outDuration = 120;
        this.outPosition = '-100%';
        this.toPosition = '0px';
        this.translate = '0px';
        this.fivClose = new EventEmitter();
        this.fivDurationOver = new EventEmitter();
        this.fivOpen = new EventEmitter();
        this.dialogState = 'out';
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    open() {
        this.overlay.show(this.priority);
        this.dialogState = this.verticalAlign;
        if (this.duration) {
            this.bar.shrinkIn(this.duration);
        }
    }
    /**
     * @return {?}
     */
    doneShrinking() {
        this.fivDurationOver.emit(this);
    }
    /**
     * @return {?}
     */
    close() {
        this.dialogState = 'out';
        this.bar.stopProgressAnimation();
    }
    /**
     * @return {?}
     */
    backdropClick() {
        if (this.backdropDismiss) {
            this.close();
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    animationDone(event) {
        if (event.fromState !== 'void' && event.toState === 'out') {
            this.transformDialog(0);
            this.overlay.hide();
            this.fivClose.emit(this);
        }
    }
    /**
     * @param {?} event
     * @return {?}
     */
    backdropAnimDone(event) {
        if (event.fromState === 'out' && event.toState !== 'void') {
            this.fivOpen.emit(this);
        }
    }
    /**
     * @return {?}
     */
    onRefresh() {
        this.close();
    }
    /**
     * @return {?}
     */
    fivCancel() {
        this.resetDialog(this.currentPullProgress);
    }
    /**
     * @param {?} progress
     * @return {?}
     */
    transformDialog(progress) {
        this.currentPullProgress = progress;
        this.domCtrl.write((/**
         * @return {?}
         */
        () => {
            if (this.verticalAlign === 'bottom') {
                this.renderer.setStyle(this.dialogRef.nativeElement, 'margin-bottom', `-${progress * 120}px`);
            }
            else if (this.verticalAlign === 'top') {
                this.renderer.setStyle(this.dialogRef.nativeElement, 'margin-top', `-${progress * 120}px`);
            }
            else if (this.verticalAlign === 'center') {
                this.renderer.setStyle(this.dialogRef.nativeElement, 'margin-top', `${progress * 120}px`);
            }
        }));
    }
    /**
     * @param {?} progress
     * @return {?}
     */
    resetDialog(progress) {
        /** @type {?} */
        let reset;
        if (this.verticalAlign === 'bottom') {
            reset = this.animation.build([
                style({ 'margin-bottom': `-${progress * 120}px` }),
                animate('150ms', style({ 'margin-bottom': `0px` }))
            ]);
        }
        else if (this.verticalAlign === 'top') {
            reset = this.animation.build([
                style({ 'margin-top': `-${progress * 120}px` }),
                animate('150ms', style({ 'margin-top': `0px` }))
            ]);
        }
        else if (this.verticalAlign === 'center') {
            reset = this.animation.build([
                style({ 'margin-top': `${progress * 120}px` }),
                animate('150ms', style({ 'margin-top': `0px` }))
            ]);
        }
        /** @type {?} */
        const animation = reset.create(this.dialogRef.nativeElement);
        animation.play();
        animation.onDone((/**
         * @return {?}
         */
        () => {
            animation.destroy();
            this.transformDialog(0);
        }));
    }
}
FivDialog.decorators = [
    { type: Component, args: [{
                selector: 'fiv-dialog',
                template: "<fiv-overlay #overlay>\n  <ion-content no-bounce [direction]=\"verticalAlign === 'top' ? 'up' : 'down'\" fivPull [enabled]=\"pullEnabled\" [maxPullHeight]=\"168\" [minPullHeight]=\"120\" (fivPull)=\"transformDialog($event)\"\n  (fivRefresh)=\"onRefresh()\" (fivCancel)=\"fivCancel()\"  *ngIf=\"backdrop\" (@fade.done)=\"backdropAnimDone($event)\"\n    [@fade]=\"{value: dialogState, params: { opacity: 0, inDuration: '120ms' }}\" (click)=\"backdropClick()\" class=\"backdrop\">\n</ion-content>\n  <div #dialog [@fade]=\"{value: dialogState, params: { opacity: 0, inDuration: '120ms' }}\"\n  [@slide]=\"{value: dialogState, params: {top: outPosition, inDuration: inDuration + 'ms',outDuration: outDuration + 'ms', toPosition: toPosition, translate: translate,translateX: horizontalAlign === 'middle' ? 'translateX(-50%)' :  '' }}\"\n  (@slide.done)=\"animationDone($event)\" class=\"dialog\" [ngClass]=\"[verticalAlign, horizontalAlign, shape]\">\n    <ng-container>\n      <ng-container *ngTemplateOutlet=\"card\"></ng-container>\n    </ng-container>\n  </div>\n\n</fiv-overlay>\n\n<ng-template #card>\n  <ion-card>\n    <fiv-loading-progress-bar [verticalAlign]=\"verticalAlign === 'top' ? 'bottom' : 'top'\"\n      (fivDoneShrinking)=\"doneShrinking()\" #bar></fiv-loading-progress-bar>\n    <ng-content></ng-content>\n  </ion-card>\n</ng-template>",
                animations: [
                    trigger('slide', [
                        transition('out => top', [
                            style({ top: '0', transform: 'translateY(-100%) {{translateX}}' }),
                            animate('220ms ease-out')
                        ]),
                        transition('out => center', [
                            style({
                                top: '50%',
                                transform: 'translateY(-50%) {{translateX}} scale(0)',
                                opacity: 0
                            }),
                            animate('220ms ease-out', style({
                                top: '50%',
                                transform: 'translateY(-50%) {{translateX}} scale(1)',
                                opacity: 1
                            }))
                        ]),
                        transition('out => bottom', [
                            style({ bottom: '0', transform: 'translateY(100%) {{translateX}}' }),
                            animate('220ms ease-out')
                        ]),
                        transition('top => out', [
                            style({ top: '0', transform: '*' }),
                            animate('140ms ease-in', style({ top: '0', transform: 'translateY(-100%) {{translateX}}' }))
                        ]),
                        transition('center => out', [
                            style({
                                top: '50%',
                                transform: '*',
                                opacity: 1
                            }),
                            animate('140ms ease-in', style({
                                top: '50%',
                                transform: 'translateY(-50%) {{translateX}} scale(0)',
                                opacity: 0
                            }))
                        ]),
                        transition('bottom => out', [
                            style({ bottom: '0', transform: '*' }),
                            animate('140ms ease-in', style({ bottom: '0', transform: 'translateY(100%) {{translateX}}' }))
                        ])
                        // state('bottom', style({ bottom: '0', transform: '*' })),
                        // state('top', style({ top: '0', transform: '*' })),
                        // state('center', style({ top: '50%', transform: 'translateY(-50%) {{translateX}}' }))
                    ]),
                    trigger('fade', [
                        transition('out => *', [
                            style({ opacity: '{{opacity}}' }),
                            animate('{{inDuration}} ease-out', style({ opacity: '1' }))
                        ], { params: { opacity: 0, inDuration: '250ms' } }),
                        transition('* => out', [
                            style({ opacity: '1' }),
                            animate('{{outDuration}} ease-in', style({ opacity: '0' }))
                        ], { params: { opacity: 0, outDuration: '200ms' } }),
                        state('out', style({ opacity: '0' }))
                    ])
                ],
                styles: ["ion-grid{--ion-grid-padding:0;--ion-grid-column-padding:0}.dialog{--min-width:340px;position:absolute;min-width:var(--min-width)}@media (max-width:600px){.dialog{--min-width:100%}}.dialog.fill{background:var(--ion-item-background);box-shadow:0 4px 16px rgba(0,0,0,.12)}.dialog.fill .sc-ion-card-ios-h,.dialog.fill .sc-ion-card-md-h{margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:0;margin-inline-end:0;box-shadow:none;margin-top:0;margin-bottom:0}.dialog.fill.bottom .sc-ion-card-ios-h,.dialog.fill.bottom .sc-ion-card-md-h,.dialog.fill.top .sc-ion-card-ios-h,.dialog.fill.top .sc-ion-card-md-h{border-radius:0}.dialog.top.left{padding-top:env(safe-area-inset-top);top:0;left:0}.dialog.top.right{padding-top:env(safe-area-inset-top);top:0;right:0}.dialog.top.middle{padding-top:env(safe-area-inset-top);top:0;left:50%;transform:translateX(-50%)}.dialog.center.middle{padding-top:env(safe-area-inset-top);top:50%;left:50%;transform:translate(-50%,-50%)}.dialog.center.left{top:50%;padding-top:env(safe-area-inset-top);left:0;transform:translateY(-50%)}.dialog.center.right{right:0;top:50%;padding-top:env(safe-area-inset-top);transform:translateY(-50%)}.dialog.bottom.left{bottom:0;left:0;padding-bottom:env(safe-area-inset-bottom)}.dialog.bottom.right{bottom:0;right:0;padding-bottom:env(safe-area-inset-bottom)}.dialog.bottom.middle{bottom:0;left:50%;transform:translateX(-50%);padding-bottom:env(safe-area-inset-bottom)}.backdrop{width:100%;height:100%;--background:rgba(0, 0, 0, 0.2);position:absolute}"]
            }] }
];
/** @nocollapse */
FivDialog.ctorParameters = () => [
    { type: Renderer2 },
    { type: DomController },
    { type: AnimationBuilder }
];
FivDialog.propDecorators = {
    verticalAlign: [{ type: Input }],
    horizontalAlign: [{ type: Input }],
    shape: [{ type: Input }],
    priority: [{ type: Input }],
    backdrop: [{ type: Input }],
    backdropDismiss: [{ type: Input }],
    pullEnabled: [{ type: Input }],
    duration: [{ type: Input }],
    inDuration: [{ type: Input }],
    outDuration: [{ type: Input }],
    fivClose: [{ type: Output }],
    fivDurationOver: [{ type: Output }],
    fivOpen: [{ type: Output }],
    overlay: [{ type: ViewChild, args: [FivOverlay, { static: false },] }],
    bar: [{ type: ViewChild, args: [FivLoadingProgressBar, { static: false },] }],
    dialogRef: [{ type: ViewChild, args: ['dialog', { static: false },] }]
};
if (false) {
    /** @type {?} */
    FivDialog.prototype.verticalAlign;
    /** @type {?} */
    FivDialog.prototype.horizontalAlign;
    /** @type {?} */
    FivDialog.prototype.shape;
    /** @type {?} */
    FivDialog.prototype.priority;
    /** @type {?} */
    FivDialog.prototype.backdrop;
    /** @type {?} */
    FivDialog.prototype.backdropDismiss;
    /** @type {?} */
    FivDialog.prototype.pullEnabled;
    /** @type {?} */
    FivDialog.prototype.duration;
    /** @type {?} */
    FivDialog.prototype.inDuration;
    /** @type {?} */
    FivDialog.prototype.outDuration;
    /** @type {?} */
    FivDialog.prototype.outPosition;
    /** @type {?} */
    FivDialog.prototype.toPosition;
    /** @type {?} */
    FivDialog.prototype.translate;
    /** @type {?} */
    FivDialog.prototype.fivClose;
    /** @type {?} */
    FivDialog.prototype.fivDurationOver;
    /** @type {?} */
    FivDialog.prototype.fivOpen;
    /** @type {?} */
    FivDialog.prototype.overlay;
    /** @type {?} */
    FivDialog.prototype.bar;
    /** @type {?} */
    FivDialog.prototype.dialogRef;
    /** @type {?} */
    FivDialog.prototype.dialogState;
    /** @type {?} */
    FivDialog.prototype.currentPullProgress;
    /**
     * @type {?}
     * @private
     */
    FivDialog.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    FivDialog.prototype.domCtrl;
    /**
     * @type {?}
     * @private
     */
    FivDialog.prototype.animation;
}
//# sourceMappingURL=data:application/json;base64,