{"version":3,"sources":["webpack:///src/app/invoices/list/list-routing.module.ts","webpack:///src/app/invoices/list/list.module.ts","webpack:///src/app/invoices/list/list.page.html","webpack:///src/app/invoices/list/list.page.ts","webpack:///src/app/services/apis.service.ts","webpack:///src/app/services/toast.service.ts"],"names":["routes","path","component","ListPageRoutingModule","ListPageModule","ListPage","actionSheetController","apisService","toastService","authService","items","x","page","last_page","numTimesLeft","userData$","subscribe","res","displayUserData","q","auth_token","undefined","addMoreItems","event","setTimeout","console","log","target","complete","form","FormData","append","toString","invoices","result","data","total","push","error","status","presentToast","evt","srcElement","value","create","buttons","text","role","handler","actionSheet","present","ApisService","httpService","storageService","router","postData","post","ToastService","toastController","infoMessage","message","duration","toast"],"mappings":"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","file":"invoices-list-list-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListPage } from './list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { ListPageRoutingModule } from './list-routing.module';\n\nimport { ListPage } from './list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListPageRoutingModule,\n    ComponentsModule\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      Invoices\n    </ion-title>\n    <ion-buttons slot=\"end\" class=\"button button-clear button-positive\">  \n         <ion-icon name=\"add\" class=\"add-new\"></ion-icon>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n\n\n\n<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\" style=\"padding-left: 15px;\">\n      <ion-checkbox color=\"secondary\" (click)=\"openMenu()\" ></ion-checkbox>\n    </ion-buttons>\n\n    <ion-searchbar value={{q}} (ionInput)=\"searchBox($event)\"    style=\"    min-width: 200px !important;\"></ion-searchbar>\n\n\n    \n    <ion-buttons slot=\"end\" class=\"button button-clear button-positive\" style=\"padding-right: 15px;\">  \n      <ion-select placeholder=\"\" value=\"f\">\n        <ion-select-option value=\"f\">All</ion-select-option>\n        <ion-select-option value=\"m\">Draft</ion-select-option>\n        <ion-select-option value=\"e\">Sent</ion-select-option>\n        <ion-select-option value=\"es\">Accepted</ion-select-option>\n        <ion-select-option value=\"as\">Decliened</ion-select-option>\n      </ion-select>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n\n\n\n \n  <ion-content color=\"light \" class=\"action-sheets-home-page\">  \n    <ion-list style=\"background: #f4f5f8;\">  \n      <ion-item  lines=\"none\" *ngFor=\"let item of items\"   class=\"list-item\">\n         \n            <div class=\"list-item-checkbox\">\n              <ion-buttons><ion-checkbox  (click)=\"openMenu()\" ></ion-checkbox></ion-buttons>\n            </div>\n            <div class=\"flex padding-5px\">\n              <p class=\"custom-list-p\" color=\"primary\" >{{item.invoice_number}}</p>\n              <p class=\"custom-list-p\" color=\"secondary\" style=\"color:teal\">{{item.customer_name}}</p>\n            </div>\n            <div class=\"flex padding-5px\">\n              <p class=\"custom-list-p\" color=\"primary\" style=\"color:#ff0062\" >{{item.due_date}}</p>\n              <p class=\"custom-list-p\" color=\"secondary\"  >{{item.invoice_date}} </p>\n            </div>\n            <div class=\"flex padding-5px\">  \n              <p class=\"custom-list-p text-align-left {{item.status}}\">{{item.status}}</p>\n              <p class=\"custom-list-p text-align-left\" color=\"secondary\" style=\"color:blue\" >{{item.due_amount_format}} </p>\n            </div>\n            <div class=\"flex padding-5px\">\n              <ion-icon name=\"options\" class=\"list-item-option\" (click)=\"openOptionMenu()\"></ion-icon>\n            </div>\n\n        \n       </ion-item>  \n    </ion-list>  \n    <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\" [disabled]=\"numTimesLeft <= 0\">  \n      <ion-infinite-scroll-content  \n        loadingSpinner=\"bubbles\"  \n        loadingText=\"Loading more data...\">  \n      </ion-infinite-scroll-content>  \n    </ion-infinite-scroll>  \n  </ion-content>  ","import { Component, OnInit } from '@angular/core';\nimport { ActionSheetController } from '@ionic/angular';\nimport { ApisService } from '../../services/apis.service';\nimport { ToastService } from '../../services/toast.service';\nimport { AuthService } from '../../services/auth.service';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.page.html',\n  styleUrls: ['./list.page.scss'],\n})\nexport class ListPage implements OnInit {\n\n \n \n  displayUserData: any;\n  q:any;\n\n  constructor(\n       public actionSheetController: ActionSheetController, \n       private apisService: ApisService,\n       private toastService:ToastService,\n       private authService: AuthService\n       ) {\n              \n       }\n\n\n   items = [];  \n   x= 0;\n   page=1;\n   last_page=0;\n   numTimesLeft = 5;  \n    \n   ngOnInit(){\n    this.authService.userData$.subscribe((res:any) => {\n      this.displayUserData=res\n      this.q='';\n      if (this.displayUserData.auth_token !== undefined) { this.addMoreItems(); }\n    })\n   }\n  \n  \n  loadData(event) {  \n    setTimeout(() => {  \n      console.log('Done');  \n      this.addMoreItems();  \n      this.numTimesLeft -= 1;  \n      event.target.complete();  \n    }, 500);  \n  }  \n  addMoreItems() {  \n     let form = new FormData();\n         form.append('page',this.page.toString() );\n         form.append('q',this.q );\n         form.append('auth_token',this.displayUserData.auth_token);\n          this.apisService.invoices(form).subscribe((result: any) => {\n             if(result.data.total){\n               this.page= this.page+1;\n               this.items.push(...result.data.data)\n             }else{\n\n             }\n          },\n           (error: any)=>{\n             if(error.status==0){\n               this.toastService.presentToast('Connection failed');\n             }\n             if(error.status==401){\n               this.toastService.presentToast('Authentcation failed');\n             }\n           }  \n    ) \n  } \n  searchBox(evt){\n    this.q= evt.srcElement.value;\n    this.page=1;\n    this.items = [];\n    this.addMoreItems()\n  }\n  async openMenu() {  \n    const actionSheet = await this.actionSheetController.create({  \n     // header: 'Action',  \n      buttons: [  \n       {  \n          text: 'Delete',  \n          role: 'destructive',  \n          handler: () => {  \n            console.log('Destructive clicked');  \n          }  \n        }, {  \n          text: 'Cancel',  \n          role: 'cancel',  \n          handler: () => {  \n            console.log('Cancel clicked');  \n          }  \n        }  \n      ]  \n    });  \n    await actionSheet.present();  \n  }  \n\n\n  async openOptionMenu() {  \n    const actionSheet = await this.actionSheetController.create({  \n     // header: 'Action',  \n      buttons: [ \n        {  \n          text: 'Update',  \n           handler: () => {  \n            console.log('Destructive clicked');  \n          }  \n        }, \n        {  \n          text: 'View',  \n           handler: () => {  \n            console.log('Destructive clicked');  \n          }  \n        }, \n        {  \n          text: 'Send',  \n           handler: () => {  \n            console.log('Destructive clicked');  \n          }  \n        },\n        {  \n          text: 'Mark As Sent',  \n           handler: () => {  \n            console.log('Destructive clicked');  \n          }  \n        },\n        {  \n          text: 'Resend',  \n           handler: () => {  \n            console.log('Destructive clicked');  \n          }  \n        },\n       {  \n          text: 'Delete',  \n          role: 'destructive',  \n          handler: () => {  \n            console.log('Destructive clicked');  \n          }  \n        }, {  \n          text: 'Cancel',  \n          role: 'cancel',  \n          handler: () => {  \n            console.log('Cancel clicked');  \n          }  \n        }  \n      ]  \n    });  \n    await actionSheet.present();  \n  } \n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpService } from './http.service';\nimport { StorageService } from './storage.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApisService {\n\n  constructor(\n    private httpService: HttpService,\n    private storageService: StorageService,\n    private router: Router\n  ) { }\n\n\n  signupComplete(postData: any): Observable<any> {\n    return this.httpService.post('signup-complete',postData);\n  }\n\n\n //Customers\ncustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/all',postData);\n}\n\ninvoices(postData: any): Observable<any> {\n  return this.httpService.post('invoices/all',postData);\n}\n\nitems(postData: any): Observable<any> {\n  return this.httpService.post('items/all',postData);\n}\n\npayments(postData: any): Observable<any> {\n  return this.httpService.post('payments/all',postData);\n}\n\nexpenses(postData: any): Observable<any> {\n  return this.httpService.post('expenses/all',postData);\n}\n\n\n //Invoices\n //Items\n //Payments\n //Expenses\n //Items Categories\n //Expenses Categories\n //Taxes\n //Payment Merhods\n\n\n\n\n // get Industries industries\n  industries(postData: any): Observable<any> {\n    return this.httpService.post('industries',postData);\n  }\n  // get All Estimates\n  estimates(postData: any): Observable<any> {\n    return this.httpService.post('estimates/all',postData);\n  }\n\n  \n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(public toastController: ToastController) { }\n  \n  async presentToast(infoMessage: string) {\n     const toast = await this.toastController.create({\n       message:infoMessage,\n       duration:3000\n     });\n     toast.present();\n\n  }\n}\n"]}