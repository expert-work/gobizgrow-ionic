/**
 * @fileoverview added by tsickle
 * Generated from: lib/center/center.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, HostBinding } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
var FivCenter = /** @class */ (function () {
    function FivCenter(sanitizer) {
        this.sanitizer = sanitizer;
        this.vertical = true;
        this.horizontal = true;
    }
    Object.defineProperty(FivCenter.prototype, "myStyle", {
        get: /**
         * @return {?}
         */
        function () {
            // tslint:disable-next-line:max-line-length
            /** @type {?} */
            var style = "position: absolute; " + (this.vertical && this.horizontal
                ? 'top: 50%; left: 50%; transform: translateY(-50%) translateX(-50%);'
                : this.vertical
                    ? 'top: 50%; transform: translateY(-50%);'
                    : 'left: 50%; transform: translateX(-50%);');
            return this.sanitizer.bypassSecurityTrustStyle(style);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FivCenter.prototype, "fivCenter", {
        set: /**
         * @param {?} center
         * @return {?}
         */
        function (center) {
            if (center) {
                this.vertical = center.vertical;
                this.horizontal = center.horizontal;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    FivCenter.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    FivCenter.decorators = [
        { type: Directive, args: [{
                    selector: '[fivCenter]'
                },] }
    ];
    /** @nocollapse */
    FivCenter.ctorParameters = function () { return [
        { type: DomSanitizer }
    ]; };
    FivCenter.propDecorators = {
        myStyle: [{ type: HostBinding, args: ['style',] }],
        fivCenter: [{ type: Input }]
    };
    return FivCenter;
}());
export { FivCenter };
if (false) {
    /** @type {?} */
    FivCenter.prototype.vertical;
    /** @type {?} */
    FivCenter.prototype.horizontal;
    /**
     * @type {?}
     * @private
     */
    FivCenter.prototype.sanitizer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2VudGVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmaXZldGhyZWUvY29yZS8iLCJzb3VyY2VzIjpbImxpYi9jZW50ZXIvY2VudGVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUN0RSxPQUFPLEVBQWEsWUFBWSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFcEU7SUFPRSxtQkFBb0IsU0FBdUI7UUFBdkIsY0FBUyxHQUFULFNBQVMsQ0FBYztRQUgzQyxhQUFRLEdBQUcsSUFBSSxDQUFDO1FBQ2hCLGVBQVUsR0FBRyxJQUFJLENBQUM7SUFFNEIsQ0FBQztJQUUvQyxzQkFDSSw4QkFBTzs7OztRQURYOzs7Z0JBR1EsS0FBSyxHQUFHLDBCQUNaLElBQUksQ0FBQyxRQUFRLElBQUksSUFBSSxDQUFDLFVBQVU7Z0JBQzlCLENBQUMsQ0FBQyxvRUFBb0U7Z0JBQ3RFLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUTtvQkFDZixDQUFDLENBQUMsd0NBQXdDO29CQUMxQyxDQUFDLENBQUMseUNBQXlDLENBQzdDO1lBQ0YsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDLHdCQUF3QixDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hELENBQUM7OztPQUFBO0lBRUQsc0JBQWEsZ0NBQVM7Ozs7O1FBQXRCLFVBQXVCLE1BQWtEO1lBQ3ZFLElBQUksTUFBTSxFQUFFO2dCQUNWLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLFFBQVEsQ0FBQztnQkFDaEMsSUFBSSxDQUFDLFVBQVUsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDO2FBQ3JDO1FBQ0gsQ0FBQzs7O09BQUE7Ozs7SUFFRCw0QkFBUTs7O0lBQVIsY0FBa0IsQ0FBQzs7Z0JBN0JwQixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGFBQWE7aUJBQ3hCOzs7O2dCQUptQixZQUFZOzs7MEJBVzdCLFdBQVcsU0FBQyxPQUFPOzRCQWFuQixLQUFLOztJQVFSLGdCQUFDO0NBQUEsQUE5QkQsSUE4QkM7U0EzQlksU0FBUzs7O0lBQ3BCLDZCQUFnQjs7SUFDaEIsK0JBQWtCOzs7OztJQUVOLDhCQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIEhvc3RCaW5kaW5nLCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNhZmVTdHlsZSwgRG9tU2FuaXRpemVyIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XG5cbkBEaXJlY3RpdmUoe1xuICBzZWxlY3RvcjogJ1tmaXZDZW50ZXJdJ1xufSlcbmV4cG9ydCBjbGFzcyBGaXZDZW50ZXIgaW1wbGVtZW50cyBPbkluaXQge1xuICB2ZXJ0aWNhbCA9IHRydWU7XG4gIGhvcml6b250YWwgPSB0cnVlO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgc2FuaXRpemVyOiBEb21TYW5pdGl6ZXIpIHt9XG5cbiAgQEhvc3RCaW5kaW5nKCdzdHlsZScpXG4gIGdldCBteVN0eWxlKCk6IFNhZmVTdHlsZSB7XG4gICAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lOm1heC1saW5lLWxlbmd0aFxuICAgIGNvbnN0IHN0eWxlID0gYHBvc2l0aW9uOiBhYnNvbHV0ZTsgJHtcbiAgICAgIHRoaXMudmVydGljYWwgJiYgdGhpcy5ob3Jpem9udGFsXG4gICAgICAgID8gJ3RvcDogNTAlOyBsZWZ0OiA1MCU7IHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKSB0cmFuc2xhdGVYKC01MCUpOydcbiAgICAgICAgOiB0aGlzLnZlcnRpY2FsXG4gICAgICAgID8gJ3RvcDogNTAlOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7J1xuICAgICAgICA6ICdsZWZ0OiA1MCU7IHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTsnXG4gICAgfWA7XG4gICAgcmV0dXJuIHRoaXMuc2FuaXRpemVyLmJ5cGFzc1NlY3VyaXR5VHJ1c3RTdHlsZShzdHlsZSk7XG4gIH1cblxuICBASW5wdXQoKSBzZXQgZml2Q2VudGVyKGNlbnRlcjogeyB2ZXJ0aWNhbDogYm9vbGVhbjsgaG9yaXpvbnRhbDogYm9vbGVhbiB9KSB7XG4gICAgaWYgKGNlbnRlcikge1xuICAgICAgdGhpcy52ZXJ0aWNhbCA9IGNlbnRlci52ZXJ0aWNhbDtcbiAgICAgIHRoaXMuaG9yaXpvbnRhbCA9IGNlbnRlci5ob3Jpem9udGFsO1xuICAgIH1cbiAgfVxuXG4gIG5nT25Jbml0KCk6IHZvaWQge31cbn1cbiJdfQ==