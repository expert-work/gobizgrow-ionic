{"version":3,"sources":["./src/app/shell/aspect-ratio/aspect-ratio.component.html","./src/app/shell/aspect-ratio/aspect-ratio.component.ts","./src/app/shell/image-shell/image-shell.component.html","./src/app/shell/image-shell/image-shell.component.ts"],"names":[],"mappings":"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","file":"default~estimates-new-new-module-ngfactory~getting-started-getting-started-module-ngfactory~invoices~cc8ace16-es2015.js","sourcesContent":["<div class=\"content-wrapper\">\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'app-aspect-ratio',\n  templateUrl: './aspect-ratio.component.html',\n  styleUrls: ['./aspect-ratio.component.scss']\n})\nexport class AspectRatioComponent {\n\n  @HostBinding('style.padding') ratioPadding = '0px';\n\n  @Input()\n  set ratio(ratio: { w: number, h: number }) {\n    ratio = (ratio !== undefined && ratio !== null) ? ratio : {w: 1, h: 1};\n\n    const heightRatio = (ratio.h / ratio.w * 100) + '%';\n\n    // Conserve aspect ratio (see: http://stackoverflow.com/a/10441480/1116959)\n    this.ratioPadding = '0px 0px ' + heightRatio + ' 0px';\n  }\n\n  constructor() { }\n}\n","<ion-spinner class=\"spinner\"></ion-spinner>\n<img class=\"inner-img\" [src]=\"_src\" [alt]=\"_alt\" (load)=\"_imageLoaded()\"/>\n<ng-content *ngIf=\"_display === 'cover'\"></ng-content>\n","import { Component, Input, HostBinding, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { AppShellConfig } from '../config/app-shell.config';\n\n@Component({\n  selector: 'app-image-shell',\n  templateUrl: './image-shell.component.html',\n  styleUrls: ['./image-shell.component.scss']\n})\nexport class ImageShellComponent {\n  // To debug shell styles, change configuration in the assets/app-shell.config.json file\n  private debugDisplay = (AppShellConfig.settings && AppShellConfig.settings.debug) ? AppShellConfig.settings.debug : false;\n\n  // tslint:disable-next-line:variable-name\n  _src = '';\n  // tslint:disable-next-line:variable-name\n  _alt = '';\n  // tslint:disable-next-line:variable-name\n  _display = '';\n\n  @HostBinding('class.img-loaded') imageLoaded = false;\n\n  @HostBinding('style.backgroundImage') backgroundImage: string;\n\n  @HostBinding('attr.display')\n  @Input()\n  set display(val: string) {\n    this._display = (val !== undefined && val !== null) ? val : '';\n  }\n  get display(): string {\n    return this._display;\n  }\n\n  @Input()\n  set src(val: string) {\n    if (!this.debugDisplay) {\n      this._src = (val !== undefined && val !== null) ? val : '';\n    }\n\n    if (this._display === 'cover') {\n      // Unset the background-image\n      this.backgroundImage = 'unset';\n    }\n\n    // Show loading indicator\n    // When using SSR (Server Side Rendering), avoid the loading animation while the image resource is being loaded\n    if (isPlatformServer(this.platformId)) {\n      this.imageLoaded = true;\n    } else {\n      this.imageLoaded = false;\n    }\n  }\n\n  @Input()\n  set alt(val: string) {\n    this._alt = (val !== undefined && val !== null) ? val : '';\n  }\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: string\n  ) {}\n\n  _imageLoaded() {\n    this.imageLoaded = true;\n\n    // If it's a cover image then set the background-image property accordingly\n    if (this._display === 'cover') {\n      this.backgroundImage = 'url(' + this._src + ')';\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}