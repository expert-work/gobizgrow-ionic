{"version":3,"sources":["webpack:///src/app/customers/list/list-routing.module.ts","webpack:///src/app/customers/list/list.module.ts","webpack:///src/app/customers/list/list.page.html","webpack:///src/app/customers/list/list.page.ts","webpack:///src/app/customers/new/new-routing.module.ts","webpack:///src/app/customers/new/new.module.ts","webpack:///src/app/customers/new/new.page.html","webpack:///src/app/customers/new/new.page.ts","webpack:///src/app/services/apis.service.ts","webpack:///src/app/services/toast.service.ts"],"names":["routes","path","component","ListPageRoutingModule","ListPageModule","ListPage","actionSheetController","apisService","toastService","authService","modalController","items","x","page","last_page","numTimesLeft","playersList","name","image","role","batting_style","bowling_style","nationality","matches","runs","fifties","fours","sixes","userData$","subscribe","res","displayUserData","q","auth_token","undefined","addMoreItems","event","setTimeout","console","log","target","complete","form","FormData","append","toString","customers","result","data","total","push","error","status","presentToast","evt","srcElement","value","create","buttons","text","handler","actionSheet","present","player","componentProps","backdropDismiss","modal","index","editmodal","onDidDismiss","then","NewPageRoutingModule","NewPageModule","NewPage","router","menu","storageService","navParams","viewCtrl","validation_messages","type","message","get","compose","required","pattern","email","password","login","store","navigate","dismiss","ApisService","httpService","postData","post","ToastService","toastController","infoMessage","duration","toast"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;QAWaC,qB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,c;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECgBT,8T,GAAA,4T,GACI;AAAA;AAAA,oBAAmC,UAAnC;;AAAY;;;;;AAAZ;AAAA,wN,GAAA,8T,GACE,gI,IAEF;AAAA;AAAA,oBAAkC,UAAlC;;AAAW;;;;;AAAX;AAAA,sN,GAAA,6T,GACE,oH,IAAI,6E,IACJ,mH,IAAG,8E,IAEL;AAAA;AAAA,oBAAyE,UAAzE;;AAAqC;;;;;AAArC;AAAA,oN,GAAA;AAAA;AAAA;AAAA,c,GACA;AAAA;AAAA,oBAA2E,UAA3E;;AAAkD;;;;;AAAlD;AAAA,oN,GAAA;AAAA;AAAA;AAAA,c,GAA2E;AADtD;AAAX;;AAAV,uBAAqB,SAArB,EAAU,SAAV;;AACwB;AAAd;;AAAV,uBAAwB,SAAxB,EAAU,SAAV;AAAuB,O,EAAA;AAPhB,0BAAe,QAAf,CAAe,SAAf,CAAe,KAAf;;AAAL,sBAAK,SAAL;;AAGI;;AAAA;;AACD;;AAAA;AAAU,O;AAAA;;;qEAajB,uW,GAAA;AAAA;AAAA,c,GAEM,oJ,IACE,sU,GAAA,+T,GAAa;AAAA;AAAA;;AAAA;;;;;;;;;;AAAe;;;;;AAAf;AAAA,4N,GAAA;AAAA;AAAA,+E,EAAA,gU,EAAA,kN,GAEf,kJ,IACE,uK,IAA0C,8E,IAE5C,mJ,IACE,mM,IAAgE,8E,IAGlE,mJ,IACE;AAAA;AAAA,oBAA6E,UAA7E;;AAAkD;;;;;AAAlD;AAAA,oN,GAAA;AAAA;AAAA,c,GAA6E;AAb1E;;AAAX,sBAAW,SAAX;;AAakB;;AAAV,uBAAU,SAAV;AAAwB,O,EAAA;AAPkB;;AAAA;;AAGsB;;AAAA;AAAc,O;AAAA;;;qEArE5F,oU,GAAA,8T,GACE,wV,GAAA;AAAA;AAAA,c,GACE,oV,GAAA,+T,GACE,6U,GAAA,kU,GAEF,6T,GAAA,6T,GAAW,kF,IAGX;AAAA;AAAA,oBAA0F,UAA1F;;AAAoE;;;;;AAApE;AAAA,0N,GAAA,gU,GACK,gW,GAAA;AAAA;AAAA,c,GAMT,qU,GAAA,+T,GACE,8X,GAAA,gU,GACE,uX,GAAA,gU,GACE;AAAA;AAAA;;AAAA;;;;;;;;;;AAAgC;;;;;AAAhC;AAAA,4N,GAAA;AAAA;AAAA,+E,EAAA;AAAA;AAAA,c,EAAA,mN,GAEF;AAAA;AAAA;;AAAA;;;;;;;;;;AAA2B;;;;;AAA3B;AAAA,8N,GAAA;AAAA;AAAA,4E,EAAA;AAAA;AAAA,c,EAAA,gN,GACA,ya,GAAA,gU,GACE;AAAA;;AAAA;;;;;;;;;;;OAAA,E,oGAAA,E,wGAAA,C;;;;;qOACE,kW,GAAA;AAAA;AAAA,c,GAA6B,0E,IAC7B,kW,GAAA;AAAA;AAAA,c,GAA6B,4E,IAC7B,kW,GAAA;AAAA;AAAA,c,GAA6B,2E,IAC7B,mW,GAAA;AAAA;AAAA,c,GAA8B,+E,IAC9B,mW,GAAA;AAAA;AAAA,c,GAA8B,gF,IAUtC,8T,GAAA,6T,GACE,mW,GAAA;AAAA;AAAA,c,GACE,8T,GAAA,8T,GAAW,gF,IAEX,uG,GAAA;AAAA;AAAA,c,GAgBF,gY,GAAA;AAAA;AAAA,c,GAEE,4V,GAAA,6T,GACE,uG,GAAA;AAAA;AAAA,c,GAmBF;AAAA;AAAA,oBAAuG,UAAvG;;AAAuC;;;;;AAAvC;AAAA,wO,GAAA;AAAA;AAAA;AAAA,c,GACE,sb,GAAA;AAAA;AAAA;AAAA,c,GAEqC;AAAA;AAjF5B;;AAAb,sBAAa,SAAb;;AAQiB;;AAAV,uBAAU,SAAV;;AASW;;AAAd,uBAAc,SAAd;;AAEa;;AAAf,uBAAe,SAAf;;AAEc;AAAe;;AAA3B,uBAAY,SAAZ,EAA2B,SAA3B;;AACqB;;AAAnB,uBAAmB,SAAnB;;AACmB;;AAAnB,uBAAmB,SAAnB;;AACmB;;AAAnB,uBAAmB,SAAnB;;AACmB;;AAAnB,uBAAmB,SAAnB;;AACmB;;AAAnB,uBAAmB,UAAnB;;AAWW;;AAAjB,uBAAiB,UAAjB;;AAGY,4BAAyC,YAAzC;;AAAV,uBAAU,UAAV;;AAgBW;;AAAb,uBAAa,UAAb;;AAG4B,4BAA0B,MAA1B;;AAAxB,uBAAwB,UAAxB;;AAmBsE;AAAnD;;AAArB,uBAAwE,UAAxE,EAAqB,UAArB;;AAEI;AACA;;AAFF,uBACE,UADF,EAEE,UAFF;AAEoC,O,EAAA,I;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCrE7BC,Q;AAKX,wBACYC,qBADZ,EAEaC,WAFb,EAGaC,YAHb,EAIaC,WAJb,EAKaC,eALb,EAK6C;AAAA;;AAJjC,aAAAJ,qBAAA,GAAAA,qBAAA;AACC,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AACA,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AAIZ,aAAAC,KAAA,GAAQ,EAAR;AACA,aAAAC,CAAA,GAAG,CAAH;AACA,aAAAC,IAAA,GAAK,CAAL;AACA,aAAAC,SAAA,GAAU,CAAV;AACA,aAAAC,YAAA,GAAe,CAAf;AAyGD,aAAAC,WAAA,GAAkB,CAAC;AACjBC,cAAI,EAAC,UADY;AACDC,eAAK,EAAC,sDADL;AAC4DC,cAAI,EAAC,sBADjE;AAEjBC,uBAAa,EAAC,cAFG;AAGjBC,uBAAa,EAAC,kBAHG;AAIjBC,qBAAW,EAAC,QAJK;AAKjBC,iBAAO,EAAC,GALS;AAMjBC,cAAI,EAAC,IANY;AAOjBC,iBAAO,EAAC,EAPS;AAQjBC,eAAK,EAAC,GARW;AASjBC,eAAK,EAAC;AATW,SAAD,EAWlB;AACEV,cAAI,EAAC,cADP;AACsBC,eAAK,EAAC,wDAD5B;AACqFC,cAAI,EAAC,SAD1F;AAEAC,uBAAa,EAAC,cAFd;AAGAC,uBAAa,EAAC,oBAHd;AAIAC,qBAAW,EAAC,QAJZ;AAKAC,iBAAO,EAAC,EALR;AAMAC,cAAI,EAAC,IANL;AAOAC,iBAAO,EAAC,CAPR;AAQAC,eAAK,EAAC,EARN;AASAC,eAAK,EAAC;AATN,SAXkB,EAsBpB;AACEV,cAAI,EAAC,cADP;AACsBC,eAAK,EAAC,uDAD5B;AACoFC,cAAI,EAAC,aADzF;AAEAC,uBAAa,EAAC,cAFd;AAGAC,uBAAa,EAAC,uBAHd;AAIAC,qBAAW,EAAC,aAJZ;AAKAC,iBAAO,EAAC,GALR;AAMAC,cAAI,EAAC,IANL;AAOAC,iBAAO,EAAC,CAPR;AAQAC,eAAK,EAAC,GARN;AASAC,eAAK,EAAC;AATN,SAtBoB,CAAlB;AA9GM;;;;mCAOG;AAAA;;AACP,eAAKlB,WAAL,CAAiBmB,SAAjB,CAA2BC,SAA3B,CAAqC,UAACC,GAAD,EAAa;AAChD,iBAAI,CAACC,eAAL,GAAqBD,GAArB;AACA,iBAAI,CAACE,CAAL,GAAO,EAAP;;AACA,gBAAI,KAAI,CAACD,eAAL,CAAqBE,UAArB,KAAoCC,SAAxC,EAAmD;AAAE,mBAAI,CAACC,YAAL;AAAsB;AAC5E,WAJD;AAKA;;;iCAEQC,K,EAAO;AAAA;;AACfC,oBAAU,CAAC,YAAM;AACfC,mBAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,kBAAI,CAACJ,YAAL;;AACA,kBAAI,CAACpB,YAAL,IAAqB,CAArB;AACAqB,iBAAK,CAACI,MAAN,CAAaC,QAAb;AACD,WALS,EAKP,GALO,CAAV;AAMD;;;uCACc;AAAA;;AACZ,cAAIC,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACID,cAAI,CAACE,MAAL,CAAY,MAAZ,EAAmB,KAAK/B,IAAL,CAAUgC,QAAV,EAAnB;AACAH,cAAI,CAACE,MAAL,CAAY,GAAZ,EAAgB,KAAKZ,CAArB;AACAU,cAAI,CAACE,MAAL,CAAY,YAAZ,EAAyB,KAAKb,eAAL,CAAqBE,UAA9C;AACC,eAAK1B,WAAL,CAAiBuC,SAAjB,CAA2BJ,IAA3B,EAAiCb,SAAjC,CAA2C,UAACkB,MAAD,EAAiB;AACzD,gBAAGA,MAAM,CAACC,IAAP,CAAYC,KAAf,EAAqB;AAAA;;AACnB,oBAAI,CAACpC,IAAL,GAAW,MAAI,CAACA,IAAL,GAAU,CAArB;;AACA,oCAAI,CAACF,KAAL,EAAWuC,IAAX,wCAAmBH,MAAM,CAACC,IAAP,CAAYA,IAA/B;AACD,aAHD,MAGK,CAEJ;AACH,WAPD,EAQC,UAACG,KAAD,EAAc;AACZ,gBAAGA,KAAK,CAACC,MAAN,IAAc,CAAjB,EAAmB;AACjB,oBAAI,CAAC5C,YAAL,CAAkB6C,YAAlB,CAA+B,mBAA/B;AACD;;AACD,gBAAGF,KAAK,CAACC,MAAN,IAAc,GAAjB,EAAqB;AACnB,oBAAI,CAAC5C,YAAL,CAAkB6C,YAAlB,CAA+B,sBAA/B;AACD;AACF,WAfF;AAiBP;;;kCACSC,G,EAAG;AACX,eAAKtB,CAAL,GAAQsB,GAAG,CAACC,UAAJ,CAAeC,KAAvB;AACA,eAAK3C,IAAL,GAAU,CAAV;AACA,eAAKF,KAAL,GAAa,EAAb;AACA,eAAKwB,YAAL;AACD;;;mCACgB;;;;;;;;AACK,2BAAM,KAAK7B,qBAAL,CAA2BmD,MAA3B,CAAkC;AAC3D;AACCC,6BAAO,EAAE,CACR;AACGC,4BAAI,EAAE,QADT;AAEGxC,4BAAI,EAAE,aAFT;AAGGyC,+BAAO,EAAE,mBAAM;AACbtB,iCAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AALJ,uBADQ,EAOJ;AACDoB,4BAAI,EAAE,QADL;AAEDxC,4BAAI,EAAE,QAFL;AAGDyC,+BAAO,EAAE,mBAAM;AACbtB,iCAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AALA,uBAPI;AAFiD,qBAAlC,CAAN;;;AAAdsB,+B;;AAkBN,2BAAMA,WAAW,CAACC,OAAZ,EAAN;;;;;;;;;AACD;;;yCAGsB;;;;;;;;AACD,2BAAM,KAAKxD,qBAAL,CAA2BmD,MAA3B,CAAkC;AAC3D;AACCC,6BAAO,EAAE,CACP;AACEC,4BAAI,EAAE,QADR;AAEGC,+BAAO,EAAE,mBAAM;AACdtB,iCAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AAJH,uBADO,EAOP;AACEoB,4BAAI,EAAE,MADR;AAEGC,+BAAO,EAAE,mBAAM;AACdtB,iCAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AAJH,uBAPO,EAcR;AACGoB,4BAAI,EAAE,QADT;AAEGxC,4BAAI,EAAE,aAFT;AAGGyC,+BAAO,EAAE,mBAAM;AACbtB,iCAAO,CAACC,GAAR,CAAY,qBAAZ;AACD;AALJ,uBAdQ,EAoBJ;AACDoB,4BAAI,EAAE,QADL;AAEDxC,4BAAI,EAAE,QAFL;AAGDyC,+BAAO,EAAE,mBAAM;AACbtB,iCAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AALA,uBApBI;AAFiD,qBAAlC,CAAN;;;AAAdsB,+B;;AA+BN,2BAAMA,WAAW,CAACC,OAAZ,EAAN;;;;;;;;;AACD;;;kCAoCaC,M,EAAQ;;;;;;;;AACR,2BAAM,KAAKrD,eAAL,CAAqB+C,MAArB,CAA4B;AAC9CvD,+BAAS,EAAE,qDADmC;AAE9C8D,oCAAc,EAAE;AAAED,8BAAM,EAAEA;AAAV,uBAF8B;AAG9CE,qCAAe,EAAC;AAH8B,qBAA5B,CAAN;;;AAARC,yB;;AAKC,2BAAMA,KAAK,CAACJ,OAAN,EAAN;;;;;;;;;;;;AACR;;;kCAEeC,M,EAAOI,K,EAAO;;;;;;;;;AAC5B7B,2BAAO,CAACC,GAAR,CAAYwB,MAAZ;AACAzB,2BAAO,CAACC,GAAR,CAAY4B,KAAZ;;AACkB,2BAAM,KAAKzD,eAAL,CAAqB+C,MAArB,CAA4B;AAClDvD,+BAAS,EAAE,wDADuC;AAElD8D,oCAAc,EAAE;AAAED,8BAAM,EAAEA;AAAV,uBAFkC;AAGlDE,qCAAe,EAAC;AAHkC,qBAA5B,CAAN;;;AAAZG,6B;AAKNA,6BAAS,CAACC,YAAV,GAAyBC,IAAzB,CAA8B,UAAAtB,IAAI,EAAE;AAClC,4BAAI,CAAChC,WAAL,CAAiBmD,KAAjB,IAAwBnB,IAAI,CAACA,IAA7B;AACD,qBAFD;;AAGO,2BAAMoB,SAAS,CAACN,OAAV,EAAN;;;;;;;;;;;;AACR;;;mCAEgB;;;;;;;;;AACXC,0B,GAAQ;AACE9C,0BAAI,EAAC,cADP;AACsBC,2BAAK,EAAC,wDAD5B;AACqFC,0BAAI,EAAC,SAD1F;AAEEC,mCAAa,EAAC,EAFhB;AAGEC,mCAAa,EAAC,EAHhB;AAIEC,iCAAW,EAAC,EAJd;AAKEC,6BAAO,EAAC,EALV;AAMEC,0BAAI,EAAC,EANP;AAOEC,6BAAO,EAAC,EAPV;AAQEC,2BAAK,EAAC,EARR;AASEC,2BAAK,EAAC;AATR,qB;;AAWE,2BAAM,KAAKjB,eAAL,CAAqB+C,MAArB,CAA4B;AAC9CvD,+BAAS,EAAE,qDADmC;AAE9C8D,oCAAc,EAAE;AAAED,8BAAM,EAAEA;AAAV,uBAF8B;AAG9CE,qCAAe,EAAC;AAH8B,qBAA5B,CAAN;;;AAARC,yB;AAKNA,yBAAK,CAACG,YAAN,GAAqBC,IAArB,CAA0B,UAAAtB,IAAI,EAAE;AAC9B,4BAAI,CAAChC,WAAL,CAAiBkC,IAAjB,CAAsBF,IAAI,CAACA,IAA3B;AACD,qBAFD;;AAGO,2BAAMkB,KAAK,CAACJ,OAAN,EAAN;;;;;;;;;;;;AACR;;;;;;;;;;;;;;;;;;;;;ACrND;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAM9D,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;QAWaqE,oB;;;;;;;;;;;;;;;;;;;ACIb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,a;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECQH,kJ,IACE,mW,GAAA;AAAA;AAAA,c,GACA,yH,IAAM,6E,IAAwB;AADpB;;AAAV,sBAAU,SAAV;AAA2C,O,EAAA;AACrC;;AAAA;AAAwB,O;AAAA;;;qEAHlC,yH,IACE,yG,GAAA;AAAA;AAAA,c,GAAyI,4E,IAAA;AAAA;;AAA9G,2IAA6G,OAA7G;;AAA3B,sBAA2B,SAA3B;AAAwI,O,EAAA,I;AAAA;;;qEAYxI,kJ,IACE,mW,GAAA;AAAA;AAAA,c,GACA,yH,IAAM,6E,IAAwB;AADpB;;AAAV,sBAAU,SAAV;AAA2C,O,EAAA;AACrC;;AAAA;AAAwB,O;AAAA;;;qEAHlC,yH,IACE,yG,GAAA;AAAA;AAAA,c,GAAsI,4E,IAAA;AAAA;;AAA3G,wIAA0G,OAA1G;;AAA3B,sBAA2B,SAA3B;AAAqI,O,EAAA,I;AAAA;;;qEAarI,kJ,IACE,mW,GAAA;AAAA;AAAA,c,GACA,yH,IAAM,6E,IAAwB;AADpB;;AAAV,sBAAU,SAAV;AAA2C,O,EAAA;AACrC;;AAAA;AAAwB,O;AAAA;;;qEAHlC,yH,IACE,yG,GAAA;AAAA;AAAA,c,GAAyI,4E,IAAA;AAAA;;AAA9G,2IAA6G,OAA7G;;AAA3B,sBAA2B,SAA3B;AAAwI,O,EAAA,I;AAAA;;;qEArDlJ,oU,GAAA,8T,GACE,wV,GAAA;AAAA;AAAA,c,GACE,oV,GAAA,+T,GACE;AAAA;AAAA,oBAAgC,UAAhC;;AAAa;;;;;AAAb;AAAA,wN,GAAA,8T,GACE,iL,IACA,4W,GAAA;AAAA;AAAA,c,GAGJ,8T,GAAA,8T,GAAW,mF,IAKf,wU,GAAA,gU,GAIC,2J,IAGC,+I,IACA;AAAA;AAAA;;AAAA;;;;;;;;;;AAAyB;;;;;AAAzB;AAAA,oB,GAAA,sK,EAAA;AAAA;AAAA;AAAA;AAAA,Q,EAAA,0M,EAAA,+N,GACE,0W,GAAA;AAAA;AAAA,c,GACE,kV,GAAA,6T,GACE;AAAA;;AAAA;;;;;;;;;;;OAAA,E,mGAAA,E,uGAAA,C;;;;;;;;;;iBAEF,kJ,IACE,yG,GAAA;AAAA;AAAA,c,GAQF,kV,GAAA,6T,GACE;AAAA;;AAAA;;;;;;;;;;;OAAA,E,mGAAA,E,uGAAA,C;;;;;;;;;iBAEF,kJ,IACE,yG,GAAA;AAAA;AAAA,c,GASF,kV,GAAA,6T,GACE;AAAA;;AAAA;;;;;;;;;;;OAAA,E,mGAAA,E,uGAAA,C;;;;;;;;;iBAEF,kJ,IACE,yG,GAAA;AAAA;AAAA,c,GAQF,kV,GAAA,6T,GACE;AAAA;;AAAA;;;;;;;;;;;OAAA,E,mGAAA,E,uGAAA,C;;;;;;;;;iBAEF,kV,GAAA,6T,GACE;AAAA;;AAAA;;;;;;;;;;;OAAA,E,mGAAA,E,uGAAA,C;;;;;;;;;iBAGF,kV,GAAA,6T,GACE;AAAA;;AAAA;;;;;;;;;;;OAAA,E,mGAAA,E,uGAAA,C;;;;;;;;;iBAGF,kV,GAAA,6T,GACE;AAAA;;AAAA;;;;;;;;;;;OAAA,E,mGAAA,E,uGAAA,C;;;;;;;;;iBAGF,kV,GAAA,6T,GACE;AAAA;;AAAA;;;;;;;;;;;OAAA,E,sGAAA,E,0GAAA,C;;;;;;;iBAMJ,oY,GAAA;AAAA;AAAA;AAAA,c,GAA4D,8E,IAAO;AAAA;AAjFxD;;AAAb,sBAAa,SAAb;;AAIgB;;AAAV,uBAAU,SAAV;;AAgBA,2BAAkB,KAAlB;;AAAN,uBAAM,SAAN;;AACgC;;AAA9B,uBAA8B,UAA9B;;AAEgD;;AAA5C,uBAA4C,UAA5C;;AAA+E;AAAX;AAAgC;AAA5E;AAAb;;AAAX,uBAA+E,UAA/E,EAAoE,UAApE,EAAoG,UAApG,EAAwB,UAAxB,EAAW,UAAX;;AAGc,4BAAoD,oBAApD,CAAoD,KAApD;;AAAd,uBAAc,UAAd;;AAS0C;;AAA1C,uBAA0C,UAA1C;;AAA4E;AAAX;AAA1C;AAAZ;;AAAX,uBAA4E,UAA5E,EAAiE,UAAjE,EAAuB,UAAvB,EAAW,UAAX;;AAGc,4BAAmD,oBAAnD,CAAmD,IAAnD;;AAAd,uBAAc,UAAd;;AAU4C;;AAA5C,uBAA4C,UAA5C;;AAA+E;AAAX;AAA5C;AAAb;;AAAX,uBAA+E,UAA/E,EAAoE,UAApE,EAAwB,UAAxB,EAAW,UAAX;;AAGc,4BAAoD,oBAApD,CAAoD,KAApD;;AAAd,uBAAc,UAAd;;AASoD;;AAApD,uBAAoD,UAApD;;AAAyF;AAAX;AAAvD;AAAZ;;AAAX,uBAAyF,UAAzF,EAA8E,UAA9E,EAAuB,UAAvB,EAAW,UAAX;;AAG0C;;AAA1C,uBAA0C,UAA1C;;AAA4E;AAAX;AAA1C;AAAZ;;AAAX,uBAA4E,UAA5E,EAAiE,UAAjE,EAAuB,UAAvB,EAAW,UAAX;;AAI2C;;AAA3C,uBAA2C,UAA3C;;AAA8E;AAAX;AAA5C;AAAZ;;AAAX,uBAA8E,UAA9E,EAAmE,UAAnE,EAAuB,UAAvB,EAAW,UAAX;;AAI8C;;AAA9C,uBAA8C,UAA9C;;AAAoF;AAAX;AAAlD;AAAZ;;AAAX,uBAAoF,UAApF,EAAyE,UAAzE,EAAuB,UAAvB,EAAW,UAAX;;AAIuD;;AAAvD,wBAAuD,WAAvD;;AAAmG;AAAzE;;AAA1B,wBAAmG,WAAnG,EAA0B,WAA1B;;AAMwC;AAAd;;AAA9B,wBAA4C,WAA5C,EAA8B,WAA9B;AAA2C,O,EAAA;AA7D7C;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAGM;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAYA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAaA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAYA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAGA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAIA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAIA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAIA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAyH,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EjI;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgBaC,O;AAoBX,uBACSC,MADT,EAESC,IAFT,EAGUlE,WAHV,EAIUmE,cAJV,EAKUpE,YALV,EAMEqE,SANF,EAOSC,QAPT,EAOkC;AAAA;;AANzB,aAAAJ,MAAA,GAAAA,MAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACC,aAAAlE,WAAA,GAAAA,WAAA;AACA,aAAAmE,cAAA,GAAAA,cAAA;AACA,aAAApE,YAAA,GAAAA,YAAA;AAED,aAAAsE,QAAA,GAAAA,QAAA;AAvBT,aAAAC,mBAAA,GAAsB;AACpB,mBAAS,CACP;AAAEC,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADO,EAEP;AAAED,gBAAI,EAAE,SAAR;AAAmBC,mBAAO,EAAE;AAA5B,WAFO,CADW;AAKpB,kBAAQ,CACN;AAAED,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADM,EAEN;AAAED,gBAAI,EAAE,WAAR;AAAqBC,mBAAO,EAAE;AAA9B,WAFM,CALY;AASpB,mBAAS,CACP;AAAED,gBAAI,EAAE,UAAR;AAAoBC,mBAAO,EAAE;AAA7B,WADO;AATW,SAAtB;AAyBE,aAAKlB,MAAL,GAAYc,SAAS,CAACK,GAAV,CAAc,QAAd,CAAZ;AACA,aAAKxC,IAAL,GAAY,IAAI,wDAAJ,CAAc;AACxB,mBAAS,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWyC,OAAX,CAAmB,CAC9C,0DAAWC,QADmC,EAE9C,0DAAWC,OAAX,CAAmB,iDAAnB,CAF8C,CAAnB,CAApB,CADe;AAKxB,kBAAQ,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWF,OAAX,CAAmB,CAC5C,0DAAWC,QADiC,CAAnB,CAApB,CALgB;AAQxB,mBAAS,IAAI,0DAAJ,CAAgB,EAAhB,EAAoB,0DAAWD,OAAX,CAAmB,CAC9C,0DAAWC,QADmC,CAAnB,CAApB,CARe;AAWzB,4BAAkB,IAAI,0DAAJ,CAAgB,EAAhB,CAXO;AAYzB,kBAAQ,IAAI,0DAAJ,CAAgB,EAAhB,CAZiB;AAazB,mBAAS,IAAI,0DAAJ,CAAgB,EAAhB,CAbgB;AAczB,sBAAY,IAAI,0DAAJ,CAAgB,EAAhB,CAda;AAezB,4BAAkB,IAAI,0DAAJ,CAAgB,EAAhB;AAfO,SAAd,CAAZ;AAiBD;;;;kCAKM;AAAA;;AACL9C,iBAAO,CAACC,GAAR,CAAY,WAAZ;AACC,cAAIG,IAAI,GAAG,IAAIC,QAAJ,EAAX;AACAD,cAAI,CAACE,MAAL,CAAY,OAAZ,EAAqB,KAAKF,IAAL,CAAUc,KAAV,CAAgB8B,KAArC;AACA5C,cAAI,CAACE,MAAL,CAAY,UAAZ,EAAwB,KAAKF,IAAL,CAAUc,KAAV,CAAgB+B,QAAxC;AACD,eAAK9E,WAAL,CAAiB+E,KAAjB,CAAuB9C,IAAvB,EAA6Bb,SAA7B,CAAuC,UAACkB,MAAD,EAAiB;AAC9C,kBAAI,CAAC6B,cAAL,CAAoBa,KAApB,CAA0B,UAA1B,EAAqC1C,MAAM,CAACC,IAA5C;;AACA,kBAAI,CAACxC,YAAL,CAAkB6C,YAAlB,CAA+B,4BAA/B;;AACA,kBAAI,CAACqB,MAAL,CAAYgB,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD,WAJT,EAKQ,UAACvC,KAAD,EAAc;AACZ,gBAAGA,KAAK,CAACC,MAAN,IAAc,CAAjB,EAAmB;AACjB,oBAAI,CAAC5C,YAAL,CAAkB6C,YAAlB,CAA+B,mBAA/B;AACD;;AACD,gBAAGF,KAAK,CAACC,MAAN,IAAc,GAAjB,EAAqB;AACnB,oBAAI,CAAC5C,YAAL,CAAkB6C,YAAlB,CAA+B,sBAA/B;AACD;AACF,WAZT;AAcA;;;iCAEI;AAEJ,eAAKyB,QAAL,CAAca,OAAd,CAAsB,KAAK5B,MAA3B;AAED;;;;;;;;;;;;;;;;;;;;;AC7FH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa6B,W;AAEX,2BACUC,WADV,EAEUjB,cAFV,EAGUF,MAHV,EAGwB;AAAA;;AAFd,aAAAmB,WAAA,GAAAA,WAAA;AACA,aAAAjB,cAAA,GAAAA,cAAA;AACA,aAAAF,MAAA,GAAAA,MAAA;AACL;;;;uCAGUoB,Q,EAAa;AAC1B,iBAAO,KAAKD,WAAL,CAAiBE,IAAjB,CAAsB,iBAAtB,EAAwCD,QAAxC,CAAP;AACD,S,CAGF;;;;kCACSA,Q,EAAa;AACrB,iBAAO,KAAKD,WAAL,CAAiBE,IAAjB,CAAsB,eAAtB,EAAsCD,QAAtC,CAAP;AACD;;;iCAEQA,Q,EAAa;AACpB,iBAAO,KAAKD,WAAL,CAAiBE,IAAjB,CAAsB,cAAtB,EAAqCD,QAArC,CAAP;AACD;;;8BAEKA,Q,EAAa;AACjB,iBAAO,KAAKD,WAAL,CAAiBE,IAAjB,CAAsB,WAAtB,EAAkCD,QAAlC,CAAP;AACD;;;iCAEQA,Q,EAAa;AACpB,iBAAO,KAAKD,WAAL,CAAiBE,IAAjB,CAAsB,cAAtB,EAAqCD,QAArC,CAAP;AACD;;;iCAEQA,Q,EAAa;AACpB,iBAAO,KAAKD,WAAL,CAAiBE,IAAjB,CAAsB,cAAtB,EAAqCD,QAArC,CAAP;AACD,S,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;;;mCACYA,Q,EAAa;AACtB,iBAAO,KAAKD,WAAL,CAAiBE,IAAjB,CAAsB,YAAtB,EAAmCD,QAAnC,CAAP;AACD,S,CACD;;;;kCACUA,Q,EAAa;AACrB,iBAAO,KAAKD,WAAL,CAAiBE,IAAjB,CAAsB,eAAtB,EAAsCD,QAAtC,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QC5DUE,Y;AAEX,4BAAmBC,eAAnB,EAAqD;AAAA;;AAAlC,aAAAA,eAAA,GAAAA,eAAA;AAAqC;;;;qCAErCC,W,EAAqB;;;;;;;;AACvB,2BAAM,KAAKD,eAAL,CAAqBxC,MAArB,CAA4B;AAC9CwB,6BAAO,EAACiB,WADsC;AAE9CC,8BAAQ,EAAC;AAFqC,qBAA5B,CAAN;;;AAARC,yB;AAINA,yBAAK,CAACtC,OAAN;;;;;;;;;AAEF","file":"customers-list-list-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListPage } from './list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { ListPageRoutingModule } from './list-routing.module';\n\nimport { ListPage } from './list.page';\nimport { NewPageModule } from '../new/new.module'\nimport { EditPageModule } from '../edit/edit.module'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListPageRoutingModule,\n    ComponentsModule,\n    NewPageModule,\n    EditPageModule\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n  ","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      Customers\n    </ion-title>\n    <ion-buttons slot=\"end\" class=\"button button-clear button-positive\" (click)=\"newModal()\" >  \n         <ion-icon name=\"add\" class=\"add-new\"></ion-icon>\n    </ion-buttons>\n\n  </ion-toolbar>\n</ion-header>\n\n<ion-header>\n  <ion-toolbar style=\"    padding-top: 15px; padding-bottom: 10px;\">\n    <ion-buttons slot=\"start\" style=\"padding-left: 15px;\">\n      <ion-checkbox color=\"secondary\" (click)=\"openMenu()\" ></ion-checkbox>\n    </ion-buttons>\n    <ion-searchbar value={{q}} (ionInput)=\"searchBox($event)\"    style=\"    min-width: 200px !important;\"></ion-searchbar>\n    <ion-buttons slot=\"end\" class=\"button button-clear button-positive\" style=\"padding-right: 15px;\">  \n      <ion-select placeholder=\"\" value=\"f\">\n        <ion-select-option value=\"f\">All</ion-select-option>\n        <ion-select-option value=\"m\">Draft</ion-select-option>\n        <ion-select-option value=\"e\">Sent</ion-select-option>\n        <ion-select-option value=\"es\">Accepted</ion-select-option>\n        <ion-select-option value=\"as\">Decliened</ion-select-option>\n      </ion-select>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n\n\n\n\n<ion-list>\n  <ion-list-header color=\"tertiary\">\n    <ion-label>CSK SQUAD</ion-label>\n  </ion-list-header>\n    <ion-item *ngFor=\"let x of playersList;let i=index\" >\n        <ion-avatar (click)=\"openModal(x)\">\n          <img [src]=\"x.image\">\n        </ion-avatar>\n        <ion-label (click)=\"openModal(x)\">\n          <h3>{{x.name}}</h3>\n          <p>{{x.role}}</p>\n        </ion-label>\n        <ion-icon name=\"eye\" color=\"success\" (click)=\"openModal(x,i)\" slot=\"end\"></ion-icon>\n        <ion-icon name=\"create\" color=\"danger\" slot=\"end\" (click)=\"editModal(x,i)\"></ion-icon>\n      </ion-item>\n  </ion-list>\n\n\n\n\n  <ion-content color=\"light \" class=\"action-sheets-home-page\">  \n\n    <ion-list style=\"background: #f4f5f8;\">  \n      <ion-item  lines=\"none\" *ngFor=\"let item of items\"   class=\"list-item\">\n         \n            <div class=\"list-item-checkbox\">\n              <ion-buttons><ion-checkbox  (click)=\"openMenu()\" ></ion-checkbox></ion-buttons>\n            </div>\n            <div class=\"flex padding-5px\">\n              <p class=\"custom-list-p\" color=\"primary\" >{{item.name}}</p>\n             </div>\n            <div class=\"flex padding-5px\">\n              <p class=\"custom-list-p\" color=\"primary\" style=\"color:#ff0062\" >{{item.email}}</p>\n             </div>\n            \n            <div class=\"flex padding-5px\">\n              <ion-icon name=\"options\" class=\"list-item-option\" (click)=\"openOptionMenu()\"></ion-icon>\n            </div>\n\n        \n       </ion-item>  \n    </ion-list>  \n    <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\" [disabled]=\"numTimesLeft <= 0\">  \n      <ion-infinite-scroll-content  \n        loadingSpinner=\"bubbles\"  \n        loadingText=\"Loading more data...\">  \n      </ion-infinite-scroll-content>  \n    </ion-infinite-scroll>  \n  </ion-content>  ","import { Component, OnInit } from '@angular/core';\nimport { ActionSheetController,ModalController } from '@ionic/angular';\nimport { ApisService } from '../../services/apis.service';\nimport { ToastService } from '../../services/toast.service';\nimport { AuthService } from '../../services/auth.service';\nimport { NewPage } from '../new/new.page'\nimport { EditPage } from '../edit/edit.page'\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.page.html',\n  styleUrls: ['./list.page.scss'],\n})\nexport class ListPage implements OnInit {\n\n  displayUserData: any;\n  q:any;\n\n  constructor(\n       public actionSheetController: ActionSheetController, \n       private apisService: ApisService,\n       private toastService:ToastService,\n       private authService: AuthService,\n       private modalController: ModalController\n       ) {\n              \n       }\n   items = [];  \n   x= 0;\n   page=1;\n   last_page=0;\n   numTimesLeft = 5;  \n    \n   ngOnInit(){\n    this.authService.userData$.subscribe((res:any) => {\n      this.displayUserData=res\n      this.q='';\n      if (this.displayUserData.auth_token !== undefined) { this.addMoreItems(); }\n    })\n   }\n\n   loadData(event) {  \n    setTimeout(() => {  \n      console.log('Done');  \n      this.addMoreItems();  \n      this.numTimesLeft -= 1;  \n      event.target.complete();  \n    }, 500);  \n  }  \n  addMoreItems() {  \n     let form = new FormData();\n         form.append('page',this.page.toString() );\n         form.append('q',this.q );\n         form.append('auth_token',this.displayUserData.auth_token);\n          this.apisService.customers(form).subscribe((result: any) => {\n             if(result.data.total){\n               this.page= this.page+1;\n               this.items.push(...result.data.data)\n             }else{\n\n             }\n          },\n           (error: any)=>{\n             if(error.status==0){\n               this.toastService.presentToast('Connection failed');\n             }\n             if(error.status==401){\n               this.toastService.presentToast('Authentcation failed');\n             }\n           }  \n    ) \n  } \n  searchBox(evt){\n    this.q= evt.srcElement.value;\n    this.page=1;\n    this.items = [];\n    this.addMoreItems()\n  }\n  async openMenu() {  \n    const actionSheet = await this.actionSheetController.create({  \n     // header: 'Action',  \n      buttons: [  \n       {  \n          text: 'Delete',  \n          role: 'destructive',  \n          handler: () => {  \n            console.log('Destructive clicked');  \n          }  \n        }, {  \n          text: 'Cancel',  \n          role: 'cancel',  \n          handler: () => {  \n            console.log('Cancel clicked');  \n          }  \n        }  \n      ]  \n    });  \n    await actionSheet.present();  \n  }  \n\n\n  async openOptionMenu() {  \n    const actionSheet = await this.actionSheetController.create({  \n     // header: 'Action',  \n      buttons: [ \n        {  \n          text: 'Update',  \n           handler: () => {  \n            console.log('Destructive clicked');  \n          }  \n        }, \n        {  \n          text: 'View',  \n           handler: () => {  \n            console.log('Destructive clicked');  \n          }  \n        }, \n         \n       {  \n          text: 'Delete',  \n          role: 'destructive',  \n          handler: () => {  \n            console.log('Destructive clicked');  \n          }  \n        }, {  \n          text: 'Cancel',  \n          role: 'cancel',  \n          handler: () => {  \n            console.log('Cancel clicked');  \n          }  \n        }  \n      ]  \n    });  \n    await actionSheet.present();  \n  } \n\n  playersList:any[]=[{\n    name:'MS Dhoni',image:'https://iplstatic.s3.amazonaws.com/players/284/1.png',role:\"Wicketkeeper batsman\",\n    batting_style:\"Right-handed\",\n    bowling_style:\"Right-arm medium\",\n    nationality:\"Indian\",\n    matches:183,\n    runs:4246,\n    fifties:22,\n    fours:287,\n    sixes:196\n  },\n  {\n    name:'Kedar Jadhav',image:'https://iplstatic.s3.amazonaws.com/players/284/297.png',role:\"Batsman\",\n  batting_style:\"Right-handed\",\n  bowling_style:\"Right-arm off-spin\",\n  nationality:\"Indian\",\n  matches:73,\n  runs:1052,\n  fifties:4,\n  fours:90,\n  sixes:37\n},\n{\n  name:'Dwayne Bravo',image:'https://iplstatic.s3.amazonaws.com/players/284/25.png',role:\"All-rounder\",\nbatting_style:\"Right-handed\",\nbowling_style:\"Right-arm medium fast\",\nnationality:\"West Indian\",\nmatches:126,\nruns:1442,\nfifties:5,\nfours:114,\nsixes:60\n}]\n\nasync openModal(player) {\n  const modal = await this.modalController.create({\n    component: NewPage,\n    componentProps: { player: player },\n    backdropDismiss:false\n  });\n  return await modal.present();\n}\n\nasync editModal(player,index) {\n  console.log(player);\n  console.log(index);\n  const editmodal = await this.modalController.create({\n    component: EditPage,\n    componentProps: { player: player },\n    backdropDismiss:false\n  });\n  editmodal.onDidDismiss().then(data=>{\n    this.playersList[index]=data.data\n  })\n  return await editmodal.present();\n}\n\nasync newModal() {\n  let player= {\n                name:'Kedar Jadhav',image:'https://iplstatic.s3.amazonaws.com/players/284/297.png',role:\"Batsman\",\n                batting_style:\"\",\n                bowling_style:\"\",\n                nationality:\"\",\n                matches:'',\n                runs:'',\n                fifties:'',\n                fours:'',\n                sixes:''\n                }\n  const modal = await this.modalController.create({\n    component: NewPage,\n    componentProps: { player: player },\n    backdropDismiss:false\n  });\n  modal.onDidDismiss().then(data=>{\n    this.playersList.push(data.data)\n  })\n  return await modal.present();\n}\n\n\n\n\n\n\n\n}\n ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { NewPage } from './new.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NewPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NewPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NewPageRoutingModule } from './new-routing.module';\n\nimport { NewPage } from './new.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    NewPageRoutingModule\n  ],\n  declarations: [NewPage]\n})\nexport class NewPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button  (click)=\"update()\">\n        <span ion-text color=\"primary\" showWhen=\"ios\"></span>\n        <ion-icon name=\"close\" showWhen=\"android,windows\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>New Customer</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content>\n     \n\n\n <div  class=\"dispplay-content-center\">\n      \n  \n  <div class=\"padding20\"></div>\n  <form [formGroup]=\"form\" (ngSubmit)=\"doLogin()\" class=\"auth-form\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n      <ion-item class=\"input-item\">\n        <ion-input type=\"email\" placeholder=\"Email\" formControlName=\"email\" clearInput autocapitalize=\"off\" inputmode=\"email\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.email\">\n          <div class=\"error-message\" *ngIf=\"form.get('email').hasError(validation.type) && (form.get('email').dirty || form.get('email').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"Name\" formControlName=\"name\" clearInput autocapitalize=\"off\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.name\">\n          <div class=\"error-message\" *ngIf=\"form.get('name').hasError(validation.type) && (form.get('name').dirty || form.get('name').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n\n      <ion-item class=\"input-item\">\n        <ion-input type=\"phone\" placeholder=\"Phone\" formControlName=\"phone\" clearInput autocapitalize=\"off\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.phone\">\n          <div class=\"error-message\" *ngIf=\"form.get('phone').hasError(validation.type) && (form.get('phone').dirty || form.get('phone').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"Street Address\" formControlName=\"Address\" clearInput autocapitalize=\"off\" ></ion-input>\n      </ion-item>\n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"City\" formControlName=\"city\" clearInput autocapitalize=\"off\" ></ion-input>\n      </ion-item>\n      \n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"State\" formControlName=\"state\" clearInput autocapitalize=\"off\" ></ion-input>\n      </ion-item>\n\n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"Zip Code\" formControlName=\"zip_code\" clearInput autocapitalize=\"off\" ></ion-input>\n      </ion-item>\n\n      <ion-item class=\"input-item\">\n        <ion-textarea type=\"text\" placeholder=\"Customer Notes\" formControlName=\"customer_notes\" clearInput autocapitalize=\"off\" ></ion-textarea>\n\n      </ion-item>\n    </ion-list>\n\n\n    <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\" >Add Now</ion-button>\n\n  </form>\n</div> \n</ion-content> ","import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service'\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\n\n\n\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.page.html',\n  styleUrls: ['./new.page.scss'],\n})\nexport class NewPage  {\n\n  player:any\n  form: FormGroup;\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.' },\n      { type: 'pattern', message: 'Enter a valid email.' }\n    ],\n    'name': [\n      { type: 'required', message: 'Name is required.' },\n      { type: 'minlength', message: 'Password must be at least 2 characters long.' }\n    ],\n    'phone': [\n      { type: 'required', message: 'Phone is required.' },\n     ]\n  };\n\n \n\n  constructor(\n    public router: Router,\n    public menu: MenuController,\n    private authService: AuthService,\n    private storageService: StorageService,\n    private toastService: ToastService,\n    navParams: NavParams,\n    public viewCtrl: ModalController\n  ) {\n    this.player=navParams.get('player');\n    this.form = new FormGroup({\n      'email': new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      'name': new FormControl('', Validators.compose([\n         Validators.required\n      ])),\n      'phone': new FormControl('', Validators.compose([\n        Validators.required\n     ])),\n     'street_address': new FormControl(''),\n     'city': new FormControl(''),\n     'state': new FormControl(''),\n     'zip_code': new FormControl(''),\n     'customer_notes': new FormControl(''),\n    });\n  }\n \n \n\n\n  doLogin(): void {\n    console.log('do Log In');\n     let form = new FormData();\n     form.append('email', this.form.value.email);\n     form.append('password', this.form.value.password);\n    this.authService.login(form).subscribe((result: any) => {\n              this.storageService.store('userData',result.data);\n              this.toastService.presentToast('Successfully authenticated');\n              this.router.navigate(['app/dashboard']);\n            },\n            (error: any)=>{\n              if(error.status==0){\n                this.toastService.presentToast('Connection failed');\n              }\n              if(error.status==401){\n                this.toastService.presentToast('Authentcation failed');\n              }\n            }  \n     )\n   }\n\n  update()\n  {\n    this.viewCtrl.dismiss(this.player);\n\n  }\n} \n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpService } from './http.service';\nimport { StorageService } from './storage.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApisService {\n\n  constructor(\n    private httpService: HttpService,\n    private storageService: StorageService,\n    private router: Router\n  ) { }\n\n\n  signupComplete(postData: any): Observable<any> {\n    return this.httpService.post('signup-complete',postData);\n  }\n\n\n //Customers\ncustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/all',postData);\n}\n\ninvoices(postData: any): Observable<any> {\n  return this.httpService.post('invoices/all',postData);\n}\n\nitems(postData: any): Observable<any> {\n  return this.httpService.post('items/all',postData);\n}\n\npayments(postData: any): Observable<any> {\n  return this.httpService.post('payments/all',postData);\n}\n\nexpenses(postData: any): Observable<any> {\n  return this.httpService.post('expenses/all',postData);\n}\n\n\n //Invoices\n //Items\n //Payments\n //Expenses\n //Items Categories\n //Expenses Categories\n //Taxes\n //Payment Merhods\n\n\n\n\n // get Industries industries\n  industries(postData: any): Observable<any> {\n    return this.httpService.post('industries',postData);\n  }\n  // get All Estimates\n  estimates(postData: any): Observable<any> {\n    return this.httpService.post('estimates/all',postData);\n  }\n\n  \n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(public toastController: ToastController) { }\n  \n  async presentToast(infoMessage: string) {\n     const toast = await this.toastController.create({\n       message:infoMessage,\n       duration:3000\n     });\n     toast.present();\n\n  }\n}\n"]}