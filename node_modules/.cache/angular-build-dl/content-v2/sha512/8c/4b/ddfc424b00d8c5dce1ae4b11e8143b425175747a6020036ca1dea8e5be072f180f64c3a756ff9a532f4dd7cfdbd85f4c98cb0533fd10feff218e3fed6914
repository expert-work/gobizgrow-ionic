{"version":3,"sources":["webpack:///src/app/shell/aspect-ratio/aspect-ratio.component.html","webpack:///src/app/shell/aspect-ratio/aspect-ratio.component.ts","webpack:///src/app/shell/image-shell/image-shell.component.html","webpack:///src/app/shell/image-shell/image-shell.component.ts"],"names":["AspectRatioComponent","ratioPadding","ratio","undefined","w","h","heightRatio","ImageShellComponent","platformId","debugDisplay","settings","debug","_src","_alt","_display","imageLoaded","backgroundImage","val"],"mappings":"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","file":"default~getting-started-getting-started-module-ngfactory~invoices-new-new-module-ngfactory-es5.js","sourcesContent":["<div class=\"content-wrapper\">\n  <ng-content></ng-content>\n</div>\n","import { Component, Input, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'app-aspect-ratio',\n  templateUrl: './aspect-ratio.component.html',\n  styleUrls: ['./aspect-ratio.component.scss']\n})\nexport class AspectRatioComponent {\n\n  @HostBinding('style.padding') ratioPadding = '0px';\n\n  @Input()\n  set ratio(ratio: { w: number, h: number }) {\n    ratio = (ratio !== undefined && ratio !== null) ? ratio : {w: 1, h: 1};\n\n    const heightRatio = (ratio.h / ratio.w * 100) + '%';\n\n    // Conserve aspect ratio (see: http://stackoverflow.com/a/10441480/1116959)\n    this.ratioPadding = '0px 0px ' + heightRatio + ' 0px';\n  }\n\n  constructor() { }\n}\n","<ion-spinner class=\"spinner\"></ion-spinner>\n<img class=\"inner-img\" [src]=\"_src\" [alt]=\"_alt\" (load)=\"_imageLoaded()\"/>\n<ng-content *ngIf=\"_display === 'cover'\"></ng-content>\n","import { Component, Input, HostBinding, PLATFORM_ID, Inject } from '@angular/core';\nimport { isPlatformServer } from '@angular/common';\n\nimport { AppShellConfig } from '../config/app-shell.config';\n\n@Component({\n  selector: 'app-image-shell',\n  templateUrl: './image-shell.component.html',\n  styleUrls: ['./image-shell.component.scss']\n})\nexport class ImageShellComponent {\n  // To debug shell styles, change configuration in the assets/app-shell.config.json file\n  private debugDisplay = (AppShellConfig.settings && AppShellConfig.settings.debug) ? AppShellConfig.settings.debug : false;\n\n  // tslint:disable-next-line:variable-name\n  _src = '';\n  // tslint:disable-next-line:variable-name\n  _alt = '';\n  // tslint:disable-next-line:variable-name\n  _display = '';\n\n  @HostBinding('class.img-loaded') imageLoaded = false;\n\n  @HostBinding('style.backgroundImage') backgroundImage: string;\n\n  @HostBinding('attr.display')\n  @Input()\n  set display(val: string) {\n    this._display = (val !== undefined && val !== null) ? val : '';\n  }\n  get display(): string {\n    return this._display;\n  }\n\n  @Input()\n  set src(val: string) {\n    if (!this.debugDisplay) {\n      this._src = (val !== undefined && val !== null) ? val : '';\n    }\n\n    if (this._display === 'cover') {\n      // Unset the background-image\n      this.backgroundImage = 'unset';\n    }\n\n    // Show loading indicator\n    // When using SSR (Server Side Rendering), avoid the loading animation while the image resource is being loaded\n    if (isPlatformServer(this.platformId)) {\n      this.imageLoaded = true;\n    } else {\n      this.imageLoaded = false;\n    }\n  }\n\n  @Input()\n  set alt(val: string) {\n    this._alt = (val !== undefined && val !== null) ? val : '';\n  }\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: string\n  ) {}\n\n  _imageLoaded() {\n    this.imageLoaded = true;\n\n    // If it's a cover image then set the background-image property accordingly\n    if (this._display === 'cover') {\n      this.backgroundImage = 'url(' + this._src + ')';\n    }\n  }\n}\n"]}