{"version":3,"sources":["webpack:///src/app/real-estate/listing/real-estate-listing.module.ts","webpack:///src/app/real-estate/listing/real-estate-listing.page.html","webpack:///src/app/real-estate/listing/real-estate-listing.page.ts","webpack:///src/app/real-estate/listing/real-estate-listing.resolver.ts","webpack:///src/app/shell/data-store.ts"],"names":["routes","path","component","resolve","data","RealEstateListingPageModule","RealEstateListingPage","route","subscribe","resolvedRouteData","listingDataStore","state","listing","error","isShell","RealEstateListingResolver","realEstateService","dataSource","getListingDataSource","dataStore","getListingStore","ShellModel","DataStore","shellModel","networkDelay","settings","timeline","dataSourceObservable","dataSourceWithShellObservable","AppendShell","dataValue","next","asObservable","dataObservable","delayObservable","pipe","delayValue","Object","assign"],"mappings":"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","file":"real-estate-listing-real-estate-listing-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { RealEstateService } from '../real-estate.service';\nimport { RealEstateListingPage } from './real-estate-listing.page';\nimport { RealEstateListingResolver } from './real-estate-listing.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RealEstateListingPage,\n    resolve: {\n      data: RealEstateListingResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n    HttpClientModule\n  ],\n  declarations: [\n    RealEstateListingPage\n  ],\n  providers: [\n    RealEstateListingResolver,\n    RealEstateService\n  ]\n})\nexport class RealEstateListingPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"app/categories\"></ion-back-button>\n    </ion-buttons>\n    <ion-title>Real Estate Listing</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"real-estate-listing-content\">\n  <div class=\"listing-item\" *ngFor=\"let item of listing.items\">\n    <ion-row class=\"image-row\">\n      <ion-col size=\"12\">\n        <a class=\"image-anchor\" [routerLink]=\"['/app/categories/real-estate/', item.slug]\">\n          <app-image-shell [display]=\"'cover'\" animation=\"spinner\" class=\"item-picture\" [src]=\"item.picture\">\n            <app-aspect-ratio [ratio]=\"{w:365, h:125}\">\n            </app-aspect-ratio>\n          </app-image-shell>\n        </a>\n      </ion-col>\n    </ion-row>\n    <ion-row class=\"description-row\">\n      <ion-col size=\"12\" class=\"details-col\">\n        <ion-row class=\"details-wrapper\">\n          <ion-col>\n            <h4 class=\"item-price\">\n              <span class=\"price-icon\">$</span>\n              <app-text-shell [data]=\"item.price\"></app-text-shell>\n            </h4>\n            <p class=\"item-address\">\n              <app-text-shell [data]=\"item.address\"></app-text-shell>\n            </p>\n          </ion-col>\n          <ion-col class=\"bookmark-col\" size=\"2\">\n            <ion-icon *ngIf=\"item.liked\" class=\"like-icon\" name=\"heart\"></ion-icon>\n            <ion-icon *ngIf=\"!item.liked\" class=\"like-icon\" name=\"heart-outline\"></ion-icon>\n          </ion-col>\n        </ion-row>\n      </ion-col>\n\n      <ion-col class=\"accommodations-col\" size=\"12\">\n        <ion-row class=\"accommodations-wrapper\">\n          <ion-col class=\"item-accommodation\">\n            <ion-icon class=\"accommodation-icon\" src=\"./assets/custom-icons/real-estate/guests.svg\"></ion-icon>\n            <span class=\"accommodation-property\">Guests</span>\n            <span class=\"accommodation-value\">\n              <app-text-shell [data]=\"item.accommodations?.guests\"></app-text-shell>\n            </span>\n          </ion-col>\n          <ion-col class=\"item-accommodation\">\n            <ion-icon class=\"accommodation-icon\" src=\"./assets/custom-icons/real-estate/bedrooms.svg\"></ion-icon>\n            <span class=\"accommodation-property\">Bedrooms</span>\n            <span class=\"accommodation-value\">\n              <app-text-shell [data]=\"item.accommodations?.bedrooms\"></app-text-shell>\n            </span>\n          </ion-col>\n          <ion-col class=\"item-accommodation\">\n            <ion-icon class=\"accommodation-icon\" src=\"./assets/custom-icons/real-estate/bathroom.svg\"></ion-icon>\n            <span class=\"accommodation-property\">Bathrooms</span>\n            <span class=\"accommodation-value\">\n              <app-text-shell [data]=\"item.accommodations?.bathrooms\"></app-text-shell>\n            </span>\n          </ion-col>\n          <ion-col class=\"item-accommodation\">\n            <ion-icon class=\"accommodation-icon\" src=\"./assets/custom-icons/real-estate/patio.svg\"></ion-icon>\n            <span class=\"accommodation-property\">Patios</span>\n            <span class=\"accommodation-value\">\n              <app-text-shell [data]=\"item.accommodations?.patios\"></app-text-shell>\n            </span>\n          </ion-col>\n        </ion-row>\n      </ion-col>\n\n      <ion-col size=\"12\" class=\"amenities-col\" *ngIf=\"item.amenities\">\n        <h5 class=\"amenities-title\">Amenities</h5>\n        <ion-row class=\"amenities-wrapper\">\n          <ng-container>\n            <ion-col class=\"item-amenity\" size=\"4\" *ngFor=\"let amenity of item.amenities.slice(0, 4); let i = index\">\n              <ion-icon *ngIf=\"amenity.icon\" class=\"amenity-icon\" [src]=\"amenity.icon\"></ion-icon>\n              <span class=\"amenity-value\">\n                <app-text-shell [data]=\"amenity.name\"></app-text-shell>\n              </span>\n            </ion-col>\n            <ion-col class=\"has-more-amenities\" *ngIf=\"i == 3 && item.amenities.length > 4\">\n              <span class=\"amenities-count\">+{{ item.amenities.length - 4 }}</span>\n            </ion-col>\n          </ng-container>\n        </ion-row>\n      </ion-col>\n    </ion-row>\n  </div>\n</ion-content>\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { RealEstateListingModel } from './real-estate-listing.model';\n\n@Component({\n  selector: 'app-real-estate-listing',\n  templateUrl: './real-estate-listing.page.html',\n  styleUrls: [\n    './styles/real-estate-listing.page.scss',\n    './styles/real-estate-listing.shell.scss'\n  ]\n})\nexport class RealEstateListingPage implements OnInit {\n  listing: RealEstateListingModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.listing && this.listing.isShell) ? true : false;\n  }\n\n  constructor(private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.route.data.subscribe((resolvedRouteData) => {\n      const listingDataStore = resolvedRouteData['data'];\n\n      listingDataStore.state.subscribe(\n        (state) => {\n          this.listing = state;\n        },\n        (error) => {}\n      );\n    },\n    (error) => {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { Observable } from 'rxjs';\n\nimport { DataStore } from '../../shell/data-store';\nimport { RealEstateService } from '../real-estate.service';\nimport { RealEstateListingModel } from './real-estate-listing.model';\n\n@Injectable()\nexport class RealEstateListingResolver implements Resolve<DataStore<RealEstateListingModel>> {\n\n  constructor(private realEstateService: RealEstateService) {}\n\n  resolve(): DataStore<RealEstateListingModel> {\n    const dataSource: Observable<RealEstateListingModel> = this.realEstateService.getListingDataSource();\n    const dataStore: DataStore<RealEstateListingModel> = this.realEstateService.getListingStore(dataSource);\n\n    return dataStore;\n  }\n}\n","import { Observable, of, combineLatest, ReplaySubject } from 'rxjs';\nimport { delay, map, startWith } from 'rxjs/operators';\n\nimport { AppShellConfig } from './config/app-shell.config';\n\nexport class ShellModel {\n  isShell = false;\n}\n\nexport class DataStore<T> {\n  // We wait on purpose 2 secs on local environment when fetching from json to simulate the backend roundtrip.\n  // However, in production you should set this delay to 0 in the assets/config/app-shell.config.prod.json file.\n  // tslint:disable-next-line:max-line-length\n  private networkDelay = (AppShellConfig.settings && AppShellConfig.settings.networkDelay) ? AppShellConfig.settings.networkDelay : 0;\n\n  private timeline: ReplaySubject<T & ShellModel> = new ReplaySubject(1);\n\n  constructor(private shellModel: T) { }\n\n  // Static function with generics\n  // (ref: https://stackoverflow.com/a/24293088/1116959)\n  // Append a shell (T & ShellModel) to every value (T) emmited to the timeline\n  public static AppendShell<T>(dataObservable: Observable<T>, shellModel: T, networkDelay = 400): Observable<T & ShellModel> {\n    const delayObservable = of(true).pipe(\n      delay(networkDelay)\n    );\n\n    // Assign shell flag accordingly\n    // (ref: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n    return combineLatest([\n      delayObservable,\n      dataObservable\n    ]).pipe(\n      // Dismiss unnecessary delayValue\n      map(([delayValue, dataValue]: [boolean, T]): (T & ShellModel) => Object.assign(dataValue, {isShell: false})),\n      // Set the shell model as the initial value\n      startWith(Object.assign(shellModel, {isShell: true}))\n    );\n  }\n\n  load(dataSourceObservable: Observable<T>): void {\n    const dataSourceWithShellObservable = DataStore.AppendShell(dataSourceObservable, this.shellModel, this.networkDelay);\n\n    dataSourceWithShellObservable\n    .subscribe((dataValue: T & ShellModel) => {\n      this.timeline.next(dataValue);\n    });\n  }\n\n  public get state(): Observable<T & ShellModel> {\n    return this.timeline.asObservable();\n  }\n}\n"]}