{"version":3,"sources":["webpack:///src/app/firebase/auth/profile/firebase-profile-can-activate.guard.ts","webpack:///src/app/firebase/auth/profile/firebase-profile.module.ts","webpack:///src/app/firebase/auth/profile/firebase-profile.page.html","webpack:///src/app/firebase/auth/profile/firebase-profile.page.ts","webpack:///src/app/firebase/auth/profile/firebase-profile.resolver.ts","webpack:///src/app/utils/resolver-helper.ts"],"names":["FirebaseProfilePageGuard","firebaseAuthService","router","getLoggedInUser","navigate","routes","path","component","canActivate","resolve","data","FirebaseProfilePageModule","FirebaseProfilePage","route","authService","subscriptions","subscribe","resolvedRouteData","extractData","state","user","error","signOut","replaceUrl","console","log","unsubscribe","isShell","FirebaseProfileResolver","dataSource","getProfileDataSource","dataStore","getProfileStore","ResolverHelper","source","constructor"],"mappings":";;;;;;;;;;;;;;;;;;;AACA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAIaA,wB;AAEX,wCACUC,mBADV,EAEUC,MAFV,EAEwB;AAAA;;AADd,aAAAD,mBAAA,GAAAA,mBAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACN;;;;sCAEO;AACT;AACA,cAAI,KAAKD,mBAAL,CAAyBE,eAAzB,MAA8C,IAAlD,EAAwD;AACtD,mBAAO,IAAP;AACD,WAFD,MAEO;AACL;AACA,iBAAKD,MAAL,CAAYE,QAAZ,CAAqB,CAAC,uBAAD,CAArB;AACA,mBAAO,KAAP;AACD;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;aAaY,kF;AANZ,QAAMC,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE,0EAFb;AAGEC,iBAAW,EAAE,CAAC,6FAAD,CAHf;AAIEC,aAAO,EAAE;AACPC,YAAI,EAAE;AADC;AAJX,KADqB,CAAvB;;QA4BaC,yB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qECtCb,6V,GAAA,8T,GACE,mU,GAAA,+T,GACE,oV,GAAA,+T,GACE;AAAA;;AAAA;;;;;;OAAA,E,wGAAA,E,4GAAA,C;;;;iBAKN,gW,GAAA,gU,GACE,wT,GAAA,4T,GACE,mV,GAAA,4T,GACE,2d,GAAA;AAAA;AAAA;AAAA;AAAA,c,GACE,iX,GAAA;AAAA;AAAA,c,EAAkB;AAAA;AAAA;AAAA,Q,GAMxB,kV,GAAA,4T,GACE,oW,GAAA,4T,GACE,2I,IACE,0W,GAAA;AAAA;AAAA,c,GACA,oX,GAAA;AAAA;AAAA;AAAA,c,GAEF,6I,IACE,0W,GAAA;AAAA;AAAA,c,GAEF,iJ,IACE,wX,GAAA;AAAA;AAAA,c,GAKN,8V,GAAA,4T,GACE,sU,GAAA;AAAA;AAAA,c,GACE,iJ,IAA4B,gF,IAE5B,iJ,IACE,0W,GAAA;AAAA;AAAA,c,GAGJ,sU,GAAA;AAAA;AAAA,c,GACE,iJ,IAA4B,+E,IAC5B,iJ,IACE,0W,GAAA;AAAA;AAAA,c,GAGJ,sU,GAAA;AAAA;AAAA,c,GACE,iJ,IAA4B,uF,IAC5B,iJ,IACE,0W,GAAA;AAAA;AAAA,c,GAGJ,sU,GAAA;AAAA;AAAA,c,GACE;AAAA;AAAA,oBAAuG,UAAvG;;AAAmF;;;;;AAAnF;AAAA,wN,GAAA;AAAA;AAAA;AAAA;AAAA,c,GAAuG,+E,IAAQ;AAAA;AAnD9F;;AAAjB,sBAAiB,SAAjB;;AAAiB;;AAAjB,sBAAiB,SAAjB;;AAQgD;AAAwC,2BAAkB,KAAlB,CAAkB,KAAlB;AAAmB;;AAA3G,uBAAgD,SAAhD,EAAwF,SAAxF,EAA2G,SAA3G;;AACoB;;AAAlB,uBAAkB,SAAlB;;AASgB,sDAAmB,KAAnB,CAAmB,IAAnB;;AAAhB,uBAAgB,UAAhB;;AACkC;AAAxB;;AAAV,uBAAkC,UAAlC,EAAU,UAAV;;AAGgB,sDAAmB,KAAnB,CAAmB,IAAnB;;AAAhB,uBAAgB,UAAhB;;AAG0B,sDAA0B,KAA1B,CAA0B,WAA1B;;AAA1B,uBAA0B,UAA1B;;AAMK;;AAAT,uBAAS,UAAT;;AAIoB,sDAA0B,KAA1B,CAA0B,WAA1B;;AAAhB,uBAAgB,UAAhB;;AAGK;;AAAT,uBAAS,UAAT;;AAGoB,sDAAoB,KAApB,CAAoB,KAApB;;AAAhB,uBAAgB,UAAhB;;AAGK;;AAAT,uBAAS,UAAT;;AAGoB,sDAAuB,KAAvB,CAAuB,QAAvB;;AAAhB,uBAAgB,UAAhB;;AAGK;;AAAT,uBAAS,UAAT;;AACiE;AAA9B;AAAe;;AAAhD,uBAA+D,UAA/D,EAAiC,UAAjC,EAAgD,UAAhD;AAA8D,O,EAAA;AA3C9D;;AAAA;;AAAA;;AAAA;;AACE;;AAAA;;AASA;;AAAA;;AAIA;;AAAA;;AAGA;;AAAA;;AAUA;;AAAA;;AAMA;;AAAA;;AAMA;;AAAA;AAAwC,O;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDhD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaC,mB;AASX,mCACUV,MADV,EAEUW,KAFV,EAGSC,WAHT,EAGyC;AAAA;;AAF/B,aAAAZ,MAAA,GAAAA,MAAA;AACA,aAAAW,KAAA,GAAAA,KAAA;AACD,aAAAC,WAAA,GAAAA,WAAA;AACL;;;;mCAEO;AAAA;;AACT;AACA,eAAKC,aAAL,GAAqB,KAAKF,KAAL,CAAWH,IAAX,CACpBM,SADoB,CAEnB,UAACC,iBAAD,EAAiE;AAC/D;AACA,iBAAI,CAACF,aAAL,GAAqB,sEAAeG,WAAf,CAAiDD,iBAAiB,CAACP,IAAnE,EAAyE,4EAAzE,EACpBM,SADoB,CAEnB,UAACG,KAAD,EAAW;AACT,mBAAI,CAACC,IAAL,GAAYD,KAAZ;AACD,aAJkB,EAKnB,UAACE,KAAD,EAAW,CAAE,CALM,CAArB;AAOD,WAXkB,EAYnB,UAACA,KAAD,EAAW,CAAE,CAZM,CAArB;AAcD;;;kCAES;AAAA;;AACR,eAAKP,WAAL,CAAiBQ,OAAjB,GAA2BN,SAA3B,CAAqC,YAAM;AACzC;AACA;AACA,kBAAI,CAACd,MAAL,CAAYE,QAAZ,CAAqB,CAAC,uBAAD,CAArB,EAAgD;AAAEmB,wBAAU,EAAE;AAAd,aAAhD;AACD,WAJD,EAIG,UAACF,KAAD,EAAW;AACZG,mBAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BJ,KAA7B;AACD,WAND;AAOD,S,CAED;AACA;;;;2CACgB;AACd,eAAKN,aAAL,CAAmBW,WAAnB;AACD;;;4BA1C4C;AAC3C,iBAAQ,KAAKN,IAAL,IAAa,KAAKA,IAAL,CAAUO,OAAxB,GAAmC,IAAnC,GAA0C,KAAjD;AACD;;;;;;;;;;;;;;;;;;;;;ACpBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMaC,uB;AAEX,uCAAoB3B,mBAApB,EAA8D;AAAA;;AAA1C,aAAAA,mBAAA,GAAAA,mBAAA;AAA4C;;;;kCAEtD;AACR,cAAM4B,UAAU,GAAqC,KAAK5B,mBAAL,CAAyB6B,oBAAzB,EAArD;AACA,cAAMC,SAAS,GAAoC,KAAK9B,mBAAL,CAAyB+B,eAAzB,CAAyCH,UAAzC,CAAnD;AACA,iBAAOE,SAAP;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaE,c;;;;;;;AACX;oCAC6BC,M,EAA4BC,W,EAAuC;AAC9F,cAAID,MAAM,YAAY,2DAAtB,EAAiC;AAC/B,mBAAOA,MAAM,CAACf,KAAd;AACD,WAFD,MAEO,IAAIe,MAAM,YAAYC,WAAtB,EAAmC;AACxC;AACA;AACA;AACA,mBAAO,gDAAGD,MAAH,CAAP;AACD;AACF","file":"profile-firebase-profile-module-ngfactory-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { FirebaseAuthService } from '../firebase-auth.service';\n\n@Injectable()\nexport class FirebaseProfilePageGuard implements CanActivate {\n\n  constructor(\n    private firebaseAuthService: FirebaseAuthService,\n    private router: Router\n  ) {}\n\n  canActivate(): boolean {\n    // check if user is authenticated\n    if (this.firebaseAuthService.getLoggedInUser() != null) {\n      return true;\n    } else {\n      // Navigate to the login page\n      this.router.navigate(['firebase/auth/sign-in']);\n      return false;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { ComponentsModule } from '../../../components/components.module';\nimport { FirebaseProfilePageGuard } from './firebase-profile-can-activate.guard';\nimport { FirebaseProfilePage } from './firebase-profile.page';\nimport { FirebaseProfileResolver } from './firebase-profile.resolver';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FirebaseProfilePage,\n    canActivate: [FirebaseProfilePageGuard],\n    resolve: {\n      data: FirebaseProfileResolver\n    }\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule\n  ],\n  declarations: [\n    FirebaseProfilePage\n  ],\n  providers: [\n    FirebaseProfilePageGuard,\n    FirebaseProfileResolver\n  ]\n})\nexport class FirebaseProfilePageModule {}\n","<ion-header class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-back-button defaultHref=\"firebase/auth/sign-in\"></ion-back-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"user-content\">\n  <ion-row>\n    <ion-col class=\"ion-no-padding\">\n      <app-image-shell class=\"user-image add-overlay\" [display]=\"'cover'\" animation=\"spinner\" [src]=\"user.image\" [alt]=\"'item image'\">\n        <app-aspect-ratio [ratio]=\"{w:1, h:1}\">\n        </app-aspect-ratio>\n      </app-image-shell>\n    </ion-col>\n  </ion-row>\n\n  <ion-row class=\"user-details\">\n    <ion-col class=\"ion-no-padding details-wrapper\">\n      <h2 class=\"user-name\">\n        <app-text-shell [data]=\"user?.name\"></app-text-shell>\n        <ion-icon name=\"checkmark-circle\" color=\"bright-pink\"></ion-icon>\n      </h2>\n      <span class=\"user-role\">\n        <app-text-shell [data]=\"user?.role\"></app-text-shell>\n      </span>\n      <p class=\"user-description\">\n        <app-text-shell lines=\"3\" [data]=\"user?.description\"></app-text-shell>\n      </p>\n    </ion-col>\n  </ion-row>\n\n  <ion-row class=\"user-preferences-wrapper\">\n    <ion-col size=\"12\">\n      <h4 class=\"preference-name\">Mobile</h4>\n      <!-- TODO: Incluir un pipe que muestre el valor con forrmato de telefono -->\n      <p class=\"preference-value\">\n        <app-text-shell [data]=\"user?.phoneNumber\"></app-text-shell>\n      </p>\n    </ion-col>\n    <ion-col size=\"12\">\n      <h4 class=\"preference-name\">Email</h4>\n      <p class=\"preference-value\">\n        <app-text-shell [data]=\"user?.email\"></app-text-shell>\n      </p>\n    </ion-col>\n    <ion-col size=\"12\">\n      <h4 class=\"preference-name\">Auth Provider</h4>\n      <p class=\"preference-value\">\n        <app-text-shell [data]=\"user?.provider\"></app-text-shell>\n      </p>\n    </ion-col>\n    <ion-col size=\"12\">\n      <ion-button class=\"sign-out-btn\" expand=\"block\" fill=\"outline\" color=\"bright-blue\" (click)=\"signOut()\">Sign out</ion-button>\n    </ion-col>\n  </ion-row>\n</ion-content>\n","import { Component, OnInit, HostBinding } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FirebaseProfileModel } from './firebase-profile.model';\nimport { FirebaseAuthService } from '../firebase-auth.service';\nimport { Subscription } from 'rxjs';\nimport { IResolvedRouteData, ResolverHelper } from '../../../utils/resolver-helper';\n\n@Component({\n  selector: 'app-firebase-profile',\n  templateUrl: './firebase-profile.page.html',\n  styleUrls: [\n    './styles/firebase-profile.page.scss',\n    './styles/firebase-profile.shell.scss'\n  ]\n})\nexport class FirebaseProfilePage implements OnInit {\n  // Gather all component subscription in one place. Can be one Subscription or multiple (chained using the Subscription.add() method)\n  subscriptions: Subscription;\n  user: FirebaseProfileModel;\n\n  @HostBinding('class.is-shell') get isShell() {\n    return (this.user && this.user.isShell) ? true : false;\n  }\n\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    public authService: FirebaseAuthService\n  ) {}\n\n  ngOnInit() {\n    // On init, the route subscription is the active subscription\n    this.subscriptions = this.route.data\n    .subscribe(\n      (resolvedRouteData: IResolvedRouteData<FirebaseProfileModel>) => {\n        // Route subscription resolved, now the active subscription is the Observable extracted from the resolved route data\n        this.subscriptions = ResolverHelper.extractData<FirebaseProfileModel>(resolvedRouteData.data, FirebaseProfileModel)\n        .subscribe(\n          (state) => {\n            this.user = state;\n          },\n          (error) => {}\n        );\n      },\n      (error) => {}\n    );\n  }\n\n  signOut() {\n    this.authService.signOut().subscribe(() => {\n      // Sign-out successful.\n      // Replace state as we are no longer authorized to access profile page.\n      this.router.navigate(['firebase/auth/sign-in'], { replaceUrl: true });\n    }, (error) => {\n      console.log('signout error', error);\n    });\n  }\n\n  // NOTE: Ionic only calls ngOnDestroy if the page was popped (ex: when navigating back)\n  // Since ngOnDestroy might not fire when you navigate from the current page, use ionViewWillLeave to cleanup Subscriptions\n  ionViewWillLeave(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { FirebaseAuthService } from '../firebase-auth.service';\nimport { Observable } from 'rxjs';\nimport { DataStore } from '../../../shell/data-store';\nimport { FirebaseProfileModel } from './firebase-profile.model';\n\n@Injectable()\nexport class FirebaseProfileResolver implements Resolve<any> {\n\n  constructor(private firebaseAuthService: FirebaseAuthService) {}\n\n  resolve() {\n    const dataSource: Observable<FirebaseProfileModel> = this.firebaseAuthService.getProfileDataSource();\n    const dataStore: DataStore<FirebaseProfileModel> = this.firebaseAuthService.getProfileStore(dataSource);\n    return dataStore;\n  }\n}\n","import { DataStore } from '../shell/data-store';\nimport { Observable, of } from 'rxjs';\n\nexport interface IResolvedRouteData<T> {\n  data: T | DataStore<T>;\n}\n\nexport class ResolverHelper<T> {\n  // More info on function overloads here: https://www.typescriptlang.org/docs/handbook/functions.html#overloads\n  public static extractData<T>(source: (T | DataStore<T>), constructor: (new(...args: any[]) => T)): Observable<T> {\n    if (source instanceof DataStore) {\n      return source.state;\n    } else if (source instanceof constructor) {\n      // The right side of instanceof should be an expression evaluating to a constructor function (ie. a class), not a type\n      // That's why we included an extra parameter which acts as a constructor function for type T\n      // (see: https://github.com/microsoft/TypeScript/issues/5236)\n      return of(source);\n    }\n  }\n}\n"]}