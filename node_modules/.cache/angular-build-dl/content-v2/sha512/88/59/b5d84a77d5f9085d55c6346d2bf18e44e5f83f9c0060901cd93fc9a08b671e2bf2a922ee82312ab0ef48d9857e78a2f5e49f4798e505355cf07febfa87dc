{"version":3,"sources":["webpack:///src/app/signup-step-two/signup-step-two-routing.module.ts","webpack:///src/app/signup-step-two/signup-step-two.module.ts","webpack:///src/app/signup-step-two/signup-step-two.page.html","webpack:///src/app/signup-step-two/signup-step-two.page.ts"],"names":["routes","path","component","SignupStepTwoPageRoutingModule","SignupStepTwoPageModule","SignupStepTwoPage","router","modalController","menu","routerOutlet","apisService","toastService","authService","storageService","validation_messages","type","message","desabled","userData$","subscribe","res","displayUserData","signupForm2","compose","required","enable","form","FormData","append","value","name","company_name","phone","auth_token","signupComplete","result","console","log","store","data","presentToast","navigate","error","status"],"mappings":"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","file":"signup-step-two-signup-step-two-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupStepTwoPage } from './signup-step-two.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupStepTwoPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignupStepTwoPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n import { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupStepTwoPageRoutingModule } from './signup-step-two-routing.module';\nimport { ComponentsModule } from '../components/components.module';\n\nimport { SignupStepTwoPage } from './signup-step-two.page';\n\n@NgModule({\n  imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        IonicModule,\n        ComponentsModule,\n        SignupStepTwoPageRoutingModule,\n     \n  ],\n  declarations: [SignupStepTwoPage]\n})\nexport class SignupStepTwoPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-back-button></ion-back-button>\n    </ion-buttons>\n    <ion-title>Complete Details</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"signup-content\">\n  <div  class=\"dispplay-content-center\">\n       \n    <div class=\"padding20\"></div>\n      <ion-img class=\"auth-logo\" [src]=\"'./assets/logo/logo.png'\" [alt]=\"'walkthrough'\"></ion-img>\n      <h2>Congrats, youâ€™re signed up!</h2>\n      <p style=\"margin: 0\">We just need a couple more details  </p>\n      <div class=\"padding20\"></div>\n      <form [formGroup]=\"signupForm2\" (ngSubmit)=\"doSignup()\" class=\"auth-form\">\n            <ion-list class=\"inputs-list\" lines=\"full\">\n              <ion-item class=\"input-item\">\n                <ion-input type=\"name\" placeholder=\"Your full name\" formControlName=\"name\" clearInput autocapitalize=\"off\"  ></ion-input>\n              </ion-item>\n              <div class=\"error-container\">\n                <ng-container *ngFor=\"let validation of validation_messages.name\">\n                  <div class=\"error-message\" *ngIf=\"signupForm2.get('name').hasError(validation.type) && (signupForm2.get('name').dirty || signupForm2.get('name').touched)\">\n                    <ion-icon name=\"information-circle-outline\"></ion-icon>\n                    <span>{{ validation.message }}</span>\n                  </div>\n                </ng-container>\n              </div>\n\n\n              <ion-item class=\"input-item\">\n                <ion-input type=\"text\" placeholder=\"Company Name (optional)\" formControlName=\"company_name\" clearInput autocapitalize=\"off\"  ></ion-input>\n              </ion-item>\n               \n\n\n              <ion-item class=\"input-item\">\n                <ion-input type=\"phone\" placeholder=\"Phone Number\" formControlName=\"phone\" clearInput autocapitalize=\"off\"  ></ion-input>\n              </ion-item>\n              <div class=\"error-container\">\n                <ng-container *ngFor=\"let validation of validation_messages.phone\">\n                  <div class=\"error-message\" *ngIf=\"signupForm2.get('phone').hasError(validation.type) && (signupForm2.get('phone').dirty || signupForm2.get('phone').touched)\">\n                    <ion-icon name=\"information-circle-outline\"></ion-icon>\n                    <span>{{ validation.message }}</span>\n                  </div>\n                </ng-container>\n              </div>\n\n\n\n              \n\n             \n              \n            </ion-list>\n\n            <ion-button class=\"signup-btn\" type=\"submit\" expand=\"block\" [disabled]=\"!signupForm2.valid || desabled\">Submit</ion-button>\n             \n          </form>\n   \n\n     \n</div>\n</ion-content>\n","import { Component } from '@angular/core';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ModalController, MenuController, IonRouterOutlet } from '@ionic/angular';\n\nimport { TermsOfServicePage } from '../terms-of-service/terms-of-service.page';\nimport { PrivacyPolicyPage } from '../privacy-policy/privacy-policy.page';\nimport { PasswordValidator } from '../validators/password.validator';\nimport { ApisService } from '../services/apis.service';\nimport { AuthService } from '../services/auth.service';\nimport { StorageService } from '../services/storage.service'\nimport { ToastService } from '../services/toast.service';\n\n@Component({\n  selector: 'app-signup-step-two',\n  templateUrl: './signup-step-two.page.html',\n   styleUrls: [\n    '../signup/styles/signup.page.scss'\n  ]\n\n})\nexport class SignupStepTwoPage  {\n\n  signupForm2: FormGroup;\n  matching_passwords_group: FormGroup;\n  industry: Array<any>; \n  desabled: boolean;\n  displayUserData: any;\n\n\n  validation_messages = {\n    'name': [\n      { type: 'required', message: 'Please enter your Full Name.' },\n     ],\n     'phone': [\n      { type: 'required', message: 'Please enter Phone Number.' },\n     ],\n     \n  };\n\n  constructor(\n    public router: Router,\n    public modalController: ModalController,\n    public menu: MenuController,\n    private routerOutlet: IonRouterOutlet,\n    private apisService: ApisService,\n    private toastService: ToastService,\n    private authService: AuthService,\n    private storageService: StorageService\n  ) { }\n  \n  ngOnInit(): void {\n       this.desabled=false;\n        this.authService.userData$.subscribe((res:any) => {\n          this.displayUserData=res\n        })\n    \n\n        this.signupForm2 = new FormGroup({\n           'name': new FormControl('', Validators.compose([\n            Validators.required\n           ])),\n           'phone': new FormControl('', Validators.compose([\n            Validators.required\n           ])),\n          'company_name': new FormControl(''),\n\n        });\n  }\n\n  // Disable side menu for this page\n  ionViewDidEnter(): void {\n    this.menu.enable(false);\n  }\n\n  // Restore to default when leaving this page\n  ionViewDidLeave(): void {\n    this.menu.enable(true);\n  }\n\n  \n  doSignup(): void {\n     this.desabled=true;\n     let form = new FormData();\n     form.append('name', this.signupForm2.value.name);\n     form.append('company_name', this.signupForm2.value.company_name);\n     form.append('phone', this.signupForm2.value.phone);\n     form.append('auth_token', this.displayUserData.auth_token);\n\n          this.apisService.signupComplete(form).subscribe((result: any) => {\n              this.desabled=false;\n              console.log(result);\n                      this.storageService.store('userData',result.data);\n                      this.toastService.presentToast(' Successfully Updated');\n                      this.router.navigate(['app/dashboard']);\n                    },\n                    (error: any)=>{\n                      this.desabled=false;\n                      if(error.status==0){\n                        this.toastService.presentToast('Connection failed');\n                      }\n                      if(error.status==401){\n                        this.toastService.presentToast(error.error.data);\n                      }\n                    }  \n            )\n             \n   }\n\n\n}\n"]}