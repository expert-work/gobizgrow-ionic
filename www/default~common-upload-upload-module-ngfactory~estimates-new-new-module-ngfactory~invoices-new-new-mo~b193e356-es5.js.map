{"version":3,"sources":["webpack:///src/app/common/upload/upload-routing.module.ts","webpack:///src/app/common/upload/upload.module.ts","webpack:///src/app/common/upload/upload.page.html","webpack:///src/app/common/upload/upload.page.ts"],"names":["routes","path","component","UploadPageRoutingModule","UploadPageModule","UploadPage","router","menu","authService","apisService","storageService","toastService","navParams","modalController","items","x","page","last_page","numTimesLeft","image","get","console","log","userData$","subscribe","res","displayUserData","q","auth_token","undefined","loadItems","event","setTimeout","target","complete","form","FormData","append","toString","images","result","data","total","push","sortArray","error","status","presentToast","img","getImageUrl","create","backdropDismiss","modal","onDidDismiss","then","isDefined","id","present","item","dismiss"],"mappings":"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","file":"default~common-upload-upload-module-ngfactory~estimates-new-new-module-ngfactory~invoices-new-new-mo~b193e356-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UploadPage } from './upload.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UploadPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UploadPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UploadPageRoutingModule } from './upload-routing.module';\nimport { ComponentsModule } from '../../components/components.module';\nimport { UploadPage } from './upload.page';\n\nimport { NewPageModule} from '../../images/new/new.module'\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UploadPageRoutingModule,\n    ComponentsModule,\n    NewPageModule\n  ],\n  declarations: [UploadPage]\n})\nexport class UploadPageModule {}\n ","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button  (click)=\"close()\">\n        <span ion-text color=\"primary\" showWhen=\"ios\"></span>\n        <ion-icon name=\"close\" showWhen=\"android,windows\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>Images</ion-title>\n    <ion-buttons slot=\"end\" class=\"button button-clear button-positive\" (click)=\"newModal()\" >  \n      <ion-icon name=\"add\" class=\"add-new\"></ion-icon>\n     </ion-buttons>\n\n  </ion-toolbar>\n</ion-header>\n\n\n\n\n \n\n\n<ion-content class=\"deals-listing-content\">\n  <ng-container>\n    <ion-radio-group value={{image.id}}>\n    <div class=\"listing-item\"  [ngClass]=\"ended\"  *ngFor=\"let item of items\">\n      <ion-row class=\"middle-row\" style=\"padding-top: 20px;\">\n        <ion-col size=\"2\">\n        <ion-buttons>\n          <ion-radio  value={{item.id}} (click)=\"selectImage(item)\"></ion-radio>\n        </ion-buttons>\n        </ion-col>\n        <ion-col class=\"info-col\"> \n\n          <app-image-shell [display]=\"'cover'\" class=\"category-cover\" animation=\"spinner\" [src]=\"imageUrl(item.image)\">\n            <app-aspect-ratio [ratio]=\"{w:50, h:50}\">\n            </app-aspect-ratio>\n          </app-image-shell>\n\n         </ion-col>\n     \n      </ion-row>\n    </div>\n  </ion-radio-group>\n  </ng-container>\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\" [disabled]=\"numTimesLeft <= 0\">  \n    <ion-infinite-scroll-content  \n      loadingSpinner=\"bubbles\"  \n      loadingText=\"Loading more data...\">  \n    </ion-infinite-scroll-content>  \n  </ion-infinite-scroll>  \n</ion-content>\n\n<ion-footer class=\"ion-no-border\">\n  <ion-toolbar>\n    <ion-row>\n       <ion-col>\n        <ion-button expand=\"full\" fill=\"outline\" (click)=\"updateSelectedImage()\"> Select Image</ion-button>\n      </ion-col>\n    </ion-row>\n          \n  </ion-toolbar>\n</ion-footer>","import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service'\nimport { ApisService } from '../../services/apis.service'\n\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\nimport { NewPage } from '../../images/new/new.page'\n\n\n\n@Component({\n  selector: 'app-upload',\n  templateUrl: './upload.page.html',\n  styleUrls: [\n    './upload.page.scss',\n    '../../style/listing.ios.scss',\n    '../../style/listing.page.scss',\n    '../../style/listing.shell.scss'\n  ],\n})\nexport class UploadPage implements OnInit {\n  displayUserData:any;\n  image:any;\n\n  constructor(\n    public router: Router,\n    public menu: MenuController,\n    private authService: AuthService,\n    private apisService:ApisService,\n     private storageService: StorageService,\n    private toastService: ToastService,\n    navParams: NavParams,\n    public modalController: ModalController\n  ) {\n    this.image=navParams.get('data');\n\n    console.log('popup open start');\n    console.log(this.image);\n    console.log('popup open end');\n\n\n  }\n  q:any\n  items = [];  \n  x= 0;\n  page=1;\n  last_page=0;\n  numTimesLeft = 5;  \n   \n  ngOnInit(){\n   this.authService.userData$.subscribe((res:any) => {\n     this.displayUserData=res\n     this.q='';\n     if (this.displayUserData.auth_token !== undefined) { this.loadItems(); }\n   })\n  \n\n  }\n\n  loadData(event) {  \n   setTimeout(() => {  \n     this.loadItems();  \n     this.numTimesLeft -= 1;  \n     event.target.complete();  \n   }, 500);  \n }  \n loadItems() {  \n    let form = new FormData();\n        form.append('page',this.page.toString() );\n        form.append('q',this.q );\n        form.append('auth_token',this.displayUserData.auth_token);\n         this.apisService.images(form).subscribe((result: any) => {\n            if(result.data.total){\n              this.page= this.page+1;\n              this.items.push(...result.data.data)\n              this.items=this.apisService.sortArray(this.items);\n            }else{\n\n            }\n         },\n          (error: any)=>{\n            if(error.status==0){\n              this.toastService.presentToast('Connection failed');\n            }\n            if(error.status==401){\n              this.toastService.presentToast('Authentcation failed');\n            }\n          }  \n   ) \n } \n \n imageUrl(img:any){\n   return this.apisService.getImageUrl(img);\n }\n async newModal() {\n  const modal = await this.modalController.create({\n     component: NewPage,\n     backdropDismiss:false\n  });\n  modal.onDidDismiss().then(data=>{\n     if(data.data)\n     if(this.apisService.isDefined(data.data.id)){\n        this.items.push(data.data)\n        this.items=this.apisService.sortArray(this.items);\n     }\n  })\n  return await modal.present();\n}\n\n  selectImage(item){\n    this.image= item;  \n    \n  }\n\n updateSelectedImage(){\n  this.modalController.dismiss(this.image);\n }\n   close() { this.modalController.dismiss([]);  }\n\n}\n"]}