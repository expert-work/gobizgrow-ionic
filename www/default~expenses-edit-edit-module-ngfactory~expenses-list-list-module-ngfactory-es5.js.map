{"version":3,"sources":["webpack:///src/app/common/expense-categories/expense-categories.page.ts","webpack:///src/app/expenses/edit/edit-routing.module.ts","webpack:///src/app/expenses/edit/edit.module.ts","webpack:///src/app/expenses/edit/edit.page.html","webpack:///src/app/expenses/edit/edit.page.ts"],"names":["ExpenseCategoriesPage","router","menu","authService","apisService","storageService","toastService","navParams","modalController","items","x","page","last_page","numTimesLeft","category","get","console","log","loading","userData$","subscribe","res","displayUserData","q","auth_token","undefined","loadItems","event","setTimeout","target","complete","form","FormData","append","toString","expenseCategories","result","data","total","push","sortArray","error","status","presentToast","evt","srcElement","value","create","component","backdropDismiss","modal","onDidDismiss","then","isDefined","id","present","item","expense_category_id","name","dismiss","routes","path","EditPageRoutingModule","EditPageModule","EditPage","vehicles_json_data","validation_messages","type","message","expenses_category","amount","compose","required","expense_date","notes","desabled","expensesUpdate","makeid","componentProps"],"mappings":"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","file":"default~expenses-edit-edit-module-ngfactory~expenses-list-list-module-ngfactory-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service'\nimport { ApisService } from '../../services/apis.service'\n\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\nimport { NewPage } from '../../expense-categories/new/new.page'\n\n\n@Component({\n  selector: 'app-expense-categories',\n  templateUrl: './expense-categories.page.html',\n  styleUrls: [\n    './expense-categories.page.scss',\n    '../../style/listing.ios.scss',\n    '../../style/listing.page.scss',\n    '../../style/listing.shell.scss'\n  ],\n})\nexport class ExpenseCategoriesPage implements OnInit {\n  displayUserData:any;\n  category:any;\n  loading:boolean;\n  constructor(\n    public router: Router,\n    public menu: MenuController,\n    private authService: AuthService,\n    private apisService:ApisService,\n     private storageService: StorageService,\n    private toastService: ToastService,\n    navParams: NavParams,\n    public modalController: ModalController\n  ) {\n    this.category=navParams.get('data');\n\n    console.log('popup open start');\n    console.log(this.category);\n    console.log('popup open end');\n    this.loading=true;\n\n  }\n  q:any\n  items = [];  \n  x= 0;\n  page=1;\n  last_page=0;\n  numTimesLeft = 5;  \n   \n  ngOnInit(){\n   this.authService.userData$.subscribe((res:any) => {\n     this.displayUserData=res\n     this.q='';\n     if (this.displayUserData.auth_token !== undefined) { this.loadItems(); }\n   })\n  \n\n  }\n\n  loadData(event) {  \n   setTimeout(() => {  \n     this.loadItems();  \n     this.numTimesLeft -= 1;  \n     event.target.complete();  \n   }, 500);  \n }  \n loadItems() {  \n    let form = new FormData();\n        form.append('page',this.page.toString() );\n        form.append('q',this.q );\n        form.append('auth_token',this.displayUserData.auth_token);\n         this.apisService.expenseCategories(form).subscribe((result: any) => {\n          this.loading=false;\n            if(result.data.total){\n              this.page= this.page+1;\n              this.items.push(...result.data.data)\n              this.items=this.apisService.sortArray(this.items);\n            }else{\n\n            }\n         },\n          (error: any)=>{\n            if(error.status==0){\n              this.toastService.presentToast('Connection failed');\n            }\n            if(error.status==401){\n              this.toastService.presentToast('Authentcation failed');\n            }\n          }  \n   ) \n } \n searchBox(evt){\n   this.q= evt.srcElement.value;\n   this.page=1;\n   this.items = [];\n   this.loadItems()\n }\n\n async newModal() {\n  const modal = await this.modalController.create({\n     component: NewPage,\n     backdropDismiss:false\n  });\n  modal.onDidDismiss().then(data=>{\n     if(data.data)\n     if(this.apisService.isDefined(data.data.id)){\n        this.items.push(data.data)\n        this.items=this.apisService.sortArray(this.items);\n     }\n  })\n  return await modal.present();\n}\n\n  selectCategory(item){\n    item.expense_category_id=item.id;\n    // if(item.id !=this.category.expense_category_id){\n    //   item.expense_category_id=item.id;\n    //   item.id=this.apisService.makeid(10);\n    // }else{\n    //   item.expense_category_id=item.id;\n    //   item.id=this.category.id;\n    // }\n    this.category= item;  \n    \n  }\n\n updateSelectedCategory(){\n   if(this.apisService.isDefined(this.category.name)){\n      this.modalController.dismiss(this.category);\n   }\n \n }\n   close() { this.modalController.dismiss([]);  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditPage } from './edit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditPageRoutingModule } from './edit-routing.module';\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { EditPage } from './edit.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditPageRoutingModule,\n    ComponentsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [EditPage]\n})\nexport class EditPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button  (click)=\"close()\">\n        <span ion-text color=\"primary\" showWhen=\"ios\"></span>\n        <ion-icon name=\"close\" showWhen=\"android,windows\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>Edit Expense</ion-title>\n    <ion-button slot=\"end\" class=\"button button-clear button-positive\"   style=\"color: white;\"   [disabled]=\"!form.valid || desabled\"  (click)=\"saveForm()\">  \n      <ion-icon name=\"share\"></ion-icon>\n    </ion-button>\n\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content>\n     \n\n\n <div  class=\"dispplay-content-center\">\n      \n  \n   <form [formGroup]=\"form\" (ngSubmit)=\"saveForm()\" class=\"forms\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n\n      <ion-item class=\"input-item\">\n         \n          <ion-icon name=\"calendar-outline\" style=\"    font-size: 40px; color: #378275;\"></ion-icon>\n          <ion-datetime  style=\"width: 100%;\"  displayFormat=\"MM/DD/YYYY\"     formControlName=\"expense_date\"  placeholder=\"Expense Date\" display-timezone=\"utc\"></ion-datetime>\n         \n        <div class=\"error-container\" style=\"display:block;width: 100%;\">\n          <ng-container *ngFor=\"let validation of validation_messages.expense_date\">\n            <div class=\"error-message\" *ngIf=\"form.get('expense_date').hasError(validation.type) && (form.get('expense_date').dirty || form.get('expense_date').touched)\">\n              <ion-icon name=\"information-circle-outline\"></ion-icon>\n              <span>{{ validation.message }}</span>\n            </div>\n          </ng-container>\n        </div>\n      </ion-item>\n\n\n      \n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"Expense Category\" value=\"{{expenses_category.name}}\" formControlName=\"expense_category_name\" (click)=\"openExpenseCategoriesModal()\" readonly=\"true\" clearInput autocapitalize=\"off\" ></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.expense_category_name\">\n          <div class=\"error-message\" *ngIf=\"form.get('expense_category_name').hasError(validation.type) && (form.get('expense_category_name').dirty || form.get('expense_category_name').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n\n      <ion-item class=\"input-item\">\n        <ion-input type=\"number\" placeholder=\"Amount\" formControlName=\"amount\" clearInput autocapitalize=\"off\" ></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.amount\">\n          <div class=\"error-message\" *ngIf=\"form.get('amount').hasError(validation.type) && (form.get('amount').dirty || form.get('amount').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n\n  \n      <ion-item class=\"input-item\">\n        <ion-textarea type=\"text\" placeholder=\" Notes..\" formControlName=\"notes\" clearInput autocapitalize=\"off\" ></ion-textarea>\n\n      </ion-item>\n    </ion-list>\n\n    \n\n    \n    \n\n    <div class=\"padding20\"></div>\n\n    <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\"   [disabled]=\"!form.valid || desabled\">Save Now</ion-button>\n    <div class=\"padding20\"></div>\n  </form>\n</div> \n</ion-content> ","import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service'\nimport { ApisService } from '../../services/apis.service'\n\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\nimport { ExpenseCategoriesPage } from '../../common/expense-categories/expense-categories.page'\n\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.page.html',\n  styleUrls: ['./edit.page.scss'],\n})\nexport class EditPage implements OnInit {\n\n \n  form: FormGroup;\n  data:any\n  desabled: boolean;\n  displayUserData: any; \n  expense_date:any;\n  vehicles_json_data=[];\n  expenses_category:any;\n  validation_messages = {\n    'expense_date': [\n      { type: 'required', message: 'Date is required.' },\n     ],\n    'amount': [\n      { type: 'required', message: 'amount is required.' },\n     ],\n     'expense_category_name': [\n      { type: 'required', message: 'Category is required.' },\n     ],\n     \n  };\n\n \n\n  constructor(\n    public router: Router,\n    public menu: MenuController,\n    private authService: AuthService,\n    private apisService:ApisService,\n     private storageService: StorageService,\n    private toastService: ToastService,\n    navParams: NavParams,\n    public modalController: ModalController\n  ) {\n\n    this.data=navParams.get('data');\n\n    this.expenses_category=[];\n    this.expenses_category=this.data.category;\n     this.expenses_category.name=this.data.category.name;\n     this.expenses_category.expense_category_id=this.data.category.id;\n\n    this.form = new FormGroup({\n      'amount': new FormControl(this.data.amount, Validators.compose([\n        Validators.required,\n       ])),\n      'expense_date': new FormControl(this.data.expense_date, Validators.compose([\n         Validators.required\n       ])),\n       'expense_category_name': new FormControl(this.data.category.name, Validators.compose([\n        Validators.required\n        ])),\n\n       \n      'notes': new FormControl(this.data.notes),\n    });\n  }\n \n  ngOnInit(){\n    this.authService.userData$.subscribe((res:any) => {\n      this.displayUserData=res\n      })\n   }\n\n\n  saveForm(): void {\n    console.log('do Log In');\n     this.desabled=true;\n     let form = new FormData();\n     form.append('amount', this.form.value.amount);\n     form.append('expense_date', this.form.value.expense_date);\n     form.append('notes', this.form.value.notes);\n     form.append('expense_category_id', this.expenses_category.expense_category_id);\n\n     \n     form.append('auth_token',this.data.auth_token);\n \n     \n    this.apisService.expensesUpdate(form).subscribe((result: any) => {\n      this.desabled=false;\n                this.toastService.presentToast('Successfully added');\n                console.log(result.data);\n                this.modalController.dismiss(result.data);\n            },\n            (error: any)=>{\n              this.desabled=false;\n              if(error.status==0){\n                this.toastService.presentToast('Connection failed');\n              }\n              if(error.status==401){\n                this.toastService.presentToast('Authentcation failed');\n              }\n            }  \n     )\n   }\n\n \n\n  async openExpenseCategoriesModal() {\n    let data={\n      id:this.apisService.makeid(10),\n       \n    }\n    const modal = await this.modalController.create({\n      component: ExpenseCategoriesPage,\n       componentProps: { data: data },\n       backdropDismiss:false\n    });\n    modal.onDidDismiss().then(data=>{\n        if(this.apisService.isDefined(data.data.id)){\n          this.expenses_category=(data.data);\n       }\n   \n   \n    })\n    return await modal.present();\n  }\n\n  \n \n \n\n  close()\n  {\n    this.modalController.dismiss([]);\n  }\n\n}\n"]}