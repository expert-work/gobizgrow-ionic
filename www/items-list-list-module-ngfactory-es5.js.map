{"version":3,"sources":["webpack:///src/app/items/edit/edit-routing.module.ts","webpack:///src/app/items/edit/edit.module.ts","webpack:///src/app/items/edit/edit.page.html","webpack:///src/app/items/edit/edit.page.ts","webpack:///src/app/items/list/list-routing.module.ts","webpack:///src/app/items/list/list.module.ts","webpack:///src/app/items/list/list.page.html","webpack:///src/app/items/list/list.page.ts","webpack:///src/app/services/apis.service.ts","webpack:///src/app/services/toast.service.ts"],"names":["routes","path","component","EditPageRoutingModule","EditPageModule","EditPage","router","menu","authService","apisService","storageService","toastService","navParams","modalController","categories","validation_messages","type","message","data","get","console","log","form","description","name","compose","required","price","min","userData$","subscribe","res","displayUserData","desabled","FormData","append","value","auth_token","JSON","stringify","itemUpdate","result","presentToast","dismiss","error","status","category","event","tempArray","map","item","category_id","target","push","create","componentProps","backdropDismiss","modal","onDidDismiss","then","isDefined","sortArray","present","id","ListPageRoutingModule","ListPageModule","ListPage","actionSheetController","items","x","page","last_page","numTimesLeft","loading","q","undefined","addMoreItems","setTimeout","complete","toString","total","evt","srcElement","buttons","text","role","handler","deleteItems","actionSheet","editModal","checkedItems","getCheckedItemList","deleteCustomers","isError","tempItems","i","length","isSelected","masterSelected","every","checkedList","ApisService","httpService","http","imageUploadUrl","apiUrl","blobData","ext","formData","post","file","split","pop","b64Data","contentType","sliceSize","byteCharacters","atob","byteArrays","offset","slice","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","blob","Blob","fileUrl","myArray","reduce","unique","o","some","obj","sort","a","b","characters","charactersLength","charAt","Math","floor","random","postData","ToastService","toastController","infoMessage","duration","toast"],"mappings":"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","file":"items-list-list-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EditPage } from './edit.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EditPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EditPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule ,ReactiveFormsModule} from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { EditPageRoutingModule } from './edit-routing.module';\nimport { CategoriesPageModule } from '../../common/categories/categories.module'\n\nimport { EditPage } from './edit.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    EditPageRoutingModule,\n    CategoriesPageModule,\n    ReactiveFormsModule\n  ],\n  declarations: [EditPage]\n})\nexport class EditPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-button  (click)=\"close()\">\n        <span ion-text color=\"primary\" showWhen=\"ios\"></span>\n        <ion-icon name=\"close\" showWhen=\"android,windows\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n    <ion-title>Edit Item/Service</ion-title>\n    <ion-button slot=\"end\" class=\"button button-clear button-positive\"   style=\"color: white;\"   [disabled]=\"!form.valid || desabled\"  (click)=\"saveForm()\">  \n      <ion-icon name=\"share\"></ion-icon>\n    </ion-button>\n\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content>\n     \n\n\n <div  class=\"dispplay-content-center\">\n      \n  \n   <form [formGroup]=\"form\" (ngSubmit)=\"saveForm()\" class=\"forms\">\n    <ion-list class=\"inputs-list\" lines=\"full\">\n       \n     \n\n      <ion-item class=\"input-item\">\n        <ion-input type=\"text\" placeholder=\"Name\" formControlName=\"name\" clearInput autocapitalize=\"off\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.name\">\n          <div class=\"error-message\" *ngIf=\"form.get('name').hasError(validation.type) && (form.get('name').dirty || form.get('name').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n      \n\n      <ion-item class=\"input-item\">\n        <ion-input type=\"number\" placeholder=\"Price\" formControlName=\"price\" clearInput autocapitalize=\"off\"></ion-input>\n      </ion-item>\n      <div class=\"error-container\">\n        <ng-container *ngFor=\"let validation of validation_messages.price\">\n          <div class=\"error-message\" *ngIf=\"form.get('price').hasError(validation.type) && (form.get('price').dirty || form.get('price').touched)\">\n            <ion-icon name=\"information-circle-outline\"></ion-icon>\n            <span>{{ validation.message }}</span>\n          </div>\n        </ng-container>\n      </div>\n      <ion-item class=\"input-item\">\n        <ion-textarea type=\"text\" placeholder=\"Description...\" formControlName=\"description\" clearInput autocapitalize=\"off\" ></ion-textarea>\n\n      </ion-item>\n    </ion-list>\n\n    <ion-card *ngIf=\"categories.length\" style=\"text-align: left;\">\n      <ion-card-content >\n              <ion-row  *ngFor=\"let category of categories\"> \n                 <ion-col>\n                  <label class=\"form-label\"> {{category.name}} </label>\n                  <div class=\"input-item\">\n                    <ion-input type=\"number\" [value]=\"category.price\" placeholder=\"Price\"  (ionInput)=\"itemCategoryPriceUpdate(category,$event)\"   autocapitalize=\"off\" ></ion-input>\n                    <ion-icon style=\"padding: 10px 0px;font-size: 18px;\" name=\"close\" color=\"danger\"  (click)=\"deleteCategory(category.id)\"></ion-icon>\n                  </div>              \n                </ion-col>\n                \n             </ion-row>\n         </ion-card-content>\n     </ion-card>\n\n    \n    <ion-button slot=\"end\" class=\"button button-clear button-positive\" (click)=\"openCategoryModal()\" >  \n      <ion-icon name=\"add\"></ion-icon> Categories\n    </ion-button>\n    \n\n    <div class=\"padding20\"></div>\n\n    <ion-button class=\"login-btn\" type=\"submit\" expand=\"block\"   [disabled]=\"!form.valid || desabled\">Save Now</ion-button>\n    <div class=\"padding20\"></div>\n  </form>\n</div> \n</ion-content> ","import { Component, OnInit } from '@angular/core';\nimport { NavParams, ModalController } from '@ionic/angular';\nimport { Validators, FormGroup, FormControl } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { MenuController } from '@ionic/angular';\nimport { AuthService } from '../../services/auth.service'\nimport { ApisService } from '../../services/apis.service'\n\nimport { StorageService } from '../../services/storage.service';\nimport { ToastService } from '../../services/toast.service';\nimport { CategoriesPage } from '../../common/categories/categories.page' \n\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.page.html',\n  styleUrls: ['./edit.page.scss'],\n})\nexport class EditPage implements OnInit {\n\n\n  form: FormGroup;\n  desabled: boolean;\n  displayUserData: any; \n  categories=[];\n  data:any;\n  validation_messages = {\n    'name': [\n      { type: 'required', message: 'Name is required.' },\n      { type: 'minlength', message: 'Password must be at least 2 characters long.' }\n    ],\n    'price': [\n      { type: 'required', message: 'Price is required.' },\n      { type: 'min', message: 'Price must be a valid number.' },\n     ]\n  };\n\n \n\n  constructor(\n    public router: Router,\n    public menu: MenuController,\n    private authService: AuthService,\n    private apisService:ApisService,\n     private storageService: StorageService,\n    private toastService: ToastService,\n    navParams: NavParams,\n    \n    public modalController: ModalController\n  ) {\n    this.data=navParams.get('data');\n  \n    this.categories=this.data.categories;\n    console.log(this.categories);\n    this.form = new FormGroup({\n      'description': new FormControl(this.data.description),\n      'name': new FormControl(this.data.name, Validators.compose([\n         Validators.required\n      ])),\n      'price': new FormControl(this.data.price, Validators.compose([\n        Validators.required,\n        Validators.min(1),\n     ])),\n    });\n  }\n  \n\n  ngOnInit(){\n    this.authService.userData$.subscribe((res:any) => {\n      this.displayUserData=res\n      })\n   }\n\n\n  saveForm(): void {\n    console.log('do Log In');\n     this.desabled=true;\n     let form = new FormData();\n     form.append('description', this.form.value.description);\n     form.append('name', this.form.value.name);\n     form.append('price', this.form.value.price);\n     form.append('auth_token', this.data.auth_token);\n     form.append('categories', JSON.stringify(this.categories));\n     this.apisService.itemUpdate(form).subscribe((result: any) => {\n      this.desabled=false;\n                this.toastService.presentToast('Successfully Upated');\n                console.log(result.data);\n                this.modalController.dismiss(result.data);\n            },\n            (error: any)=>{\n              this.desabled=false;\n              if(error.status==0){\n                this.toastService.presentToast('Connection failed');\n              }\n              if(error.status==401){\n                console.log(error.error.data);\n                this.toastService.presentToast(error.error.data);\n              }\n            }  \n     )\n   }\n\n   itemCategoryPriceUpdate(category:any,event:any){\n                 let tempArray=[];\n                 this.categories.map(function (item) {\n                      if(item.category_id==category.category_id){ item.price=event.target.value } \n                      tempArray.push(item); \n                 });\n                 this.categories=tempArray;\n\n                 console.log(this.categories);\n   }\n\n  async openCategoryModal() {\n    const modal = await this.modalController.create({\n      component: CategoriesPage,\n       componentProps: { data: this.categories },\n       backdropDismiss:false\n    });\n    modal.onDidDismiss().then(data=>{\n        if(this.apisService.isDefined(data.data[0])){\n          this.categories=(data.data);\n          this.categories=this.apisService.sortArray(this.categories);\n       }\n    })\n    return await modal.present();\n  }\n \n\n  deleteCategory(id : Number){\n    let tempArray=[];\n    this.categories.map(function (item) {\n      if(item.id !=id){ tempArray.push(item);  }\n    });\n    this.categories=tempArray;\n  }\n\n  close()\n  {\n    this.modalController.dismiss([]);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ListPage } from './list.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ListPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ListPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ListPageRoutingModule } from './list-routing.module';\nimport { ComponentsModule } from '../../components/components.module';\n\nimport { ListPage } from './list.page';\nimport { NewPageModule } from '../new/new.module'\nimport { EditPageModule } from '../edit/edit.module'\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ListPageRoutingModule,\n    ComponentsModule,\n    NewPageModule,\n    EditPageModule\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","<ion-header>\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n      Items\n    </ion-title>\n    <ion-buttons slot=\"end\" class=\"button button-clear button-positive\" (click)=\"newModal()\">  \n         <ion-icon name=\"add\" class=\"add-new\"></ion-icon>\n    </ion-buttons>\n\n  </ion-toolbar>\n</ion-header>\n\n<ion-header>\n  <ion-toolbar style=\"    padding-top: 15px; padding-bottom: 10px;\">\n    <ion-buttons slot=\"start\" style=\"padding-left: 15px;\">\n      <ion-checkbox color=\"secondary\" (click)=\"openMenu()\" ></ion-checkbox>\n    </ion-buttons>\n    <ion-searchbar value={{q}} (ionInput)=\"searchBox($event)\"    style=\"    min-width: 200px !important;\"></ion-searchbar>\n  </ion-toolbar>\n</ion-header>\n\n\n\n<ion-content class=\"deals-listing-content\">\n  <ion-spinner  *ngIf=\"loading\" class=\"loading\" name=\"crescent\" color=\"primary\"></ion-spinner>\n\n  <ng-container  *ngIf=\"!loading\" >\n    <div class=\"listing-item\"  [ngClass]=\"ended\"  *ngFor=\"let item of items\">\n      <ion-row class=\"middle-row\" style=\"padding-top: 20px;\">\n        <ion-col size=\"2\">\n        <ion-buttons><ion-checkbox  (click)=\"openMenu()\"  [(ngModel)]=\"item.isSelected\" name=\"list_name\" value=\"{{item.id}}\" (change)=\"isAllSelected()\"></ion-checkbox></ion-buttons>\n        </ion-col>\n        <ion-col class=\"info-col\" size=\"4\">\n          <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"item.name\"></app-text-shell>\n        </ion-col>\n        <ion-col class=\"info-col\" size=\"4\">\n          <p class=\"item-description\">\n            <app-text-shell animation=\"bouncing\" lines=\"3\" [data]=\"item.price | currency \"></app-text-shell>\n          </p>\n        </ion-col>\n        <ion-col size=\"2\">\n          <ion-icon name=\"options\" class=\"list-item-option\" (click)=\"openActionMenu(item)\"></ion-icon>\n        </ion-col>\n      </ion-row>\n    </div>\n  </ng-container>\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\" [disabled]=\"numTimesLeft <= 0\">  \n    <ion-infinite-scroll-content  \n      loadingSpinner=\"bubbles\"  \n      loadingText=\"Loading more data...\">  \n    </ion-infinite-scroll-content>  \n  </ion-infinite-scroll>  \n</ion-content>\n\n\n ","import { Component, OnInit } from '@angular/core';\nimport { ActionSheetController,ModalController } from '@ionic/angular';\nimport { ApisService } from '../../services/apis.service';\nimport { ToastService } from '../../services/toast.service';\nimport { AuthService } from '../../services/auth.service';\nimport { NewPage } from '../new/new.page'\nimport { EditPage } from '../edit/edit.page'\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.page.html',\n  styleUrls: [\n    './list.page.scss',\n    '../../style/listing.ios.scss',\n    '../../style/listing.page.scss',\n    '../../style/listing.shell.scss'\n  ],\n})\nexport class ListPage implements OnInit {\n\n\n  displayUserData: any;\n  q:any;\n  masterSelected:boolean;\n  checklist:any;\n  checkedList:any;\n  loading:boolean; \n  constructor(\n          public actionSheetController: ActionSheetController, \n          private apisService: ApisService,\n          private toastService:ToastService,\n          private authService: AuthService,\n          private modalController: ModalController\n       ) {\n        this.loading=true;  \n       }\n\n\n   items = [];  \n   x= 0;\n   page=1;\n   last_page=0;\n   numTimesLeft = 5;  \n    \n   ngOnInit(){\n    this.authService.userData$.subscribe((res:any) => {\n      this.displayUserData=res\n      this.q='';\n      if (this.displayUserData.auth_token !== undefined) { this.addMoreItems(); }\n    })\n   }\n  \n  \n  loadData(event) {  \n    setTimeout(() => {  \n      console.log('Done');  \n      this.addMoreItems();  \n      this.numTimesLeft -= 1;  \n      event.target.complete();  \n    }, 500);  \n  }  \n  addMoreItems() {  \n     let form = new FormData();\n         form.append('page',this.page.toString() );\n         form.append('q',this.q );\n         form.append('auth_token',this.displayUserData.auth_token);\n          this.apisService.items(form).subscribe((result: any) => {\n            this.loading=false; \n             if(result.data.total){\n               this.page= this.page+1;\n               this.items.push(...result.data.data)\n               this.items=this.apisService.sortArray(this.items);\n             }else{\n\n             }\n          },\n           (error: any)=>{\n             if(error.status==0){\n               this.toastService.presentToast('Connection failed');\n             }\n             if(error.status==401){\n               this.toastService.presentToast('Authentcation failed');\n             }\n           }  \n    ) \n  } \n  searchBox(evt){\n    this.q= evt.srcElement.value;\n    this.page=1;\n    this.items = [];\n    this.addMoreItems()\n  }\n \n  \n\n  async openMenu() {  \n    const actionSheet = await this.actionSheetController.create({  \n     // header: 'Action',  \n      buttons: [  \n       {  \n          text: 'Delete',  \n          role: 'destructive',  \n          handler: () => {  \n            this.deleteItems(); \n          }  \n        }, {  \n          text: 'Cancel',  \n          role: 'cancel',  \n          handler: () => {  \n            console.log('Cancel clicked');  \n          }  \n        }  \n      ]  \n    });  \n    await actionSheet.present();  \n  }  \n\n\n  async openActionMenu(item: any) {  \n     const actionSheet = await this.actionSheetController.create({  \n     // header: 'Action',  \n      buttons: [ \n        {  \n          text: 'Update',  \n           handler: () => {  \n             this.editModal(item);\n          }  \n        }, \n        {  \n          text: 'View',  \n           handler: () => {  \n            console.log('Destructive clicked');  \n          }  \n        } \n        , {  \n          text: 'Cancel',  \n          role: 'cancel',  \n          handler: () => {  \n            console.log('Cancel clicked');  \n          }  \n        }  \n      ]  \n    });  \n    await actionSheet.present();  \n  } \n\n \n\n  async editModal(data:any) {\n    const modal = await this.modalController.create({\n      component: EditPage,\n      componentProps: { data: data },\n      backdropDismiss:false\n    });\n    modal.onDidDismiss().then(data=>{\n       if(this.apisService.isDefined(data.data.id)){\n        let tempArray=[];\n        this.items.map(function (item) {\n          if(item.id == data.data.id){ tempArray.push(data.data); console.log(item.id+'--'+data.data.id+' EQUAL');  } else {tempArray.push(item); }\n        });\n        this.items=this.apisService.sortArray(tempArray);\n       }\n    })\n    return await modal.present();\n  }\n  \n   \n  async deleteItems(){\n        let checkedItems= this.getCheckedItemList();\n        let form = new FormData();\n         form.append('ids', checkedItems);\n         form.append('auth_token',this.displayUserData.auth_token);\n  \n        this.apisService.deleteCustomers(form).subscribe((result: any) => {\n                if(!result.isError){\n                  let tempItems = [];\n                  for (var i = 0; i < this.items.length; i++) {\n                    if(!this.items[i].isSelected)\n                    tempItems.push(this.items[i]);\n                  }\n                this.items=tempItems;\n                }\n         },\n          (error: any)=>{\n            console.log(error);\n            if(error.status==0){\n              this.toastService.presentToast('Connection failed');\n            }\n            if(error.status==401){\n              this.toastService.presentToast('Authentcation failed');\n            }\n          }  \n      ) \n  }\n  \n  \n  \n  \n  \n  async newModal() {\n    const modal = await this.modalController.create({\n       component: NewPage,\n       backdropDismiss:false\n    });\n    modal.onDidDismiss().then(data=>{\n       if(data.data)\n       if(this.apisService.isDefined(data.data.id)){\n          this.items.push(data.data)\n          this.items=this.apisService.sortArray(this.items);\n       }\n    })\n    return await modal.present();\n  }\n  \n  \n  checkUncheckAll() {\n    for (var i = 0; i < this.items.length; i++) {\n      this.items[i].isSelected = this.masterSelected;\n    }\n    this.getCheckedItemList();\n  }\n  isAllSelected() {\n    this.masterSelected = this.items.every(function(item:any) {\n        return item.isSelected == true;\n      })\n    this.getCheckedItemList();\n  }\n  \n  getCheckedItemList(){\n    this.checkedList = [];\n    for (var i = 0; i < this.items.length; i++) {\n      if(this.items[i].isSelected)\n      this.checkedList.push(this.items[i].id);\n    }\n     this.checkedList = JSON.stringify(this.checkedList);\n     return this.checkedList;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { HttpService } from './http.service';\nimport { HttpClient } from '@angular/common/http';\nimport { StorageService } from './storage.service';\nimport { environment } from '../../environments/environment';\n\nexport interface ApiImage {\n  _id: string;\n  name: string;\n  createdAt: Date;\n  url: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApisService {\n\n  constructor(\n    private httpService: HttpService,\n    private http: HttpClient,\n    private storageService: StorageService,\n    private router: Router\n  ) { }\n\n\n\n\n\n  // Image Upload Starts\n\n  imageUploadUrl = environment.apiUrl+'uploads';\n\n  getImages() {\n    return this.http.get<ApiImage[]>(`${this.imageUploadUrl}/image`);\n  }\n \n  uploadImage(blobData, name, ext,auth_token:any) {\n    const formData = new FormData();\n    formData.append('file', blobData, `myimage.${ext}`);\n    formData.append('name', name);\n    formData.append('auth_token', auth_token);\n\n    return this.http.post(`${this.imageUploadUrl}`, formData);\n  }\n \n  uploadImageFile(file: File, auth_token:any) {\n    const ext = file.name.split('.').pop();\n    const formData = new FormData();\n    formData.append('file', file, `myimage.${ext}`);\n    formData.append('name', file.name);\n    formData.append('auth_token', auth_token);\n\n    return this.http.post(`${this.imageUploadUrl}`, formData);\n  }\n \n  \n  deleteImage(id) {\n    return this.http.delete(`${this.imageUploadUrl}/image/${id}`);\n  }\n\n  b64toBlob(b64Data, contentType = '', sliceSize = 512) {\n    const byteCharacters = atob(b64Data);\n    const byteArrays = [];\n \n    for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n      const slice = byteCharacters.slice(offset, offset + sliceSize);\n \n      const byteNumbers = new Array(slice.length);\n      for (let i = 0; i < slice.length; i++) {\n        byteNumbers[i] = slice.charCodeAt(i);\n      }\n \n      const byteArray = new Uint8Array(byteNumbers);\n      byteArrays.push(byteArray);\n    }\n \n    const blob = new Blob(byteArrays, { type: contentType });\n    return blob;\n  }\n  // Image Upload End\n\n\n\n  getImageUrl(file:any){\n    return environment.fileUrl+file;\n  }\n  getThumbImageUrl(file:any){\n    return environment.fileUrl+'thumb/'+file;\n  }\n\n  sortArray(myArray:any) {\n    var result = myArray.reduce((unique, o) => {\n      if(!unique.some(obj => obj.id === o.id)) {\n        unique.push(o);\n      }\n      return unique;\n    },[]);\n   \n    return result.sort(function(a, b) {\n        return b.id-a.id ;\n    });\n}\n\nisDefined(x:any) {\n  if (x == null) {\n      return false;\n  }\n  if (x === null) {\n      return false;\n  }\n  if (typeof x === 'undefined') {\n      return false;\n  }\n  return true;\n}\n\n makeid(length:Number) {\n  var result           = '';\n  var characters       = 'abcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for ( var i = 0; i < length; i++ ) {\n     result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\n\n\nsignupComplete(postData: any): Observable<any> {\n  return this.httpService.post('signup-complete',postData);\n}\n\n\n //Customers\n\ndashboard(postData: any): Observable<any> {\n  return this.httpService.post('dashboard',postData);\n}\n\ncustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/all',postData);\n}\n\ninvoices(postData: any): Observable<any> {\n  return this.httpService.post('invoices/all',postData);\n}\n\nnextInvoice(postData: any): Observable<any> {\n  return this.httpService.post('invoices/next',postData);\n\n}\n\n\nnextEstimate(postData: any): Observable<any> {\n  return this.httpService.post('estimates/next',postData);\n\n}\n\nitems(postData: any): Observable<any> {\n  return this.httpService.post('items/all',postData);\n}\ncategories(postData: any): Observable<any> {\n  return this.httpService.post('categories/all',postData);\n}\n\npayments(postData: any): Observable<any> {\n  return this.httpService.post('payments/all',postData);\n}\n\nexpenses(postData: any): Observable<any> {\n  return this.httpService.post('expenses/all',postData);\n}\n\ntaxes(postData: any): Observable<any> {\n  return this.httpService.post('taxes/all',postData);\n}\nimages(postData: any): Observable<any> {\n  return this.httpService.post('images/all',postData);\n}\n\ndeleteCustomers(postData: any): Observable<any> {\n  return this.httpService.post('customers/delete',postData);\n}\n\ncustomerAdd(postData: any): Observable<any> {\n  return this.httpService.post('customers/add',postData);\n}\ncustomerEdit(auth_token:any,postData: any): Observable<any> {\n  return this.httpService.post('customers/edit/'+auth_token,postData);\n}\n\ncategoryAdd(postData: any): Observable<any> {\n  return this.httpService.post('categories/add',postData);\n}\nitemAdd(postData: any): Observable<any> {\n  return this.httpService.post('items/add',postData);\n}\nitemUpdate(postData: any): Observable<any> {\n  return this.httpService.post('items/edit',postData);\n}\n\n\ntaxAdd(postData: any): Observable<any> {\n  return this.httpService.post('tax/add',postData);\n}\n\n\ninvoiceAdd(postData: any): Observable<any> {\n  return this.httpService.post('invoices/add',postData);\n}\n\ninvoiceUpdate(postData: any): Observable<any> {\n  return this.httpService.post('invoices/edit',postData);\n}\n\n\n\nestimateAdd(postData: any): Observable<any> {\n  return this.httpService.post('estimates/add',postData);\n}\n\nestimateUpdate(postData: any): Observable<any> {\n  return this.httpService.post('estimates/edit',postData);\n}\n\n //Invoices\n //Items\n //Payments\n //Expenses\n //Items Categories\n //Expenses Categories\n //Taxes\n //Payment Merhods\n\n\n\n\n // get Industries industries\n  industries(postData: any): Observable<any> {\n    return this.httpService.post('industries',postData);\n  }\n  // get All Estimates\n  estimates(postData: any): Observable<any> {\n    return this.httpService.post('estimates/all',postData);\n  }\n\n  \n\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular'\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(public toastController: ToastController) { }\n  \n  async presentToast(infoMessage: string) {\n     const toast = await this.toastController.create({\n       message:infoMessage,\n       duration:3000\n     });\n     toast.present();\n\n  }\n}\n"]}