/**
 * @fileoverview added by tsickle
 * Generated from: lib/back-button/routing-state.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import { Router, NavigationEnd } from '@angular/router';
import { filter } from 'rxjs/operators';
import { NavController, Platform } from '@ionic/angular';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@ionic/angular";
/**
 * @record
 */
export function RoutingStateConfig() { }
if (false) {
    /** @type {?} */
    RoutingStateConfig.prototype.clearOn;
    /** @type {?} */
    RoutingStateConfig.prototype.root;
}
export class FivRoutingStateService {
    /**
     * @param {?} router
     * @param {?} navCtrl
     * @param {?} platform
     */
    constructor(router, navCtrl, platform) {
        this.router = router;
        this.navCtrl = navCtrl;
        this.platform = platform;
        this.history = [];
    }
    /**
     * @param {?=} config
     * @return {?}
     */
    loadRouting(config) {
        this.config = config;
        this.handleAndroidBackButton();
        this.router.events
            .pipe(filter((/**
         * @param {?} event
         * @return {?}
         */
        event => event instanceof NavigationEnd)))
            .subscribe((/**
         * @param {?} __0
         * @return {?}
         */
        ({ urlAfterRedirects }) => {
            if (urlAfterRedirects === this.getPreviousUrl(this.config.root)) {
                this.pop();
                this.pop();
            }
            // add url to history
            this.history.push(urlAfterRedirects);
            if (this.config && this.config.clearOn) {
                /** @type {?} */
                const clear = this.config.clearOn.some((/**
                 * @param {?} s
                 * @return {?}
                 */
                s => s === urlAfterRedirects));
                if (clear) {
                    this.clearHistory(urlAfterRedirects);
                }
            }
        }));
    }
    /**
     * @param {?} target
     * @return {?}
     */
    registerNavigateable(target) {
        if (isNavigateable(target)) {
            this.history.push(target);
        }
    }
    /**
     * @return {?}
     */
    handleAndroidBackButton() {
        this.platform.backButton
            .pipe(filter((/**
         * @return {?}
         */
        () => !isNavigateable(this.getCurrentUrl()))))
            .subscribe((/**
         * @param {?} event
         * @return {?}
         */
        event => {
            this.goBack();
        }));
        this.platform.backButton
            .pipe(filter((/**
         * @return {?}
         */
        () => isNavigateable(this.getCurrentUrl()))))
            .subscribe((/**
         * @param {?} event
         * @return {?}
         */
        event => {
            event.register(99999, (/**
             * @return {?}
             */
            () => {
                this.goBack('/');
            }));
        }));
    }
    /**
     * @return {?}
     */
    getHistory() {
        return this.history;
    }
    /**
     * @param {?=} defaultHref
     * @return {?}
     */
    getPreviousUrl(defaultHref = '/') {
        if (this.history.length >= 2) {
            return this.history[this.history.length - 2];
        }
        return defaultHref;
    }
    /**
     * @return {?}
     */
    pop() {
        return this.history.pop();
    }
    /**
     * @param {?} fromUrl
     * @return {?}
     */
    clearHistory(fromUrl) {
        this.history = this.history.filter((/**
         * @param {?} h
         * @return {?}
         */
        h => this.config.clearOn.some((/**
         * @param {?} s
         * @return {?}
         */
        s => s === h))));
        if (fromUrl !== this.config.root) {
            this.history.push(fromUrl);
        }
        this.history = this.history
            .reverse()
            .filter((/**
         * @param {?} item
         * @param {?} pos
         * @param {?} self
         * @return {?}
         */
        function (item, pos, self) {
            return self.indexOf(item) === pos;
        }))
            .reverse();
        if (this.history[0] !== this.config.root) {
            this.history = [this.config.root, ...this.history];
        }
    }
    /**
     * @return {?}
     */
    getCurrentUrl() {
        return this.history[this.history.length - 1];
    }
    /**
     * @param {?=} defaultHref
     * @return {?}
     */
    goBack(defaultHref = '/') {
        if (this.getHistory().length <= 1) {
            // close the app because we are at root level
            return navigator['app']
                ? navigator['app'].exitApp()
                : this.navCtrl.navigateBack(defaultHref);
        }
        /** @type {?} */
        const current = this.getCurrentUrl();
        if (typeof current !== 'string' && isNavigateable(current)) {
            current.dismiss();
            return this.pop();
        }
        /** @type {?} */
        const previous = this.getPreviousUrl(defaultHref);
        if (typeof previous === 'string') {
            return this.navCtrl.navigateBack(previous);
        }
        if (isNavigateable(previous)) {
            return this.navCtrl.navigateBack(this.getLatestUrl(defaultHref));
        }
    }
    /**
     * @param {?} defaultHref
     * @return {?}
     */
    getLatestUrl(defaultHref) {
        /** @type {?} */
        const urls = this.history.filter((/**
         * @param {?} e
         * @return {?}
         */
        e => !!(typeof e === 'string')));
        /** @type {?} */
        const latest = urls[urls.length - 1];
        if (urls.length > 0 && latest && typeof latest === 'string') {
            return latest;
        }
        return defaultHref;
    }
}
FivRoutingStateService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
FivRoutingStateService.ctorParameters = () => [
    { type: Router },
    { type: NavController },
    { type: Platform }
];
/** @nocollapse */ FivRoutingStateService.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function FivRoutingStateService_Factory() { return new FivRoutingStateService(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.NavController), i0.ɵɵinject(i2.Platform)); }, token: FivRoutingStateService, providedIn: "root" });
if (false) {
    /**
     * @type {?}
     * @private
     */
    FivRoutingStateService.prototype.history;
    /**
     * @type {?}
     * @private
     */
    FivRoutingStateService.prototype.config;
    /**
     * @type {?}
     * @private
     */
    FivRoutingStateService.prototype.router;
    /**
     * @type {?}
     * @private
     */
    FivRoutingStateService.prototype.navCtrl;
    /**
     * @type {?}
     * @private
     */
    FivRoutingStateService.prototype.platform;
}
/**
 * @param {?} object
 * @return {?}
 */
export function isNavigateable(object) {
    return !!object && object.dismiss !== undefined;
}
//# sourceMappingURL=data:application/json;base64,